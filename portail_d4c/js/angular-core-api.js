/*
This file uses a library under MIT Licence :

ods-widgets -- https://github.com/opendatasoft/ods-widgets
Copyright (c) 2014 - Opendatasoft

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
;(function(){'use strict';var mod=angular.module('d4c.core',['gettext','d4c.core.config','sortable','ngSanitize']);mod.directive("spinner",function(){return{template:'<div class="spinnerWrapper"></div>',replace:true,restrict:'E',link:function(scope,element,attrs){var scale=attrs.scale?parseInt(attrs.scale,10):3;var opts={lines:13,length:3*scale,width:1*scale,radius:3*scale,corners:1,rotate:0,color:'#000',speed:1,trail:60,shadow:false,hwaccel:false,className:'spinner',zIndex:2e9,top:'auto',left:'auto'};var spinner=new Spinner(opts).spin(element[0]);}};});mod.directive("collapsedList",function(){return{restrict:'A',transclude:true,template:'<ul class="collapsedList"><div ng-transclude></div><li class="toggleCollapsedList"><a href="" class="more" ng-click="toggleMore()"><span class="label-more" translate>More</span><span class="label-less" translate>Less</span></a></li></ul>',replace:true,scope:{collapsedList:'='},controller:function($scope,$element,$attrs){this.collapseOn=$scope.collapsedList;$scope.toggleMore=function(){jQuery('.collapsedHide',$element[0]).slideToggle();jQuery('.label-more',$element[0]).toggle();jQuery('.label-less',$element[0]).toggle();};},link:function(scope,element,attrs){}};});mod.directive("collapsedItem",function(){return{restrict:'A',require:['^collapsedList'],link:function(scope,element,attrs,controllers){var index=$.inArray(element[0],element.parent().children().get());if(index>controllers[0].collapseOn){element.addClass('collapsedHide');element.parents('.collapsedList').find('.toggleCollapsedList').show();}}};});mod.directive('autofocus',['$timeout',function($timeout){return{restrict:'A',link:function(scope,element,attrs){if(attrs.autofocus!=="false"){$timeout(function(){element[0].focus();},0);}}};}]);mod.directive('d4cAutofocus',['$timeout',function($timeout){return{restrict:'A',scope:false,link:function(scope,element,attrs){var focusable='a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]';if(element.is(focusable)&&scope.$eval(attrs.d4cAutofocus)){$timeout(function(){element[0].focus();},0);}}};}]);mod.directive('delayedApplyModel',function($parse){return{restrict:'A',link:function(scope,element,attrs){var model=attrs.delayedApplyModel;var delayedApplyModelGet=$parse(model);var applyChange=function(){scope.$apply(function(){delayedApplyModelGet.assign(scope,element.val());});};element.bind('keypress',function(e){var code=(e.keyCode?e.keyCode:e.which);if(code==13){applyChange();}});var valueOnFocus=element.val();element.bind('focus',function(){valueOnFocus=element.val();});element.bind('blur',function(){if(valueOnFocus!==element.val()){applyChange();}});scope.$watch(model,function(newValue,oldValue){element.val(newValue);});}};});mod.directive('ngModelOnchange',function(){return{restrict:'A',priority:100,require:'ngModel',link:function(scope,elm,attr,ngModelCtrl){if(attr.type==='radio'||attr.type==='checkbox')return;elm.off('input').off('keydown').off('change');elm.on('change',function(){scope.$apply(function(){ngModelCtrl.$setViewValue(elm.val());});});}};});mod.directive('debug',function(config){return{restrict:'E',template:'<div class="d4c-debug"><div class="d4c-debug__json-container" contenteditable="true" d4c-json-formatter="debugData" d4c-json-formatter-live-update="liveUpdate"></div></div>',scope:{data:'=',liveUpdate:'=?'},replace:true,link:function(scope){scope.debugData=null;angular.element(document).bind('debugToggle',function(){if(scope.debugData===null){scope.debugData=scope.data;}else{scope.debugData=null;}
scope.$apply();});}};});$(window).on('load',function(){$(document.body).on('keypress',function(e){if(e.charCode==68&&e.shiftKey&&!$(e.target).is('input, select, textarea')&&$(e.target).attr('contenteditable')!=='true'){$(document.body).toggleClass('js-show-debug');$(document).trigger('debugToggle');}});});mod.directive('tabs',function(){return{restrict:'E',transclude:true,scope:{syncToUrl:'@',name:'@'},template:'<div class="tabbable" ng-show="panes.length">'+'    <ul class="tabs">'+'        <li ng-repeat="pane in panes" ng-class="{active: pane.selected}" class="{{ pane.slug }} {{ pane.tabClass }}" ng-hide="pane.hidden">'+'            <a href="" ng-click="selectTab(pane)"><i ng-show="pane.icon" class="icon-{{ pane.icon }}"></i> {{ pane.title }}</a>'+'        </li>'+'    </ul>'+'    <div class="tab-content" ng-transclude></div>'+'</div>',replace:true,controller:['$scope','$location','$rootScope',function($scope,$location,$rootScope){var panes=$scope.panes=[];var selected_index;$scope.selectTab=function(pane,force){$rootScope.$broadcast('tab-change',pane);if(!pane.selected){angular.forEach(panes,function(p){p.selected=false;});pane.selected=true;selected_index=$.map(panes,function(p){return p.selected;}).indexOf(true);if($scope.syncToUrl!=='false'&&!force){$location.replace();$location.hash(pane.slug);}}};this.selectTab=$scope.selectTab;this.addPane=function(pane){panes.push(pane);if(panes.length==1){$scope.selectTab(pane,true);}};$scope.$on('selectTab',function(e,name,slug){if(name===$scope.name){$scope.selectTab(panes.filter(function(p){return p.slug===slug;})[0]);}});$scope.$watch(function(){return $.map(panes,function(p){return p.visible;});},function(nv,ov){if($scope.panes[selected_index]&&!$scope.panes[selected_index].visible){if(nv&&nv.indexOf(true)>=0){$scope.select($scope.panes[nv.indexOf(true)]);}}},true);}]};});mod.directive('pane',function(translate,$filter,$location){return{require:'^tabs',restrict:'E',transclude:true,template:'<div class="tab-pane" ng-class="{active:struct.selected}"><div ng-if="struct.selected || !struct.autoUnload" ng-transclude></div></div>',replace:true,scope:true,link:function(scope,element,attrs,tabsCtrl){scope.struct={title:translate(attrs.title),slug:attrs.slug?attrs.slug:$filter('slugify')(attrs.title),icon:attrs.icon,hidden:('ngShow'in attrs&&!scope.$eval(attrs.ngShow))||('ngHide'in attrs&&scope.$eval(attrs.ngHide)),tabClass:attrs.tabClass,autoUnload:attrs.paneAutoUnload=='true'};element.removeAttr('title');tabsCtrl.addPane(scope.struct);if($location.hash()===scope.struct.slug){tabsCtrl.selectTab(scope.struct);}
scope.$watch(function(){return('ngShow'in attrs&&!scope.$eval(attrs.ngShow))||('ngHide'in attrs&&scope.$eval(attrs.ngHide));},function(nv,ov){scope.struct.hidden=nv;});}};});mod.directive('currentItem',function(){return{restrict:'A',scope:true,link:function(scope,element,attrs,ngModel){scope.currentItem=undefined;scope.toggleCurrentItem=function(item){if(scope.currentItem==item){scope.currentItem=undefined;}else{scope.currentItem=item;}};}};});mod.directive('dateTimePicker',function(){var lpad=function(val){val=val.toString();while(val.length<2){val='0'+val;}
return val;};return{restrict:'E',replace:true,scope:{ngModel:'=',format:'@',d4cDisabled:'='},require:'ngModel',template:'<div class="date-time-picker">'+'<div ng-class="{\'date\': true, \'input-append\': !d4cDisabled}">'+'<input type="text" class="input-medium" type="text" ng-disabled="d4cDisabled" ng-model="internalModel" placeholder="{{ format }}" readonly></input>'+'<span class="add-on" ng-hide="d4cDisabled">'+'<i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>'+'</span>'+'</div>'+'<span ng-if="timezone" class="timezone" translate>Local time ({{timezone}})</span>'+'</div>',link:function(scope,element,attrs,ngModel){element.datetimepicker({maskInput:true,todayHighlight:true,format:scope.format,weekStart:1});var isDateTime=scope.format.indexOf(' ')>-1;scope.timezone=null;if(isDateTime){var offset=new Date().getTimezoneOffset();scope.timezone=((offset<0?'+':'-')+
lpad(parseInt(Math.abs(offset/60),10))+':'+
lpad(Math.abs(offset%60)));}
scope.$watch('internalModel',function(nv,ov){if(nv){if(isDateTime){scope.ngModel=(moment(nv,"YYYY-MM-DD HH:mm:ss")).toISOString().replace('.000','').replace('Z',"+00:00");}else{scope.ngModel=nv;}}});scope.$watch('ngModel',function(nv,ov){var date;if(nv){if(isDateTime){date=moment(nv);scope.internalModel=date.format('YYYY-MM-DD HH:mm:ss');}else{date=moment(nv);scope.internalModel=date.format('YYYY-MM-DD');}
element.datetimepicker('setValue',scope.internalModel);}});var source=element.find('input');element.bind('changeDate',function(){scope.$apply(function(){scope.internalModel=source.val();});});}};});mod.directive('slugfield',function($filter){return{require:'ngModel',restrict:'A',link:function(scope,element,attrs,ngModel){scope.$watch(attrs.slugfield,function(nv,ov){if(nv!==ov){var slug=$filter('slugify')($filter('normalize')(nv));ngModel.$viewValue=slug;ngModel.$setViewValue(ngModel.$viewValue);element.val(slug);}},true);}};});mod.directive('d4cForm',function(){var formUniqueId=0;return{templateUrl:'/static/d4c/html/d4c_form.html',replace:true,restrict:'E',require:['d4cForm','form','^?form'],scope:{model:'=',overrideModel:'=',formDefinition:'=',errors:'=',valuesLanguage:'=',context:'='},link:function(scope,element,attrs,formControllers){scope.field_pattern=/^{{.*}}$/;if(typeof scope.model==="undefined"){scope.model={};}
scope.$watch('formDefinition',function(nv,ov){if(nv){scope.has_advanced=$.grep(scope.formDefinition,function(elt){return elt.advanced;}).length>0;$.each(scope.formDefinition,function(index,field){if(field.hasOwnProperty('default')&&!scope.model.hasOwnProperty(field.name)){scope.model[field.name]=angular.copy(field['default']);}
if(field.depends_on){if(!angular.isArray(field.depends_on_value)){field.depends_on_value=[field.depends_on_value];}}});}});if(formControllers[2]){formControllers[2].$addControl(formControllers[1]);}
if(attrs.name){scope.$parent[attrs.name]=scope[attrs.name];}
scope.showAdvanced=false;scope.toggleAdvanced=function(e){e.preventDefault();scope.showAdvanced=!scope.showAdvanced;};scope.isOverridden=function(field){return scope.overrideModel&&angular.isDefined(scope.overrideModel[field.name]);};},controller:function($scope){$scope.form_id="form"+(++formUniqueId);this.isOverridable=function(){return!!$scope.overrideModel;};this.isOverridden=function(field){return $scope.isOverridden(field);};this.override=function(field){if(angular.isDefined($scope.model[field.name])){$scope.overrideModel[field.name]=angular.copy($scope.model[field.name]);}else{var defaultValue='';if(field.type==='list'||field.type==='enumlist'){defaultValue=[];}
$scope.overrideModel[field.name]=defaultValue;}};this.cancelOverride=function(field){delete $scope.overrideModel[field.name];};}};});mod.directive('d4cFormField',function(APIXHRService,$q){return{restrict:'E',templateUrl:'/static/d4c/html/d4c_form_field.html',replace:true,require:'^d4cForm',scope:{model:'=',field:'=',d4cDisabled:'=',valuesLanguage:'=',d4cFormId:"=",addentrylabel:'=?',context:'='},link:function(scope,element,attrs,formController){if(!scope.addentrylabel){scope.addentrylabel='Add an entry';}
var canceller=null;scope.d4cFormSuggestions=function(q,arg){if(canceller){canceller.resolve();}
canceller=$q.defer();return APIXHRService("GET",arg,{query:q},"publish",canceller.promise).success(function(){canceller=null;});};scope.setValue=function(value,field){scope.model[field.name]=value.value;};scope.isOverridable=formController.isOverridable;scope.isOverridden=function(){return formController.isOverridden(scope.field);};scope.mapValues=function(i){return i.value;};scope.override=formController.override;scope.cancelOverride=formController.cancelOverride;scope.id=scope.d4cFormId+'-'+scope.field.name;scope.removeObject=function(index){if(angular.isArray(scope.model[scope.field.name])){scope.model[scope.field.name].splice(index,1);}};scope.addEntry=function(){if(scope.field.type==="objectlist"||scope.field.type==="unconfiguredobject"){if(!scope.model[scope.field.name]){scope.model[scope.field.name]=[];}
scope.model[scope.field.name].push({});}};scope.prepareMetaForEnum=function(meta){if(angular.isString(meta)){return{label:meta,value:meta};}
return meta;};}};});mod.directive('oauth2',function($compile,$window,$http){var recompile=function(scope,element){element.html($compile('<a ng-if="!authconfig[\'token\']" ng-click="openOauth2Authorization()" translate>Authorize</a>'+'<a ng-if="authconfig[\'token\']" ng-click="openOauth2Authorization()" translate>Refresh token</a>')(scope));};return{restrict:'E',replace:'true',template:'<div></div>',require:'^form',scope:{model:'=',authconfig:'=',},link:function(scope,element,attrs,formController){var url,w;scope.$watch('authconfig',function(nv,ov){if(formController&&formController.$valid){$http.post('/api/management/1.0/apis/get_oauth_authorization_url',nv).success(function(data){url=data;recompile(scope,element);});scope.openOauth2Authorization=function(){window.addEventListener('message',function(e){scope.model=e.data;w.close();scope.$apply();recompile(scope,element);});w=$window.open(url);};}},true);}};});mod.directive('d4cKeyValue',function(){return{restrict:'E',replace:true,template:'<div class="key-value-input"><input ng-model="key" type="text"><span>=</span><input ng-model="value" type="text"></div>',scope:{ngModel:'='},link:function(scope,element,attrs){scope.key='';scope.value='';scope.$watch("ngModel",function(nv){angular.forEach(nv,function(value,key){if(key!=="$$hashKey"){scope.value=value;scope.key=key;}});});scope.$watch("key",function(nv){var item={};item[nv]=scope.value;angular.copy(item,scope.ngModel);},true);scope.$watch("value",function(nv){var item={};item[scope.key]=nv;angular.copy(item,scope.ngModel);},true);}};});mod.directive('d4cCollapsibleFixme',function(){return{restrict:'A',link:function(scope,element,attrs){var collapse=element.find('[d4c-collapse]');var panel=element.find('[d4c-collapse-panel]');var collapsible=false;var collapsed=false;var inList=false;var autoCollapse=true;scope.$evalAsync(function(){if(panel.attr('d4c-collapse-panel')){if(scope.$eval(panel.attr('d4c-collapse-panel'))){panel.hide();collapsed=true;}}
if(element.parents('.list').length>0){inList=true;}
if(attrs.d4cCollapsibleFixme){scope.$watch(attrs.d4cCollapsibleFixme,function(nv,ov){collapse=element.find('[d4c-collapse]');panel=element.find('[d4c-collapse-panel]');scope.$watch(attrs.d4cCollapsibleHead,function(nv,ov){if(nv&&!collapsible){collapse.css('cursor','pointer');collapse.on('click',function toggle(){panel.toggle();collapsed=!collapsed;});collapsible=true;if(inList&&autoCollapse){panel.toggle();collapsed=true;}}else if(!nv&&collapsible){collapse.css('cursor','inherit');collapse.off('click');collapsible=false;panel.show();collapsed=false;}else if(!nv&&!collapsible){autoCollapse=false;}});},true);}else{collapse.css('cursor','pointer');collapse.on('click',function toggle(){panel.toggle();collapsed=!collapsed;});}});}};});mod.directive('main',function(){return{restrict:'E',link:function(scope,element,attrs){scope.toggleAsideLeft=function(){if(scope.showAside=='left'){scope.showAside='';}else{scope.showAside='left';}};scope.toggleAsideRight=function(){if(scope.showAside=='right'){scope.showAside='';}else{scope.showAside='right';}};}};});mod.directive('tagField',function($compile,$timeout){return{restrict:'A',require:['^?form'],scope:{modelitems:'=ngModel',tagFieldHelp:'=',suggestionsTag:'&',d4cDisabled:'='},link:function(scope,element,attrs,ctrls){var formController=ctrls[0];if(attrs.suggestionsTag){element.html($compile('<div class="tagField" ng-class="{\'disabled\': d4cDisabled}">'+'<d4c-suggestions ng-model="newTag" d4c-disabled="d4cDisabled" source-callback="suggestionsTag({q:q})" selection-callback="addSuggestion(value)"><span ng-bind-html="item._highlightResult.value.value"></span></d4c-suggestions> '+'<i class="icon-question-sign" d4c-tooltip="{{ tagFieldHelp }}"></i>'+'<div class="tags">'+'<div class="tag" ng-click="deleteTag($index)" ng-repeat="tag in tags">{{ tag }}</div>'+'</div>'+'</div>')(scope));}else{element.html($compile('<div class="tagField" ng-class="{\'disabled\': d4cDisabled}">'+'<input type="text" ng-model="newTag" ng-trim="false" ng-disabled="d4cDisabled" /> '+'<i class="icon-question-sign" d4c-tooltip="{{ tagFieldHelp }}"></i>'+'<div class="tags">'+'<div class="tag" ng-click="deleteTag($index)" ng-repeat="tag in tags">{{ tag }}</div>'+'</div>'+'</div>')(scope));}
var input=element.find('input');scope.$watch('modelitems',function(nv){if(nv){if(angular.isString(nv)){scope.tags=[nv];}else{scope.tags=nv;}}},true);scope.$watch('tags',function(nv){if(nv&&angular.isArray(nv)){scope.modelitems=nv;}},true);scope.addSuggestion=function(value){scope.addTag(value.value);};scope.addTag=function(value) {if(angular.isUndefined(scope.tags)){scope.tags=[];}
if(scope.tags.indexOf(value)===-1){scope.tags.push(value);}
if(formController){formController.$setDirty();}
$timeout(function(){input.focus();},0);};scope.deleteTag=function(index) {if(!scope.d4cDisabled){scope.tags.splice(index,1);}
if(formController){formController.$setDirty();}};angular.element(input).bind('keydown',function(e){var inputValue=input.val();if(e.keyCode===13&&inputValue!==''){scope.addTag(inputValue);scope.newTag=null;input.val('');scope.$apply();input.focus();return false;}});}};});mod.directive('quota',function(translate){return{restrict:'E',scope:{quota:"=quota",restrictUnit:"@",label:"@"},templateUrl:'/static/d4c/html/quota.html',link:function(scope,element,attrs){scope.orderUnits=["second","minute","hour","day","month"];scope.units={"second":translate("second"),"minute":translate("minute"),"hour":translate("hour"),"day":translate("day"),"month":translate("month")};scope.translate=translate;}};});mod.directive('enumList',function(){return{restrict:'E',require:'ngModel',scope:{model:'=ngModel',values:'=',uniqueValues:'='},replace:true,template:'<div class="enum-list">'+'<ul html-sortable ng-model="objectModel" class="unstyled">'+'<li ng-repeat="item in objectModel">'+'<select ng-options="key as value for (key,value) in item.values" ng-model="item.item"></select>'+'<i class="handle icon-move"></i>'+'<i class="icon-remove" ng-click="remove($index)"></i>'+'</li>'+'</ul>'+'<button type="button" class="btn" ng-click="add(\'\')" ng-disabled="addButtonDisabled"><i class="icon-plus"></i></button>'+'</div>',link:function(scope,element,attrs,ngModel){var init=true;var reservedValues=[];scope.addButtonDisabled=false;scope.objectModel=[];if(angular.isArray(scope.values)){var values={};for(var i=0;i<scope.values.length;i++){values[scope.values[i]]=scope.values[i];}
scope.values=values;}
var getSelectValues=function(item){var values={};var reservedValuesWithoutItem=angular.copy(reservedValues);reservedValuesWithoutItem.splice(reservedValuesWithoutItem.indexOf(item),1);angular.forEach(scope.values,function(value,key){if($.inArray(value,reservedValuesWithoutItem)===-1){values[key]=value;}});return values;};var updateSelectValues=function(){var i;if(!scope.uniqueValues)return;reservedValues=[];for(i=0;i<scope.objectModel.length;i++){reservedValues.push(scope.objectModel[i].item);}
for(i=0;i<scope.objectModel.length;i++){var item=scope.objectModel[i];item.values=getSelectValues(item.item);if(item.item===''){item.item=Object.keys(item.values)[0];}}
scope.addButtonDisabled=Object.keys(scope.values).length===reservedValues.length;};scope.add=function(item){scope.objectModel.push({item:!scope.uniqueValues&&item===''?Object.keys(scope.values)[0]:item,values:scope.values});init=false;};scope.remove=function(index){scope.objectModel.splice(index,1);};scope.$watch('model',function(nv,ov){if(nv&&init){for(var i=0;i<scope.model.length;i++){scope.add(scope.model[i]);}
updateSelectValues();}});scope.$watch('objectModel',function(nv,ov){if(nv!==ov){updateSelectValues();scope.model=[];for(var i=0;i<scope.objectModel.length;i++){scope.model.push(scope.objectModel[i].item);}}},true);}};});mod.directive('hierarchicalField',function($compile,$timeout){return{restrict:'E',require:'ngModel',scope:{'hierarchy':'=','model':'=ngModel','readonly':'=ngReadonly'},replace:true,template:'<div class="hierarchical-field d4c-form__vertical-controls"></div>',link:function(scope,element){scope.needFocus=-1;scope.addFields=function(defaultValues){var div=$('<div class="field-group d4c-align-horizontal d4c-form__horizontal-controls"></div>');for(var i=0;i<scope.hierarchy.length;i++){var readonly=scope.readonly?' readonly':'';var value=defaultValues?' value="'+defaultValues[i]+'"':'';var input=$('<input type="text" class="d4c-form__control"'+value+readonly+' remove-field>');input.attr('placeholder',scope.hierarchy[i]);if(i===0){input.attr('list','autocomplete-facet');}
input.on('change',function(){if($(this)[0]===element.find('input').last()[0]){scope.addFields();element.find('.field-group').last().find('input').first().focus();}
if($(this).val()===''){var remove=true;if($(this)[0]===$(this).parent().find('input').last()[0]&&$(this).parent()[0]!==$(this).parent().next()){$(this).parent().next().find('input').first().change();}
if(element.find('.field-group').last()[0]===$(this).parent()[0]){if($(this).parent().prev().find('input').last().val()!==''){remove=false;}}
angular.forEach($(this).parent().find('input'),function(input){if($(input).val()!==''){remove=false;}});if(remove){$(this).parent().remove();element.find('.field-group').last().find('input').first().focus();}}
scope.updateModel();});input.on('keydown',function(event){if($(this)[0]===$(this).parent().find('input').last()[0]&&event.keyCode===9){scope.needFocus=scope.getElementPosition($(this))+1;}
if(event.keyCode===13){scope.needFocus=scope.getElementPosition($(this));}});var elem=angular.element(''+'<div class=d4c-form__group>');$compile(input)(scope);div.append(input);if(i==scope.hierarchy.length-1){input.keyup();}}
element.append(div);};scope.getElementFromPosition=function(pos){var el=element.find('.field-group input').eq(pos);return el[0]?el:element.find('.field-group').last().find('input').first();};scope.getElementPosition=function(el){for(var i=0;i<element.find('.field-group input').length;i++){if(el[0]===element.find('.field-group input').eq(i)[0]){return i;}}
return-1;};scope.updateModel=function(){var fields={};angular.forEach(element.find('.field-group'),function(inputs){var takeInAccount=true;var keys=[];angular.forEach($(inputs).find('input'),function(input){var val=$(input).val();keys.push(val);if(val===''){takeInAccount=false;}});if(takeInAccount){var value=keys.splice(-1,1);var index=keys.join('.');if(fields[index]){fields[index]=fields[index].concat(value);}else{fields[index]=value;}}});if(!isObjectEmpty(scope.model)||!isObjectEmpty(fields)){scope.model=fields;scope.$apply();}};scope.$watch('model',function(newValue){$timeout(function(){element.find('.field-group').remove();var keyValues;for(var key in newValue){if(newValue[key].length==1){keyValues=[key].concat(newValue[key]);}else{if(!angular.isArray(newValue[key])){var item=[key].concat(newValue[key]);keyValues=item;}else{keyValues=[];angular.forEach(newValue[key],function(value){var item=[key].concat(value);keyValues.push(item);});}}
if(keyValues.length>=scope.hierarchy.length){if(!angular.isArray(keyValues[0])){scope.addFields(keyValues);}else{angular.forEach(keyValues,function(item){scope.addFields(item);});}}else{delete newValue[key];}}
scope.addFields();if(scope.needFocus!==-1){scope.getElementFromPosition(scope.needFocus).focus();scope.needFocus=-1;}},0);},true);}};});mod.directive('removeField',function(){function addIcon(element){if(element.find('i').length)
return;var icon=$('<i class="icon-minus-sign"></i>');icon.on('click',function(){angular.forEach(element.find('input'),function(input){$(input).val('');$(input).change();});});element.append(icon);}
function removeIcon(element){element.find('i').remove();}
return{restrict:'A',link:function(scope,element){if(element.attr('readonly')){return;}
element.on('keyup',function(){if($(this).val()){addIcon(element.parent());}else{var remove=true;angular.forEach(element.parent().find('input'),function(input){if($(input).val()!==''){remove=false;}});if(remove){removeIcon(element.parent());}}});}};});mod.directive('datalistValues',function(translate){return{restrict:'A',scope:{datalistValues:'=',datalistValuesLanguage:'='},link:function(scope,element,attrs){var build=function(language){var dlist=angular.element('<datalist />');dlist.attr('id',Math.random().toString(36).substring(7)+'-values');if(element.attr('list')) {$(document.body).find('datalist#'+element.attr('list')).remove();}
element.attr('list',dlist.attr('id'));for(var i=0;i<scope.datalistValues.length;i++){var item=scope.datalistValues[i];var value,label;var alreadyTranslated=false;if(angular.isObject(item)){if(angular.isObject(item.labels)){alreadyTranslated=true;value=item.labels[language];label='';}else{value=item.value;label=item.label;}}else{value=item;label='';}
if(language&&!alreadyTranslated){value=translate(value,language);}
if(angular.isDefined(value)&&value!==null){dlist.append(angular.element('<option value="'+value+'">'+label+'</option>'));}}
element.after(dlist);};scope.$watch('datalistValuesLanguage',function(){if(angular.isDefined(scope.datalistValues)&&(!angular.isArray(scope.datalistValues)||scope.datalistValues.length>0)){build(scope.datalistValuesLanguage);}});scope.$watch('datalistValues',function(nv){if(angular.isDefined(scope.datalistValues)&&(!angular.isArray(scope.datalistValues)||scope.datalistValues.length>0)){build(scope.datalistValuesLanguage);}});}};});mod.directive('datasetFieldSelector',['translate',function(translate){return{restrict:'E',require:'ngModel',replace:true,template:'<div class="dataset-field-selector">'+'<select ng-disabled="d4cDisabled" ng-model="model" ng-options="field.name as field.label + \' (\' + translate(field.type) + \')\' for field in fields">'+'<option ng-if="allowNone" value="" translate>(none)</option>'+'</select>'+'</div>',scope:{'model':'=ngModel','fields':'=','d4cDisabled':'=','allowNone':'=?'},link:function(scope,element,attrs){scope.allowNone=Boolean(scope.allowNone)===scope.allowNone?scope.allowNone:true;scope.translate=translate;},controller:function($scope){}};}]);mod.directive('multipleDatasetFieldSelector',function($filter){return{restrict:'E',require:'ngModel',replace:true,template:'<div class="multiple-dataset-field-selector">'+'<div ng-show="!d4cDisabled">'+'<ul html-sortable ng-model="selectedFields" class="unstyled">'+'<li ng-repeat="field in selectedFields">'+'<div class="field-label" title="{{ field.label }}">{{ field.label }}</div>'+'<i class="handle icon-reorder"></i>'+'<i class="icon-remove" ng-click="remove(field)"></i>'+'</li>'+'</ul>'+'</div>'+'<ul ng-show="d4cDisabled" ng-model="selectedFields" class="unstyled">'+'<li ng-repeat="field in selectedFields">'+'<div class="field-label" title="{{ field.label }}">{{ field.label }}</div>'+'</li>'+'</ul>'+'<ul class="unstyled discarded">'+'<li ng-repeat="field in discardedFields">'+'<div class="field-label" title="{{ field.label }}">{{ field.label }}</div>'+'<i ng-if="!d4cDisabled" class="icon-plus" ng-click="add(field)"></i>'+'</li>'+'</ul>'+'</div>',scope:{'model':'=ngModel','fields':'=','visualization':'@','d4cDisabled':'='},link:function(scope,element,attrs){scope.discardedFields=[];scope.selectedFields=[];scope.$watch('fields',function(nv,ov){if(nv){scope.selectedFields=[];scope.discardedFields=[];if(scope.model&&scope.model.length>0){var vizFields=scope.fields;if(scope.visualization){vizFields=$filter('fieldsForVisualization')(vizFields,scope.visualization);}
angular.forEach(vizFields,function(f){var index=scope.model.indexOf(f.name);if(index<0){scope.discardedFields.push(f);}else{scope.selectedFields[index]=f;}});}else{var fields=angular.copy(scope.fields);if(scope.visualization){fields=$filter('fieldsForVisualization')(fields,scope.visualization);}
scope.selectedFields=fields;}}},true);scope.$watch('selectedFields',function(nv,ov){if(nv!==ov){scope.selectedFields=scope.selectedFields.filter(function(f){return angular.isDefined(f);});scope.model=$.map(scope.selectedFields,function(f){return f.name;});var vizFields=scope.fields;if(scope.visualization){vizFields=$filter('fieldsForVisualization')(vizFields,scope.visualization);}
if(scope.model&&scope.model.join('||')===$.map(vizFields,function(f){return f.name;}).join('||')){scope.model=[];}}},true);scope.add=function(field){scope.selectedFields.push(field);scope.discardedFields.splice(scope.discardedFields.indexOf(field),1);};scope.remove=function(field){scope.discardedFields.push(field);scope.selectedFields.splice(scope.selectedFields.indexOf(field),1);};}};});mod.directive('repeatCount',function(){return{restrict:'A',link:function(scope,element,attrs){var count=attrs.repeatCount;if(count===0){element.css('display','none');}else if(count>1){for(var i=1;i<count;i++){var clone=element.clone();element.after(clone);}}}};});mod.directive('scrollShadow',function($window){return{scope:{scrollDirection:'@'},link:function(scope,element,attrs){scope.scrollDirection=scope.scrollDirection||'horizontal';function verticalShadows(){if(element[0].scrollTop>0){element.addClass('verticalScrollStart');}else{element.removeClass('verticalScrollStart');}
if(element[0].scrollHeight>element[0].offsetHeight+element[0].scrollTop){element.addClass('verticalScrollEnd');}else{element.removeClass('verticalScrollEnd');}}
function horizontalShadows(){if(element[0].scrollLeft>0){element.addClass('horizontalScrollStart');}else{element.removeClass('horizontalScrollStart');}
if(element[0].scrollWidth>element[0].offsetWidth+element[0].scrollLeft){element.addClass('horizontalScrollEnd');}else{element.removeClass('horizontalScrollEnd');}}
var shadows=scope.scrollDirection=='vertical'?verticalShadows:horizontalShadows;element.on('scroll',shadows);$($window).on('resize.scrollShadow',shadows);if(angular.isUndefined(window.MutationObserver)){scope.$watch(shadows,function(){});}else{var observer=new MutationObserver(shadows);observer.observe(element[0],{childList:true,subtree:true});scope.$on('$destroy',function(){observer.disconnect();});}
scope.$on('$destroy',function(){$($window).off('.scrollShadow');});shadows();}};});function initializeMap(element,MapHelper,D4CWidgetsConfig,customOptions){var map=new L.D4CMap(element,customOptions);var defaultLoc=MapHelper.getLocationStructure(D4CWidgetsConfig.defaultMapLocation);map.setView(defaultLoc.center,defaultLoc.zoom);return map;}
mod.directive('d4cPointSelector',function(D4CWidgetsConfig,MapHelper,config){return{restrict:'E',require:'ngModel',replace:true,template:'<div class="map-point-selector">'+'<div class="map"></div>'+'</div>',link:function(scope,element,attrs,ctrl){scope.scrollWheelZoom=attrs.scrollWheelZoom!=='false';scope.$watch(attrs.invalidateSize,function(){map.invalidateSize();});var map=initializeMap(element.find('.map')[0],MapHelper,D4CWidgetsConfig,{scrollWheelZoom:scope.scrollWheelZoom,basemapsList:[config.DEFAULT_BASEMAP]});var onMarkerDragged=function(e){scope.$apply(function(){ctrl.$setViewValue(e.target.getLatLng());});};var unwatch=scope.$watch(attrs.ngModel,function(nv,ov){if(nv){map.setView(nv,14);L.marker(nv,{opacity:0.4}).addTo(map);var marker=L.marker(nv,{draggable:true}).addTo(map);marker.on('dragend',onMarkerDragged);}
else{var controlToolbar=new L.Control.Draw({draw:{polyline:false,polygon:false,rectangle:false,circle:false}}).addTo(map);map.on('draw:created',function(e){var marker=e.layer;marker.options.draggable=true;map.addLayer(marker);scope.$apply(function(){ctrl.$setViewValue(marker.getLatLng());});marker.on('dragend',onMarkerDragged);map.removeControl(controlToolbar);});}
unwatch();});}};});mod.directive('d4cDrawMap',function(D4CWidgetsConfig,MapHelper,config){return{restrict:'E',require:'ngModel',replace:true,template:'<div class="draw-shape-map">'+'<div class="map"></div>'+'</div>',link:function(scope,element,attrs,ctrl){scope.scrollWheelZoom=attrs.scrollWheelZoom!=='false';var map=initializeMap(element.find('.map')[0],MapHelper,D4CWidgetsConfig,{scrollWheelZoom:scope.scrollWheelZoom,basemapsList:[config.DEFAULT_BASEMAP]});var editLayer=new L.FeatureGroup();map.addLayer(editLayer);var oldShapeLayer=new L.FeatureGroup();map.addLayer(oldShapeLayer);var drawControl=new L.Control.Draw({edit:{featureGroup:editLayer}});map.addControl(drawControl);var updateModel=function(){scope.$apply(function(){ctrl.$setViewValue(editLayer.toGeoJSON());});};map.on('draw:created',function(e){e.layer.options.opacity=0.5;editLayer.addLayer(e.layer);updateModel();});map.on('draw:edited',updateModel);map.on('draw:deleted',updateModel);var bounds=null;scope.$watch(attrs.invalidateSize,function(){map.invalidateSize();});var addGeoJsonToGroup=function(geoJson,group){L.geoJson(geoJson,{onEachFeature:function(feature,layer){group.addLayer(layer);}});};var unwatch=scope.$watch(attrs.ngModel,function(nv,ov){if(nv){if(nv.type==="MultiPolygon"){nv.coordinates.forEach(function(shapeCoords,i){addGeoJsonToGroup({type:"Polygon",coordinates:shapeCoords},oldShapeLayer);});}
else{addGeoJsonToGroup(nv,oldShapeLayer);}
bounds=oldShapeLayer.getBounds();map.fitBounds(bounds);}
unwatch();});}};});mod.directive('d4cMarkerMap',function(D4CWidgetsConfig,MapHelper,config){return{restrict:'E',require:'ngModel',replace:true,template:'<div class="map-point-selector">'+'<div class="map"></div>'+'</div>',link:function(scope,element,attrs,ctrl){var map=initializeMap(element.find('.map')[0],MapHelper,D4CWidgetsConfig,{basemapsList:[config.DEFAULT_BASEMAP]});scope.$watch(attrs.ngModel,function(nv,ov){if(isNullOrUndefined(nv))return;map.setView(nv,14);L.marker(nv).addTo(map);});}};});mod.directive('d4cGeoshapeMap',function(D4CWidgetsConfig,MapHelper,config){return{restrict:'E',require:'ngModel',replace:true,template:'<div class="geoshape-map">'+'<div class="map"></div>'+'</div>',link:function(scope,element,attrs,ctrl){var map=initializeMap(element.find('.map')[0],MapHelper,D4CWidgetsConfig,{basemapsList:[config.DEFAULT_BASEMAP]});scope.$watch(attrs.ngModel,function(nv,ov){if(isNullOrUndefined(nv))return;var geoshapeLayer=L.geoJson(nv).addTo(map);map.fitBounds(geoshapeLayer.getBounds());});}};});mod.directive('virtualDatasetContext',function(D4CAPI){return{restrict:'A',link:function(scope,element,attrs){var unwatch=scope.$watch(attrs.virtualDatasetContextDataset,function(nv,ov){if(nv&&nv.datasetid){var contextName=attrs.virtualDatasetContext;var parameters=scope.$eval(attrs.virtualDatasetContextParameters);scope[contextName]={'name':contextName,'type':'dataset','apikey':null,'dataset':nv,'domainUrl':D4CAPI.getDomainURL(null),'parameters':parameters};unwatch();}});}};});mod.directive('virtualCatalogContext',function(D4CAPI){return{restrict:'A',link:function(scope,element,attrs){var contextName=attrs.virtualCatalogContext;scope[contextName]={'name':contextName,'type':'catalog','domain':null,'domainUrl':D4CAPI.getDomainURL(null),'apikey':null,'parameters':{}};}};});mod.directive('keywordLabels',function(){return{restrict:'E',replace:true,template:'<div class="keyword-labels"><span class="label label-info" ng-repeat="keyword in keywords" ng-click="toggleRefine(keyword)" ng-class="{\'active\': isKeywordActive(keyword), \'no-click\': noClick}">{{keyword}}</span></div>',scope:{dataset:'=',apiParams:'=',noClick:'@?'},controller:function($scope){$scope.toggleRefine=function(facetPath){var refineKey="refine.keyword";if(!$scope.apiParams[refineKey]||$scope.apiParams[refineKey]===undefined){$scope.apiParams[refineKey]=[facetPath];}else{var currentRefinements=$scope.apiParams[refineKey];for(var i=0;i<currentRefinements.length;i++){var refinement=currentRefinements[i];if(refinement==facetPath){currentRefinements.splice(i,1);if(currentRefinements.length===0)
delete $scope.apiParams[refineKey];return;}}
$scope.apiParams[refineKey].push(facetPath);}};$scope.isKeywordActive=function(facetPath){if($scope.apiParams["refine.keyword"]){var refinements=$scope.apiParams["refine.keyword"];for(var i=0;i<refinements.length;i++){var ref=refinements[i];if(ref==facetPath){return true;}}}
return false;};if(angular.isArray($scope.dataset.metas.keyword)){$scope.keywords=$scope.dataset.metas.keyword;}else{$scope.keywords=[$scope.dataset.metas.keyword];}}};});mod.directive('datasetIcon',function($filter){return{restrict:'AE',replace:true,template:'<li>'+'<a href="{{ url }}{{ searchOptions.headless?\'&headless=\'+searchOptions.headless:\'\' }}" target="_self" title="{{ title||\'\' | capitalize | translate }}">'+'<i class="icon-{{ icons[name] }} icon-large"></i>'+'</a>'+'</li>',scope:true,link:function(scope,element,attrs){scope.icons={'metas':'list','table':'table','map':'globe','calendar':'calendar','images':'picture','analyze':'bar-chart','monitoring':'bar-chart','export':'download-alt','api':'laptop'};scope.name=attrs.name?attrs.name:'';scope.title=!attrs.title?$filter('capitalize')(attrs.name):attrs.title;scope.urlRoot=attrs.urlRoot||'';scope.url=!attrs.url?scope.urlRoot+'dataset/'+scope.dataset.datasetid+'/?tab='+scope.name:attrs.url;}};});mod.directive('highlightIfCurrentLocation',function(){return{restrict:'A',controller:function($scope,$element,$attrs,$location,$document){$scope.$on('$locationChangeSuccess',function(event,newUrl){if('/'+$attrs.href===$location.path()){$element.addClass('current-location-highlight');}else{$element.removeClass('current-location-highlight');}});}};});mod.directive('multiLanguageSupport',function(){return{restrict:'EA',scope:true,link:function(scope,element,attrs){scope.availableLanguages=scope.$eval(attrs.languages);}};});mod.directive('multiLanguageSelection',function($timeout){return{restrict:'E',template:'<select ng-show="visible()"></select>',link:function(scope,element,attrs){var select=angular.element(element.children()[0]);scope.visible=function(){return Object.keys(scope.availableLanguages).length>1;};scope.$watch('availableLanguages',function(nv){if(nv&&Object.keys(nv).length){select.empty();var first;angular.forEach(nv,function(label,code){first=first||code;select.append(angular.element('<option value="'+code+'">'+label+'</option>'));});scope.selectedLanguage=null;$timeout(function(){scope.selectedLanguage=first;},0);}},true);select.on('change',function(){scope.$apply(function(){scope.selectedLanguage=select.val();});});}};});mod.directive('multiLanguageModel',function($compile){var convertAttributeName=function(name){var i,c,converted=name[0];for(i=1;i<name.length;i++){c=name[i];if(c.toLowerCase()!==c){converted+='-'+c.toLowerCase();}else{converted+=c;}}
return converted;};return{restrict:'A',priority:1,terminal:true,compile:function(tElement,tAttrs){var duplicatedAttributes={};angular.forEach(tAttrs,function(value,key){if(key.substring(0,1)!=='$'){if(key!=='multiLanguageModel'){duplicatedAttributes[convertAttributeName(key)]=value;tAttrs.$set(key,null);}}});return function(scope,element,attrs){var model=scope.$eval(attrs.multiLanguageModel);if(angular.isUndefined(model)){scope.$eval(attrs.multiLanguageModel+'=obj',{obj:{}});}
var translatedElements=[];angular.forEach(scope.availableLanguages,function(label,code){var translatedElement=element.clone();translatedElement.attr(duplicatedAttributes).removeAttr('multi-language-model').removeAttr('id').attr('ng-model',attrs.multiLanguageModel+'.'+code).attr('ng-show','selectedLanguage == "'+code+'"');element.after(translatedElement);$compile(translatedElement)(scope);translatedElements.push(translatedElement);});element.remove();var blurCallback=function(){var elt=angular.element(this);var allEmpty=false;angular.forEach(translatedElements,function(elt2){if(elt2!==elt&&elt2.val()===''){allEmpty=true;}});if(allEmpty){angular.forEach(scope.availableLanguages,function(label,code){scope.$eval(attrs.multiLanguageModel+'.'+code+'=newVal',{newVal:elt.val()});scope.$apply();});angular.forEach(translatedElements,function(elt){elt.off('blur',blurCallback);});}};angular.forEach(translatedElements,function(elt){elt.on('blur',blurCallback);});};}};});mod.directive('snapshotForm',function(ManagementAPI){return{scope:{dataset_status:'=datasetStatus',dataset:'=',},templateUrl:'/static/greenfloor/html/snapshot_form.html',replace:true,restrict:'E',controller:function($scope){$scope.newSnapshot={};$scope.newSnapshotCreationTime=null;$scope.processingSnapshots=[];$scope.listSnapshots=function(dataset_id){ManagementAPI.datasets.snapshots.list(dataset_id).success(function(data){$scope.snapshots=data;});};$scope.isDatasetPublished=function(){return $scope.dataset&&$scope.dataset.published&&($scope.dataset_status.status=='idle'||$scope.dataset_status.status=='limit_reached');};$scope.saveSnapshot=function(dataset_id,description){ManagementAPI.datasets.snapshots.save(dataset_id,description).success(function(data){$scope.newSnapshotCreationTime=new Date();$scope.listSnapshots(dataset_id);$scope.savingSnapshot=true;$scope.$emit('updateStatus',$scope.dataset);});};$scope.deleteSnapshot=function(dataset_id,snapshot_id){$scope.processingSnapshots.push(snapshot_id);ManagementAPI.datasets.snapshots['delete'](dataset_id,snapshot_id).success(function(data){var deletedSnapshotProcessingIdx=$scope.processingSnapshots.indexOf(snapshot_id);var deletedSnapshotIdx=-1;for(var i=0;i<$scope.snapshots.length;i++){if($scope.snapshots[i].snapshot_id===snapshot_id){deletedSnapshotIdx=i;}}
if(deletedSnapshotProcessingIdx!==-1){$scope.processingSnapshots.splice(deletedSnapshotProcessingIdx,1);}
if(deletedSnapshotIdx!==-1){$scope.snapshots.splice(deletedSnapshotIdx,1);}}).error(function(data){var deletedSnapshotProcessingIdx=$scope.processingSnapshots.indexOf(snapshot_id);if(deletedSnapshotProcessingIdx!==-1){$scope.processingSnapshots.splice(deletedSnapshotProcessingIdx,1);}});};$scope.snapshotIsProcessing=function(snapshot_id){return $scope.processingSnapshots.indexOf(snapshot_id)!==-1;};var unwatchDataset=$scope.$watch('dataset',function(nv,ov){if(nv&&nv.id){$scope.listSnapshots(nv.id);unwatchDataset();}},true);$scope.$watch('dataset_status',function(nv,ov){if(nv==ov){return;}
if($scope.savingSnapshot&&nv.status==='idle'){$scope.savingSnapshot=false;$scope.newSnapshot.description='';$scope.defaultDescriptionModified=false;$scope.listSnapshots($scope.dataset.id);}});}};});mod.directive('d4cSplitButton',['translate','$compile','$document',function(translate,$compile,$document){return{transclude:true,replace:true,scope:true,restrict:'E',template:'<div class="btn split-btn">'+'<div class="primary"></div>'+'<div class="drop-down" ng-click="open($event)">'+'<i class="icon-chevron-down"></i>'+'</div>'+'<div class="secondary" ng-show="opened"></div>'+'</div>',compile:function(){return{pre:function(scope,element,attrs,ctrl,transclude){scope.opened=false;var primary=element.find('.primary');var secondary=element.find('.secondary');var dropdown=element.find('.drop-down');scope.open=function($event){scope.opened=!scope.opened;$document.one('click',function(){scope.close();scope.$apply();});$event.stopPropagation();};scope.close=function(){scope.opened=false;};attrs.$observe("disabled",function(nv,ov){render();});var cloned;function render(){if(!cloned)return;var first=true;var links_attributes=[];var clone=cloned.filter('a');angular.forEach(clone,function(link,i){var show=true;var attributes={};angular.forEach(link.attributes,function(attribute,i){if(!show){return;}
if(attribute.name==="show-if"){show=scope.$eval(attribute.value);}else{if(!attrs.disabled||attribute.name!=="ng-click"){attributes[attribute.name]=attribute.value;}}});if(show){attributes['text']=link.innerHTML;links_attributes.push(attributes);}});if(links_attributes.length>0){primary.empty();primary.off('click');primary.html(links_attributes[0].text);if(attrs.disabled){primary.attr('ng-click',null);}
angular.forEach(links_attributes[0],function(value,name){if(name!=='text'){primary.attr(name,value);}});primary.addClass('primary');$compile(primary)(scope);secondary.empty();if(links_attributes.length>1){var el;for(var i=0;i<links_attributes.length;i++){el=angular.element($document[0].createElement('a'));angular.forEach(links_attributes[i],function(value,name){if(name!=='text'){el.attr(name,value);}});el.html(links_attributes[i].text);secondary.append(el);}}else{element.find('.drop-down').remove();element.find('.secondary').remove();}
$compile(secondary.contents())(scope.$parent);}}
transclude(scope,function(clone){cloned=clone;render();});}};}};}]);mod.directive('staticfilestoreAsset',function($http,d4cNotificationService,AssetHelper,ManagementAPI){var templateUrl=function(type){return'/static/d4c/html/assets/'+type+'.html';};return{restrict:'E',require:'^?form',scope:{'assetName':'@','type':'@','config':'=','response':'=','buttonText':'@'},replace:true,template:'<div class="staticfilestore-asset {{ assetName }} {{ type }}"><div ng-include="template"></div></div>',link:function(scope,element,attrs,formCtrl){element.on('click','.uploadButton',function(e) {$(element).find('input[type=file]')[0].click();});scope.triggerDirtyForm=function(){if(angular.isDefined(formCtrl)){formCtrl.$setDirty();}};scope.forceImageRefresh=function(){var $img=element.find('img');if($img.length>0){var currentImageUrl=$img.attr('src');if(currentImageUrl.indexOf('?')>-1){currentImageUrl=currentImageUrl.split('?')[0];}
$img.attr('src',currentImageUrl+'?ts='+new Date().getTime());}};},controller:function($scope,$element){$scope.asset={'error':null,'file':null,'override':false,'progress':0,'success':null,'url':null};$scope.template=templateUrl($scope.type);ManagementAPI.assets.get($scope.assetName).success(function(asset){$scope.asset.override=asset.override;$scope.asset.url=asset.url;});$scope.upload=function(element) {if(element.files.length===0){return;}
$scope.$apply(function(){$scope.asset.file=element.files[0];$scope.asset.progress=0;$scope.asset.success=null;});AssetHelper.post(ManagementAPI.assets.uploadUrl($scope.assetName),$scope.asset.file,$scope.config,{},function(e){if(e.lengthComputable){$scope.asset.progress=Math.round(e.loaded*100/e.total);}}).then(function(data){$scope.response=data;$scope.asset.override=data.override;$scope.asset.url=data.url;$scope.asset.error=null;$scope.asset.success=true;$scope.triggerDirtyForm();$scope.forceImageRefresh();},function(data){$element.find('input[type=file]').val('');d4cNotificationService.markNotificationAsHandled(data);$scope.asset.override=data.override;$scope.asset.error=data.error;$scope.asset.success=false;});};$scope.reset=function(){ManagementAPI.assets.remove($scope.assetName).success(function(data){$element.find('input[type=file]').val('');$scope.asset={'file':null,'override':data.override,'progress':0,'success':true,'url':data.url};$scope.triggerDirtyForm();}).error(function(){$scope.asset.success=false;});};}};});mod.filter('limitFrom',function(){return function(input,start){if(!input)return;start=+start;return input.slice(start);};});}());function fireDOMEvent(element,eventName){var evt;if(document.createEventObject){evt=document.createEventObject();evt.eventType=eventName;evt.eventName=eventName;element.fireEvent('on'+evt.eventType,evt);}else{evt=document.createEvent("MouseEvents");evt.initEvent(eventName,true,true);return!element.dispatchEvent(evt);}};(function(){'use strict';var mod=angular.module('d4c.core');mod.filter('get_full_name',[function(){return function(user){if(user){if(user.first_name||user.last_name){return user.first_name+' '+user.last_name+' ('+user.id+')';}else{return user.id;}}};}]);mod.filter('formatMeta',['$filter',function($filter){return function(input,type){if(!input){return'';}
var separator=', ';if(angular.isArray(input)){input=input.join(separator);}
if(angular.isString(input)){if(type==='date'){input=$filter('moment')(input,'LL');}else if(type==='datetime'){input=$filter('moment')(input,'LLL');}}else{input=input.toString();}
return input;};}]);var fixDateFormat_pattern=/(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})/;mod.filter('fixDateFormat',[function(){return function(input){var match=fixDateFormat_pattern.exec(input);if(match){input=new Date(parseInt(match[3],10),parseInt(match[1],10)-1,parseInt(match[2],10),parseInt(match[4],10),parseInt(match[5],10),parseInt(match[6],10));}
return input;};}]);var MD5=function(string){function RotateLeft(lValue,iShiftBits){return(lValue<<iShiftBits)|(lValue>>>(32-iShiftBits));}
function AddUnsigned(lX,lY){var lX4,lY4,lX8,lY8,lResult;lX8=(lX&0x80000000);lY8=(lY&0x80000000);lX4=(lX&0x40000000);lY4=(lY&0x40000000);lResult=(lX&0x3FFFFFFF)+(lY&0x3FFFFFFF);if(lX4&lY4){return(lResult^0x80000000^lX8^lY8);}
if(lX4|lY4){if(lResult&0x40000000){return(lResult^0xC0000000^lX8^lY8);}else{return(lResult^0x40000000^lX8^lY8);}}else{return(lResult^lX8^lY8);}}
function F(x,y,z){return(x&y)|((~x)&z);}
function G(x,y,z){return(x&z)|(y&(~z));}
function H(x,y,z){return(x^y^z);}
function I(x,y,z){return(y^(x|(~z)));}
function FF(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(F(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);}
function GG(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(G(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);}
function HH(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(H(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);}
function II(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(I(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);}
function ConvertToWordArray(string){var lWordCount;var lMessageLength=string.length;var lNumberOfWords_temp1=lMessageLength+8;var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1%64))/64;var lNumberOfWords=(lNumberOfWords_temp2+1)*16;var lWordArray=Array(lNumberOfWords-1);var lBytePosition=0;var lByteCount=0;while(lByteCount<lMessageLength){lWordCount=(lByteCount-(lByteCount%4))/4;lBytePosition=(lByteCount%4)*8;lWordArray[lWordCount]=(lWordArray[lWordCount]|(string.charCodeAt(lByteCount)<<lBytePosition));lByteCount++;}
lWordCount=(lByteCount-(lByteCount%4))/4;lBytePosition=(lByteCount%4)*8;lWordArray[lWordCount]=lWordArray[lWordCount]|(0x80<<lBytePosition);lWordArray[lNumberOfWords-2]=lMessageLength<<3;lWordArray[lNumberOfWords-1]=lMessageLength>>>29;return lWordArray;}
function WordToHex(lValue){var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;for(lCount=0;lCount<=3;lCount++){lByte=(lValue>>>(lCount*8))&255;WordToHexValue_temp="0"+lByte.toString(16);WordToHexValue=WordToHexValue+WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);}
return WordToHexValue;}
function Utf8Encode(string){string=string.replace(/\r\n/g,"\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c);}
else if((c>127)&&(c<2048)){utftext+=String.fromCharCode((c>>6)|192);utftext+=String.fromCharCode((c&63)|128);}
else{utftext+=String.fromCharCode((c>>12)|224);utftext+=String.fromCharCode(((c>>6)&63)|128);utftext+=String.fromCharCode((c&63)|128);}}
return utftext;}
var x=Array();var k,AA,BB,CC,DD,a,b,c,d;var S11=7,S12=12,S13=17,S14=22;var S21=5,S22=9,S23=14,S24=20;var S31=4,S32=11,S33=16,S34=23;var S41=6,S42=10,S43=15,S44=21;string=Utf8Encode(string);x=ConvertToWordArray(string);a=0x67452301;b=0xEFCDAB89;c=0x98BADCFE;d=0x10325476;for(k=0;k<x.length;k+=16){AA=a;BB=b;CC=c;DD=d;a=FF(a,b,c,d,x[k+0],S11,0xD76AA478);d=FF(d,a,b,c,x[k+1],S12,0xE8C7B756);c=FF(c,d,a,b,x[k+2],S13,0x242070DB);b=FF(b,c,d,a,x[k+3],S14,0xC1BDCEEE);a=FF(a,b,c,d,x[k+4],S11,0xF57C0FAF);d=FF(d,a,b,c,x[k+5],S12,0x4787C62A);c=FF(c,d,a,b,x[k+6],S13,0xA8304613);b=FF(b,c,d,a,x[k+7],S14,0xFD469501);a=FF(a,b,c,d,x[k+8],S11,0x698098D8);d=FF(d,a,b,c,x[k+9],S12,0x8B44F7AF);c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);a=FF(a,b,c,d,x[k+12],S11,0x6B901122);d=FF(d,a,b,c,x[k+13],S12,0xFD987193);c=FF(c,d,a,b,x[k+14],S13,0xA679438E);b=FF(b,c,d,a,x[k+15],S14,0x49B40821);a=GG(a,b,c,d,x[k+1],S21,0xF61E2562);d=GG(d,a,b,c,x[k+6],S22,0xC040B340);c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);b=GG(b,c,d,a,x[k+0],S24,0xE9B6C7AA);a=GG(a,b,c,d,x[k+5],S21,0xD62F105D);d=GG(d,a,b,c,x[k+10],S22,0x2441453);c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);b=GG(b,c,d,a,x[k+4],S24,0xE7D3FBC8);a=GG(a,b,c,d,x[k+9],S21,0x21E1CDE6);d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);c=GG(c,d,a,b,x[k+3],S23,0xF4D50D87);b=GG(b,c,d,a,x[k+8],S24,0x455A14ED);a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);d=GG(d,a,b,c,x[k+2],S22,0xFCEFA3F8);c=GG(c,d,a,b,x[k+7],S23,0x676F02D9);b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);a=HH(a,b,c,d,x[k+5],S31,0xFFFA3942);d=HH(d,a,b,c,x[k+8],S32,0x8771F681);c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);a=HH(a,b,c,d,x[k+1],S31,0xA4BEEA44);d=HH(d,a,b,c,x[k+4],S32,0x4BDECFA9);c=HH(c,d,a,b,x[k+7],S33,0xF6BB4B60);b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);d=HH(d,a,b,c,x[k+0],S32,0xEAA127FA);c=HH(c,d,a,b,x[k+3],S33,0xD4EF3085);b=HH(b,c,d,a,x[k+6],S34,0x4881D05);a=HH(a,b,c,d,x[k+9],S31,0xD9D4D039);d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);b=HH(b,c,d,a,x[k+2],S34,0xC4AC5665);a=II(a,b,c,d,x[k+0],S41,0xF4292244);d=II(d,a,b,c,x[k+7],S42,0x432AFF97);c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);b=II(b,c,d,a,x[k+5],S44,0xFC93A039);a=II(a,b,c,d,x[k+12],S41,0x655B59C3);d=II(d,a,b,c,x[k+3],S42,0x8F0CCC92);c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);b=II(b,c,d,a,x[k+1],S44,0x85845DD1);a=II(a,b,c,d,x[k+8],S41,0x6FA87E4F);d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);c=II(c,d,a,b,x[k+6],S43,0xA3014314);b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);a=II(a,b,c,d,x[k+4],S41,0xF7537E82);d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);c=II(c,d,a,b,x[k+2],S43,0x2AD7D2BB);b=II(b,c,d,a,x[k+9],S44,0xEB86D391);a=AddUnsigned(a,AA);b=AddUnsigned(b,BB);c=AddUnsigned(c,CC);d=AddUnsigned(d,DD);}
var temp=WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);return temp.toLowerCase();};mod.filter('gravatar',[function(){return function(email,size){if(!size){size=80;}
if(email){return"//www.gravatar.com/avatar/"+MD5(email.toLowerCase())+"?d=mm&s="+size;}else{return"//www.gravatar.com/avatar/00000000000000000000000000000000?d=mm&f=y&s="+size;}};}]);mod.filter('suggestTypeToIcon',function(){return function(type){switch(type){case'dataset':return'archive';default:return type;}};});mod.filter('eventClass',function(){return function(event){switch(event){case'add_dataset':return'add';case'edit_dataset':case'publish_dataset':case'unpublish_dataset':return'edit';case'delete_dataset':return'delete';default:return event;}};});mod.filter('event',function(translate){return function(event){switch(event){case'':return translate('Any');case'add_dataset':return translate('Add');case'edit_dataset':return translate('Edit');case'delete_dataset':return translate('Delete');case'publish_dataset':return translate('Publish');case'unpublish_dataset':return translate('Unpublish');default:return event;}};});mod.filter('toArray',function(){return function(dict){if(dict){return $.map(dict,function(v,k){return v;});}else{return[];}};});mod.filter('filterObject',function(){return function(dict,key){var filtered=angular.copy(dict);if(!angular.isArray(key)){key=[key];}
for(var i=0;i<key.length;i++){delete(filtered[key[i]]);}
return filtered;};});mod.filter('listFilter',[function(){return function(inputList,filterList){if(!inputList){return'';}
if(!filterList){return inputList;}
Array.prototype.diff=function(a){return this.filter(function(i){return(a.indexOf(i)<0);});};return inputList.filter(function(i){return(filterList.indexOf(i)<0);});};}]);mod.filter('licenseLink',function(){var licenses=[{pattern:/odbl.*fr/gi,url:'http://vvlibri.org/fr/licence/odbl-10/legalcode/unofficial'},{pattern:/odbl/gi,url:'http://opendatacommons.org/licenses/odbl/'},{pattern:/open database license/gi,url:'http://opendatacommons.org/licenses/odbl/'},{pattern:/licence ouverte v2/gi,url:'https://www.etalab.gouv.fr/wp-content/uploads/2017/04/ETALAB-Licence-Ouverte-v2.0.pdf'},{pattern:/licence ouverte/gi,url:'https://www.etalab.gouv.fr/wp-content/uploads/2014/05/Licence_Ouverte.pdf'},{pattern:/etalab/gi,url:'https://www.etalab.gouv.fr/wp-content/uploads/2014/05/Licence_Ouverte.pdf'},{pattern:/creative commons[\w-]by[\w-]sa/gi,url:'http://opendefinition.org/licenses/cc-by-sa/'},{pattern:/creative commons.*share.*alike/gi,url:'http://opendefinition.org/licenses/cc-by-sa/'},{pattern:/creative commons/gi,url:'http://www.opendefinition.org/licenses/cc-by/'},{pattern:/cc[\w\s-]by$/gi,url:'https://creativecommons.org/licenses/by/4.0/'},{pattern:/cc[\w\s-]by[\w\s-]nd/gi,url:'https://creativecommons.org/licenses/by-nd/4.0/'},{pattern:/cc[\w\s-]by[\w\s-]nc[\w\s-]nd/gi,url:'https://creativecommons.org/licenses/by-nc-nd/4.0/'},{pattern:/cc[\w\s-]by[\w\s-]nc$/gi,url:'https://creativecommons.org/licenses/by-nc/4.0/'},{pattern:/cc[\w\s-]by[\w\s-]nc[\w\s-]sa/gi,url:'https://creativecommons.org/licenses/by-nc-sa/4.0/'},{pattern:/cc[\w\s-]by[\w\s-]sa/gi,url:'https://creativecommons.org/licenses/by-sa/4.0/'},{pattern:/cc[\w\s-]by[\w\s-]igo/gi,url:'https://creativecommons.org/licenses/by/3.0/igo/'},{pattern:/cc0/gi,url:'https://creativecommons.org/publicdomain/zero/1.0/'},{pattern:/Datenlizenz Deutschland.*Zero.*Version 2/gi,url:'https://www.govdata.de/dl-de/zero-2-0'},{pattern:/Datenlizenz Deutschland.*Namensnennung.*Version 2/gi,url:'https://www.govdata.de/dl-de/by-2-0'},{pattern:/(odbl|open data) paris/gi,url:'http://opendata.paris.fr/page/lalicence/'},{pattern:/SNCF Open Data/gi,url:'https://data.sncf.com/pages/cgu/A1#A1'},{pattern:/Datainfogreffe/gi,url:'https://www.datainfogreffe.fr/page/licence/'},{pattern:/Licence .* des Archives de la Plan.+te/gi,url:'https://opendata.hauts-de-seine.fr/page/licence-adlp/'},{pattern:/cc[\w\s-]by[\w\s-]nc[\w\s-]nd 3.*fr/gi,url:'http://creativecommons.org/licenses/by-nc-nd/3.0/fr/legalcode'},{pattern:/open government licence/gi,url:'http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/'},{pattern:/API STIF/gi,url:'https://opendata.stif.info/page/licence-api-stif/'}];return function(licenseString){if(!licenseString||licenseString===''){return licenseString;}
for(var i=0;i<licenses.length;i++){var license=licenses[i];if(licenseString.search(license.pattern)>-1){return'<a rel="nofollow" target="_blank" href="'+license.url+'">'+licenseString+'</a>';}}
return licenseString;};});mod.filter('vizConfig',function(){return function(dataset,fieldConfigName){if(dataset.extra_metas&&dataset.extra_metas.visualization&&dataset.extra_metas.visualization[fieldConfigName]){return dataset.extra_metas.visualization[fieldConfigName];}
return null;};});mod.filter('hasFacet',function(){return function(dataset){if(dataset){dataset=new D4C.Dataset(dataset);return dataset.hasFacet();}
return false;};});mod.filter('hasFieldType',function(){return function(dataset,fieldType){if(angular.isObject(dataset)){dataset=new D4C.Dataset(dataset);return dataset.hasFieldType(fieldType);}
return false;};});mod.filter('countFieldType',function(){return function(dataset,fieldType){if(dataset){dataset=new D4C.Dataset(dataset);return dataset.countFieldType(fieldType);}
return 0;};});mod.filter('countFieldTypes',function(){return function(dataset,fieldType){if(dataset){dataset=new D4C.Dataset(dataset);return dataset.countFieldTypes(fieldType);}
return 0;};});$.objectDiff=function(a,b,c){c={};try{$.each([a,b],function(index,obj){for(var prop in obj){if(obj.hasOwnProperty(prop)){if(typeof obj[prop]==="object"&&obj[prop]!==null){c[prop]=$.objectDiff(a[prop],b[prop],c);}
else{if(a===undefined)a={};if(b===undefined)b={};if(a[prop]!==b[prop]){c[prop]=[a[prop],b[prop]];}}}}});}catch(e){console.error(e);}
return c;};mod.filter('diff',function(){return function(a,b){return $.objectDiff(a,b);};});mod.filter('range',function(){return function(input){var lowBound,highBound;switch(input.length){case 1:lowBound=0;highBound=parseInt(input[0],10)-1;break;case 2:lowBound=parseInt(input[0],10);highBound=parseInt(input[1],10);break;default:return input;}
var result=[];for(var i=lowBound;i<=highBound;i++)
result.push(i);return result;};});mod.filter('startsWith',function(){return function(input,searchedString){return D4C.StringUtils.startsWith(input,searchedString);};});mod.filter('displayedRefines',['translate',function(translate){return function(searchOptions){var displayedRefines={};$.each(searchOptions,function(key,value){if(key=='q'){displayedRefines[translate('query')]=value;}
if(key.slice(0,7)=='refine.'){if(angular.isArray(value)){displayedRefines[key.slice(7)]=value.join(', ');}else{displayedRefines[key.slice(7)]=value;}}});return displayedRefines;};}]);mod.filter('currentLanguage',['config',function(config){return function(language){return language.toLowerCase()==config.LANGUAGE;};}]);mod.filter('siPrefixFormat',['$filter',function($filter){return function(number){if(number>=1000000){return $filter('number')(number/1000000,0)+'M';}else if(number>=10000){return $filter('number')(number/1000,0)+'k';}else if(number>=1000){return $filter('number')(number/1000,1)+'k';}else{return $filter('number')(number,0);}};}]);mod.filter('min',function(){return function(n1,n2){return Math.min(n1,n2);};});mod.filter('max',function(){return function(n1,n2){return Math.max(n1,n2);};});mod.filter('isPositiveNumber',function(){return function(input){if(angular.isNumber(input)&&isFinite(input)&&input>=0){return true;}else{return false;}};});mod.filter('incrementBound',function(){return function(firstBound){if(angular.isDefined(firstBound)&&firstBound!==""){return D4C.CalculationUtils.incrementByOneUnit(firstBound);}else{return null;}};});mod.filter('encodeURIComponent',function($window){return $window.encodeURIComponent;});}());;(function(){"use strict";var mod=angular.module('d4c.core');mod.factory('d4cBindModelToScope',function(){return function(scope,ngModelCtrl){ngModelCtrl.$render=function(){scope.model=angular.copy(ngModelCtrl.$viewValue);};scope.$watch('model',function(){ngModelCtrl.$setViewValue(scope.model);},true);};});mod.factory('d4cFormInputHelper',function($parse){var isStateFunction=function(state){var ngState='ng'+state.charAt(0).toUpperCase()+state.slice(1);return function(scope,attrs){return!!(ngState in attrs&&$parse(attrs[ngState])(scope.$parent));};};var isReadonly=isStateFunction('readonly');var isDisabled=isStateFunction('disabled');return{isReadonly:isReadonly,isDisabled:isDisabled};});mod.factory('d4cBindInputStateToScope',function(d4cFormInputHelper){return function(scope,attrs){scope.$watch(function(){return[d4cFormInputHelper.isDisabled(scope,attrs),d4cFormInputHelper.isReadonly(scope,attrs)];},function(nv){scope.disabled=nv[0];scope.readonly=nv[1];},true);};});mod.factory('d4cCompileAndReplace',function($compile){return function(scope,element,template){var newElement=angular.element(template);element.replaceWith(newElement);$compile(newElement)(scope);return newElement;};});mod.factory('d4cCustomInputHelper',function(){return{getAndResetNgModelOptions:function(ngModelOptionsCtrl){var ngModelOptions={};if(ngModelOptionsCtrl&&ngModelOptionsCtrl.$options){ngModelOptions=angular.copy(ngModelOptionsCtrl.$options);for(var key in ngModelOptionsCtrl.$options){if(ngModelOptionsCtrl.$options.hasOwnProperty(key)){delete ngModelOptionsCtrl.$options[key];}}
ngModelOptionsCtrl.$options.updateOnDefault=true;}
if(ngModelOptions.updateOnDefault){if(ngModelOptions.updateOn){ngModelOptions.updateOn+=' default';}else{ngModelOptions.updateOn='default';}}
if(!ngModelOptions.debounce){ngModelOptions.debounce={};}
return ngModelOptions;},setMainControlDirty:function(formCtrl,name){if(formCtrl&&name&&formCtrl[name]){formCtrl[name].$setDirty();}}};});mod.factory('d4cCustomInput',function(d4cBindInputStateToScope,d4cCompileAndReplace){return function(scope,element,attrs,template){d4cBindInputStateToScope(scope,attrs);return d4cCompileAndReplace(scope,element,template);};});mod.factory('d4cMultiInputHelper',function($timeout,d4cCustomInputHelper,$rootScope){return{setupNewValue:function(scope,element,formCtrl,insertAtEnd){scope.addNewValue=function(){if(!scope.newValue){return;}
if(scope.values.indexOf(scope.newValue)===-1){if(insertAtEnd){scope.values.push(scope.newValue);}else{scope.values.unshift(scope.newValue);}
scope.newValue='';}else{formCtrl[scope.name+'-new'].$setValidity('unique',false);}
$timeout(function(){element.find('.d4c-form__control')[0].focus();});};var validate=function(){if(!scope.newValue||scope.values.indexOf(scope.newValue)===-1){formCtrl[scope.name+'-new'].$setValidity('unique',true);}};scope.$watch('newValue',validate);scope.$watch('values',validate,true);scope.onNewValueKeyDown=function(event){if(event.keyCode===13){scope.addNewValue();}};},setupSingleValues:function(scope,element,removeDelay){scope.disabledValue={};scope.removeValue=function(index){scope.disabledValue[index]=true;$timeout(function(){scope.values.splice(index,1);scope.disabledValue[index]=false;},angular.isDefined(removeDelay)?removeDelay:300);};scope.onKeyDown=function(event,index){if(event.keyCode===13){if(index<scope.values.length-1){$(element).find('input')[index+2].focus();}else{$(element).find('input')[0].focus();}}
if(event.keyCode===8&&event.target.value===''){scope.removeValue(index);event.preventDefault();}};},setupNgModel:function(scope,element,ngModelCtrl,formCtrl){ngModelCtrl.$render=function(){scope.values=angular.copy(ngModelCtrl.$viewValue)||[];scope.newValue='';};var buildRemoveFunction=function(index){var remove=function(){if(scope.values[index]){return;}
if(!$(element.find('input')[index+1]).is(':focus')){scope.removeValue(index);}else{$timeout(remove,100);}};return remove;};scope.$watch('values',function(nv,ov){if(angular.equals(nv,ov)){return;}
var valid=true;var i;for(i=nv.length-1;i>=0;i--){if(!nv[i]){var removeIfNotFocus=buildRemoveFunction(i);removeIfNotFocus();}}
if(nv.length===ov.length){var modified;for(i=0;i<nv.length;i++){if(nv[i]!==ov[i]){modified=i;}}
if(nv.indexOf(nv[modified])<modified||nv.indexOf(nv[modified],modified+1)>-1){formCtrl[scope.name+modified].$setValidity('unique',false);valid=false;}}
if(valid){for(i=0;i<nv.length;i++){if(nv.indexOf(nv[i],i+1)>-1){valid=false;break;}}}
if(valid){for(i=0;i<nv.length;i++){if(formCtrl[scope.name+i]){formCtrl[scope.name+i].$setValidity('unique',true);}}
d4cCustomInputHelper.setMainControlDirty(formCtrl,scope.name);ngModelCtrl.$setViewValue(angular.copy(nv));}else{$rootScope.$broadcast(scope.id,{event:'save',status:'error'});}},true);}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.service('ColorHelper',['translate',function(translate_color){var PI2=Math.PI*2,PIp180=Math.PI/180,validHexColor=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;return{HexToRGB:function(hex){if(hex.startsWith("#")){hex=hex.substring(1);}
return[parseInt(hex.substring(0,2),16),parseInt(hex.substring(2,4),16),parseInt(hex.substring(4,6),16)];},RGBToHex:function(r,g,b){return("#"+((1<<24)+
(Math.round(r)<<16)+
(Math.round(g)<<8)+
Math.round(b)).toString(16).slice(1)).toUpperCase();},RGBToHSV:function(r,g,b){r/=255;g/=255;b/=255;var max=Math.max(r,g,b),min=Math.min(r,g,b);var h,s,v=max;var d=max-min;s=max===0?0:d/max;if(max==min){h=0;}else{switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;}
h/=6;}
return[h,s,v];},HSVToRGB:function(h,s,v){h*=6;var i=~~h,f=h-i,p=v*(1-s),q=v*(1-f*s),t=v*(1-(1-f)*s),mod=i%6,r=[v,q,p,p,t,v][mod]*255,g=[t,v,v,q,p,p][mod]*255,b=[p,p,t,v,v,q][mod]*255;r=~~r;g=~~g;b=~~b;return[r,g,b,"rgb("+r+","+g+","+b+")"];},RGBToXYV:function(red,green,blue,radius){var hsv=this.RGBToHSV(red,green,blue),width=radius*2,phi,r,x,y;hsv[0]=hsv[0]*360;r=radius*hsv[1];phi=hsv[0]*PIp180;x=radius+r*Math.cos(phi);y=radius+r*Math.sin(phi);return[Math.round(width-x),Math.round(width-y),hsv[2]];},XYToHS:function(x,y,radius){x=x-radius;y=y-radius;var theta=Math.atan2(y,x),d=x*x+y*y;if(d>radius*radius){x=radius*Math.cos(theta);y=radius*Math.sin(theta);theta=Math.atan2(y,x);d=x*x+y*y;}
return[(theta+Math.PI)/PI2,Math.sqrt(d)/radius];},isValidHexColor:function(hex){if(!hex){return false;}
hex=hex.trim();return validHexColor.test(hex);},formatHexColor:function(hex){if(!hex){return;}
hex=hex.trim();if(!hex.startsWith("#")){hex="#"+hex;}
if(!this.isValidHexColor(hex)){return;}
return hex.toUpperCase();},shortToLongHexColor:function(hex){hex=hex.trim();if(!hex.startsWith("#")){hex="#"+hex;}
if(hex.length==7){return hex;}else if(hex.length<4){return null;}
return hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];},isDarkColor:function(red,green,blue){var brightness;brightness=(red*299)+(green*587)+(blue*114);brightness=brightness/255000;if(brightness>=0.5){return false;}else{return true;}},loadWheel:function(radius,pixels,value){var i=0,radiusSquared=radius*radius,diameter=radius*2;for(var y=0;y<diameter;y++){for(var x=0;x<diameter;x++){var rx=x-radius,ry=y-radius,d=rx*rx+ry*ry,rgb=this.HSVToRGB((Math.atan2(ry,rx)+Math.PI)/PI2,Math.sqrt(d)/radius,value/100);pixels[i++]=rgb[0];pixels[i++]=rgb[1];pixels[i++]=rgb[2];pixels[i++]=d>radiusSquared?0:255;}}},niceColors:[[[translate_color('Black'),'#000000',''],[translate_color('Dark grey'),'#555555',''],[translate_color('Light grey'),'#AAAAAA',''],[translate_color('White'),'#FFFFFF','lightgrey'],],[[translate_color('Dark slate'),'#2C3F56',''],[translate_color('Medium slate'),'#6D7A87',''],[translate_color('Light slate'),'#969FAA',''],[translate_color('Pale slate'),'#C0C5CC','']],[[translate_color('Dark green'),'#19630A',''],[translate_color('Medium green'),'#64905C',''],[translate_color('Light green'),'#8FAF89',''],[translate_color('Pale green'),'#BCD0B8',''],],[[translate_color('Dark oil'),'#00757E',''],[translate_color('Medium oil'),'#5D9FA3',''],[translate_color('Light oil'),'#8ABABE',''],[translate_color('Pale oil'),'#B8D5D8',''],],[[translate_color('Dark blue'),'#0B72B5',''],[translate_color('Medium blue'),'#619FC8',''],[translate_color('Light blue'),'#8EBAD8',''],[translate_color('Pale blue'),'#BBD5E7',''],],[[translate_color('Dark royal blue'),'#263892',''],[translate_color('Medium royal blue'),'#6A79B0',''],[translate_color('Light royal blue'),'#939EC6',''],[translate_color('Pale royal blue'),'#BEC5DC',''],],[[translate_color('Dark purple'),'#5A1887',''],[translate_color('Medium purple'),'#8A65A9',''],[translate_color('Light purple'),'#AB90C1',''],[translate_color('Pale purple'),'#CDBCD9',''],],[[translate_color('Dark fuchsia'),'#93117E',''],[translate_color('Medium fuchsia'),'#B060A3',''],[translate_color('Light fuchsia'),'#C78DBD',''],[translate_color('Pale fuchsia'),'#DDBBD7',''],],[[translate_color('Dark cherry'),'#BA022A',''],[translate_color('Medium cherry'),'#CB516D',''],[translate_color('Light cherry'),'#D98396',''],[translate_color('Pale cherry'),'#E8B4C0',''],],[[translate_color('Dark vermilion'),'#E5352D',''],[translate_color('Medium vermilion'),'#E87273',''],[translate_color('Light vermilion'),'#EE9A9A',''],[translate_color('Pale vermilion'),'#F5C2C2',''],],[[translate_color('Dark orange'),'#FA8C44',''],[translate_color('Medium orange'),'#F7AD84',''],[translate_color('Light orange'),'#F9C4A7',''],[translate_color('Pale orange'),'#FCDCCA',''],],[[translate_color('Dark yellow'),'#F8B334',''],[translate_color('Medium yellow'),'#F7C87E',''],[translate_color('Light yellow'),'#F9D7A2',''],[translate_color('Pale yellow'),'#FBE6C6',''],],],};}]);})();;(function(){"use strict";var mod=angular.module("d4c.core");mod.service('WidgetCodeBuilder',function(){function stringify(parameters){var params=angular.copy(parameters);var backlist=['tab','headless','hideTabs','location','dataChart','basemap'];for(var i=0;i<backlist.length;i++){if(params[backlist[i]]){delete params[backlist[i]];}}
return JSON.stringify(params).replace(/'/g,"\\'").replace(/"/g,"'");}
function indent(text,levels){if(angular.isUndefined(levels)){levels=1;}
var indentSpaces='';var i=0;for(i=0;i<levels;i++){indentSpaces+='    ';}
return text.replace(/^(?!$)/gm,indentSpaces);}
function buildContextsCode(){var contexts=[];var contextsName=[];return{addContext:function(context,contextName){if(angular.isUndefined(contextName)){contextName=context.dataset.datasetid.replace(/[_@-]/g,'').replace(/^[0-9]+/,'');}
if(contextName===''){contextName='myctx';}
for(var i=0;i<contexts.length;i++){if(contexts[i].dataset.datasetid===context.dataset.datasetid&&contexts[i].domain===context.domain){var equals=true;angular.forEach(contexts[i].parameters,function(value,key){if(contexts[i].parameters[key]!==context.parameters[key]){equals=false;}});angular.forEach(context.parameters,function(value,key){if(contexts[i].parameters[key]!==context.parameters[key]){equals=false;}});if(equals){return contextsName[i];}}}
var j=0;var originalContextName=contextName;while(contextsName.indexOf(contextName)>=0){contextName=originalContextName+j;j++;}
contexts.push(context);contextsName.push(contextName);return contextName;},wrapInContextsCode:function(widgetCode){var code="<d4c-dataset-context ",context,contextName;code+='context="'+contextsName.join(',')+'"';for(var i=0;i<contexts.length;i++){contextName=contextsName[i];context=contexts[i];code+=' '+contextName+'-dataset="'+context.dataset.datasetid+'"';if(context.domain){code+=' '+contextName+'-domain="'+context.domain+'"';}
if(context.parameters&&!isObjectEmpty(context.parameters)){code+=' '+contextName+'-parameters="'+stringify(context.parameters)+'"';}}
code+=">\n";return code+indent(widgetCode,1)+"\n</d4c-dataset-context>";}};}
return{buildMediaWidgetCode:function(context,search_parameters){var contextsCodeBuilder=buildContextsCode(),widgetCode='<d4c-media-gallery';widgetCode+=' context="'+contextsCodeBuilder.addContext(context)+'"';widgetCode+=' d4c-widget-tooltip';widgetCode+=' d4c-auto-resize';widgetCode+=' display-mode="compact"';widgetCode+='></d4c-media-gallery>\n';return contextsCodeBuilder.wrapInContextsCode(widgetCode);},buildMapWidgetCode:function(context,search_parameters){var contextsCodeBuilder=buildContextsCode(),widgetCode='<d4c-map';widgetCode+=' context="'+contextsCodeBuilder.addContext(context)+'"';widgetCode+=' scroll-wheel-zoom="false"';if(search_parameters.location){widgetCode+=' location="'+search_parameters.location+'"';}
if(search_parameters.basemap){widgetCode+=' basemap="'+search_parameters.basemap+'"';}
widgetCode+='></d4c-map>\n';return contextsCodeBuilder.wrapInContextsCode(widgetCode);},buildTableWidgetCode:function(context,search_parameters){var contextsCodeBuilder=buildContextsCode(),widgetCode='<d4c-table';widgetCode+=' context="'+contextsCodeBuilder.addContext(context)+'"';if(search_parameters.sort){widgetCode+=' sort="'+search_parameters.sort+'"';}
widgetCode+='></d4c-table>\n';return contextsCodeBuilder.wrapInContextsCode(widgetCode);},buildChartWidgetCode:function(chartConfig){var contextsCodeBuilder=buildContextsCode(),widgetCode="";if(chartConfig){widgetCode='<d4c-chart';if(chartConfig.timescale){widgetCode+=' timescale="'+chartConfig.timescale+'"';}
if(chartConfig.singleAxis){widgetCode+=' single-y-axis="'+chartConfig.singleAxis+'"';}
if(chartConfig.singleAxisLabel){widgetCode+=' single-y-axis-label="'+chartConfig.singleAxisLabel+'"';}
if(chartConfig.singleAxisScale==="logarithmic"){widgetCode+=' logarithmic="true"';}
if(typeof chartConfig.yRangeMin!=="undefined"){widgetCode+=' min="'+chartConfig.yRangeMin+'"';}
if(typeof chartConfig.yRangeMax!=="undefined"){widgetCode+=' max="'+chartConfig.yRangeMax+'"';}
if(typeof chartConfig.yStep!=="undefined"){widgetCode+=' step="'+chartConfig.yStep+'"';}
if(typeof chartConfig.scientificDisplay!=="undefined"){widgetCode+=' scientific-display="'+chartConfig.scientificDisplay+'"';}
if(chartConfig.displayLegend===false){widgetCode+=' display-legend="false"';}
if(typeof chartConfig.labelsXLength!=="undefined"){widgetCode+=' labels-x-length="'+chartConfig.labelsXLength+'"';}
widgetCode+='>\n';if(chartConfig.queries){for(var i=0;i<chartConfig.queries.length;i++){var query=chartConfig.queries[i];var context={parameters:query.config.options,dataset:{datasetid:query.config.dataset},domain:''};widgetCode+=indent('<d4c-chart-query');widgetCode+=' context="'+contextsCodeBuilder.addContext(context)+'"';if(query.xAxis){widgetCode+=' field-x="'+query.xAxis+'"';}
if(query.maxpoints){widgetCode+=' maxpoints="'+query.maxpoints+'"';}else{widgetCode+=' maxpoints="0"';}
if(query.timescale){widgetCode+=' timescale="'+query.timescale+'"';}
if(query.stacked){widgetCode+=' stacked="'+query.stacked+'"';}
if(query.sort){widgetCode+=' sort="'+query.sort+'"';}
if(query.seriesBreakdown){widgetCode+=' series-breakdown="'+query.seriesBreakdown+'"';}
if(query.seriesBreakdownTimescale){widgetCode+=' series-breakdown-timescale="'+query.seriesBreakdownTimescale+'"';}
if(query.categoryColors){widgetCode+=' category-colors="'+JSON.stringify(query.categoryColors).replace(new RegExp('"','g'),'&quot;')+'"';}
widgetCode+='>\n';for(var j=0;j<query.charts.length;j++){var serie=query.charts[j];widgetCode+=indent('<d4c-chart-serie',2);if(serie.yAxis){widgetCode+=' expression-y="'+serie.yAxis+'"';}
if(serie.multiplier){widgetCode+=' multiplier="'+serie.multiplier+'"';}
if(serie.type){widgetCode+=' chart-type="'+serie.type+'"';}
if(serie.innersize){widgetCode+=' innersize="'+serie.innersize+'"';}
if(serie.labelsposition){widgetCode+=' labelsposition="'+serie.labelsposition+'"';}
if(serie.func){widgetCode+=' function-y="'+serie.func+'"';}
if(serie.yLabelOverride){widgetCode+=' label-y="'+serie.yLabelOverride+'"';}
if(serie.color){widgetCode+=' color="'+serie.color+'"';}
if(typeof serie.displayUnits!=="undefined"){widgetCode+=' display-units="'+serie.displayUnits+'"';}
if(typeof serie.displayValues!=="undefined"){widgetCode+=' display-values="'+serie.displayValues+'"';}
if(typeof serie.displayStackValues!=="undefined"){widgetCode+=' display-stack-values="'+serie.displayStackValues+'"';}
if(serie.scale==="logarithmic"){widgetCode+=' logarithmic="true"';}
if(typeof serie.yRangeMin!=="undefined"){widgetCode+=' min="'+serie.yRangeMin+'"';}
if(typeof serie.yRangeMax!=="undefined"){widgetCode+=' max="'+serie.yRangeMax+'"';}
if(typeof serie.yStep!=="undefined"){widgetCode+=' step="'+serie.yStep+'"';}
if(typeof serie.scientificDisplay!=="undefined"){widgetCode+=' scientific-display="'+serie.scientificDisplay+'"';}
if(serie.cumulative){widgetCode+=' cumulative="'+serie.cumulative+'"';}
if(typeof serie.subsets!=="undefined"){widgetCode+=' subsets="'+serie.subsets+'"';}
if(typeof serie.charts!=="undefined"&&serie.charts.length>0){widgetCode+=" subseries='"+JSON.stringify(serie.charts)+"'";}
if(typeof serie.thresholds!=="undefined"){widgetCode+=" color-thresholds='"+JSON.stringify(serie.thresholds)+"'";}
widgetCode+='>\n';widgetCode+=indent('</d4c-chart-serie>\n',2);}
widgetCode+=indent('</d4c-chart-query>\n');}}
widgetCode+='</d4c-chart>\n';widgetCode=contextsCodeBuilder.wrapInContextsCode(widgetCode);}
return widgetCode;},buildCalendarWidgetCode:function(context){var contextsCodeBuilder=buildContextsCode();var widgetCode='<d4c-calendar context="'+contextsCodeBuilder.addContext(context)+'"></d4c-calendar>';return contextsCodeBuilder.wrapInContextsCode(widgetCode);},buildMapbuilderWidgetCode:function(mapConfig){var contextsCodeBuilder=buildContextsCode();var widgetCode='<d4c-map no-refit="true" scroll-wheel-zoom="false"';if(mapConfig.layerSelection){widgetCode+=' display-control="true"';}
if(mapConfig.singleLayer){widgetCode+=' display-control-single-layer="true"';}
if(mapConfig.searchBox){widgetCode+=' search-box="true"';}
if(mapConfig.toolbarFullscreen){widgetCode+=' toolbar-fullscreen="true"';}
if(mapConfig.toolbarGeolocation){widgetCode+=' toolbar-geolocation="true"';}
if(mapConfig.autoGeolocation){widgetCode+=' auto-geolocation="true"';}
if(mapConfig.mapPresets.basemap){widgetCode+=' basemap="'+mapConfig.mapPresets.basemap+'"';}
if(mapConfig.mapPresets.location){widgetCode+=' location="'+mapConfig.mapPresets.location+'"';}
widgetCode+='>\n';mapConfig.groups.forEach(function(group){widgetCode+=indent('<d4c-map-layer-group',1);if(group.pictoColor){widgetCode+=' picto-color="'+group.pictoColor+'"';}
if(group.pictoIcon){widgetCode+=' picto-icon="'+group.pictoIcon+'"';}
if(group.title){widgetCode+=' title="'+group.title+'"';}
if(group.description){widgetCode+=' description="'+group.description+'"';}
if(!group.displayed){widgetCode+=' displayed="'+group.displayed.toString()+'"';}
widgetCode+='>\n';group.layers.forEach(function(layer){widgetCode+=indent('<d4c-map-layer context="'+contextsCodeBuilder.addContext(layer.context)+'"',2);if(angular.isString(layer.color)){widgetCode+=' color="'+layer.color+'"';}
if(layer.colorFunction){widgetCode+=' color-function="'+layer.color+'"';}
if(layer.color.type==='categories'){var readableCategories=JSON.stringify(layer.color.categories);readableCategories=readableCategories.replace(/'/g,"\\'");readableCategories=readableCategories.replace(/([^\\])"/g,"$1'");readableCategories=readableCategories.replace(/\\"/g,'"');readableCategories=readableCategories.replace(/"/g,'&quot;');widgetCode+=' color-categories="'+readableCategories+'"';widgetCode+=' color-by-field="'+layer.color.field+'"';if(layer.color.otherCategories){widgetCode+=' color-categories-other="'+layer.color.otherCategories+'"';}}
if(layer.color.type==='gradient'){var gradient=JSON.stringify(layer.color.steps).replace(/"/g,"'");widgetCode+=' color-gradient="'+gradient+'"';}
if(layer.color.type==='choropleth'){var ranges=JSON.stringify(layer.color.ranges).replace(/"/g,"'");widgetCode+=' color-numeric-ranges="'+ranges+'"';if(layer.color.field){widgetCode+=' color-by-field="'+layer.color.field+'"';}}
if(layer.color.minValue){widgetCode+=' color-numeric-range-min="'+layer.color.minValue+'"';}
if(layer.color.type==='field'){widgetCode+=' color-by-field="'+layer.color.field+'"';}
if(layer.picto){widgetCode+=' picto="'+layer.picto+'"';}
widgetCode+=' show-marker="'+!!layer.marker+'"';if(layer.display){widgetCode+=' display="'+layer.display+'"';}
if((layer.display==='heatmap')&&(layer.radius)){widgetCode+='radius="'+layer.radius+'"';}
if(layer.func){widgetCode+=' function="'+layer.func+'"';}
if(layer.expr){widgetCode+=' expression="'+layer.expr+'"';}
if(layer.shapeOpacity){widgetCode+=' shape-opacity="'+layer.shapeOpacity+'"';}
if(layer.pointOpacity){widgetCode+=' point-opacity="'+layer.pointOpacity+'"';}
if(layer.borderColor){widgetCode+=' border-color="'+layer.borderColor+'"';}
if(layer.borderOpacity){widgetCode+=' border-opacity="'+layer.borderOpacity+'"';}
if(layer.borderSize){widgetCode+=' border-size="'+layer.borderSize+'"';}
if(layer.borderPattern){widgetCode+=' border-pattern="'+layer.borderPattern+'"';}
if(layer.lineWidth!==5){widgetCode+=' line-width="'+layer.lineWidth+'"';}
if(layer.caption){widgetCode+=' caption="true"';if(layer.captionTitle){widgetCode+=' caption-title="'+layer.captionTitle.replace(/"/g,'&quot;')+'"';}}
if(layer.captionPictoIcon){widgetCode+=' caption-picto-icon="'+layer.captionPictoIcon+'"';}
if(layer.captionPictoColor){widgetCode+=' caption-picto-color="'+layer.captionPictoColor+'"';}
if(layer.title){widgetCode+=' title="'+layer.title+'"';}
if(layer.description){widgetCode+=' description="'+layer.description+'"';}
if(layer.showZoomMin){widgetCode+=' show-zoom-min="'+layer.showZoomMin+'"';}
if(layer.showZoomMax){widgetCode+=' show-zoom-max="'+layer.showZoomMax+'"';}
var VARIABLE_SIZE_DISPLAYS=['auto','polygon','polygonforced','clusters'];var FIXED_SIZE_DISPLAYS=['auto','categories','choropleth','raw','clustered'];var FUNCTION_SIZE_DISPLAYS=['auto','polygon','polygonforced','clusters','heatmap'];if(FIXED_SIZE_DISPLAYS.indexOf(layer.display)>=0&&layer.size){widgetCode+=' size="'+layer.size+'"';}
if(VARIABLE_SIZE_DISPLAYS.indexOf(layer.display)>=0){if(layer.minSize){widgetCode+=' size-min="'+layer.minSize+'"';}
if(layer.maxSize){widgetCode+=' size-max="'+layer.maxSize+'"';}}
if(FUNCTION_SIZE_DISPLAYS.indexOf(layer.display)>=0&&layer.sizeFunction){widgetCode+=' size-function="'+layer.sizeFunction+'"';}
widgetCode+='>';widgetCode+='</d4c-map-layer>\n';});widgetCode+=indent('</d4c-map-layer-group>\n',1);});widgetCode+='</d4c-map>\n';widgetCode=contextsCodeBuilder.wrapInContextsCode(widgetCode);return widgetCode;},buildCustomViewCode:function(context){var widgetCode='';var contextsCodeBuilder=buildContextsCode();if(context.dataset.extra_metas&&context.dataset.extra_metas.visualization&&context.dataset.extra_metas.visualization.custom_view_html){widgetCode=context.dataset.extra_metas.visualization.custom_view_html;}
if(context.dataset.extra_metas&&context.dataset.extra_metas.visualization&&context.dataset.extra_metas.visualization.custom_view_css){widgetCode+="\n<style type=\"text/css\">\n"+context.dataset.extra_metas.visualization.custom_view_css+"\n</style>\n";}
contextsCodeBuilder.addContext(context,'ctx');return contextsCodeBuilder.wrapInContextsCode(widgetCode);}};});}());;(function(){'use strict';var betterTab=function(cm){if(cm.somethingSelected()){cm.indentSelection("add");}else{cm.replaceSelection(cm.getOption("indentWithTabs")?"\t":Array(cm.getOption("indentUnit")+1).join(" "),"end","+input");}};var app=angular.module('d4c.core');app.factory("codeMirrorOptions",[function(){return{css:{mode:'text/css',lineNumbers:true,indentWithTabs:false,indentUnit:4,styleActiveLine:true,viewportMargin:Infinity,foldGutter:true,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],matchBrackets:true,autoCloseBrackets:true,extraKeys:{Tab:betterTab,"Ctrl-Space":"autocomplete"}},html:{mode:'text/html',lineNumbers:true,indentWithTabs:false,indentUnit:4,styleActiveLine:true,viewportMargin:Infinity,foldGutter:true,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],matchTags:{bothTags:true},autoCloseTags:true,extraKeys:{Tab:betterTab,"Ctrl-Space":"autocomplete"}}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.factory('pollJobStatus',['ManagementAPIV2','$timeout',function(ManagementAPIV2,$timeout){var pollJobStatus=function(jobUuid,callback,delay){if(isNaN(delay)){delay=500;}
ManagementAPIV2.jobs.get(jobUuid).success(function(response){if(response.state==='done'||response.state==='error'){callback(response);}else{$timeout(function(){pollJobStatus(jobUuid,callback,delay);},delay);}});};return pollJobStatus;}]);}());;(function(){'use strict';var app=angular.module('d4c.core');app.service('securityService',function($rootScope){var security={};return{update:function(sec){security=sec;$rootScope.$broadcast('securityDomainService',security);},retrieve:function(){return security;}};});app.factory('APIFileService',['$q','$rootScope','d4cNotificationService','DebugLogger',function($q,$rootScope,d4cNotificationService,DebugLogger) {function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=jQuery.trim(cookies[i]);if(cookie.substring(0,name.length+1)==(name+'=')){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}
return cookieValue;}
return function(url,file,callback,extraData){var deferred=$q.defer();var xhr=new XMLHttpRequest();xhr.upload.addEventListener("progress",callback,false);xhr.addEventListener("load",function(e){var target=e.target||e.srcElement;if(target.status==200){deferred.resolve(target.response);}else{deferred.reject(e);}
$rootScope.$apply();},false);xhr.addEventListener("error",function(e){deferred.reject(e);$rootScope.$apply();},false);xhr.open("POST",url);xhr.setRequestHeader('X-Requested-With','XMLHttpRequest');xhr.setRequestHeader('X-CSRFToken',getCookie('csrftoken'));var formdata=new FormData();formdata.append("file",file);if(extraData){angular.forEach(extraData,function(value,key){if(value){formdata.append(key,value);}});}
xhr.send(formdata);DebugLogger.log('%cPOST '+url,"color: #999");return deferred.promise.then(function(reason){return reason;},function(reason){try{var data=angular.fromJson(reason.target.responseText);if(data){d4cNotificationService.sendNotification(data);}}catch(err){}
return $q.reject(reason);});};}]);app.factory("APIXHRService",["$http","DebugLogger","d4cNotificationService","d4cHttpErrorMessages",function($http,DebugLogger,d4cNotificationService,d4cHttpErrorMessages){return function(method,url,data,customHeaders,timeout){var headers={"Content-Type":"application/json"};if(customHeaders){angular.extend(headers,customHeaders);}
data=data||{};DebugLogger.log('%c'+method+' '+url,"color: #999");var options={method:method,url:url,headers:headers,cache:false};if(timeout){options.timeout=timeout;}
if(method=='GET'){options.params=data;}else{options.data=data;}
var request=$http(options);request.error(function(data,status){if(data){data._request=request;if(data.error_key==="InvalidManagementAPIRequestException"&&data.errors.length>0){d4cNotificationService.sendNotification({title:data.message,type:'error',message:data.errors[0].message});}else{d4cNotificationService.sendNotification(data);}}else if(status>=400){d4cNotificationService.sendNotification(d4cHttpErrorMessages.getForStatus(status));}});return request;};}]);app.factory("ManagementAPI",["APIFileService","APIXHRService","$q","$rootScope",'config','DebugLogger','d4cNotificationService',function(APIFileService,APIXHRService,$q,$rootScope,config,DebugLogger,d4cNotificationService){var API_PATH = fetchPrefix() + '/d4c/api/management/1.0/';var assetUrlToFileName=function(url){if(url.indexOf('/')>-1){url=url.split('/')[url.split('/').length-1];}
return url;};return{'support':function(options){return APIXHRService("POST",API_PATH+"support/",options);},'charts':{'new':function(title,chartData){return APIXHRService("POST",API_PATH+"charts/",{'title':title,'value':chartData});},'list':function(){return APIXHRService("GET",API_PATH+"charts/",{});},'lookup':function(chartId){return APIXHRService("GET",API_PATH+"charts/"+chartId+'/',{});},'update':function(chartId,title,chartData){return APIXHRService("POST",API_PATH+"charts/"+chartId+'/',{'title':title,'value':chartData});},'delete':function(chartId){return APIXHRService("DELETE",API_PATH+"charts/"+chartId+'/',{});}},'map':{save:function(mapid,title,value){return APIXHRService("POST",API_PATH+"map/save/",{'mapid':mapid,'title':title,'values':value});},'delete':function(mapid){return APIXHRService("POST",API_PATH+"map/delete/"+mapid+"/");},list:function(){return APIXHRService("GET",API_PATH+"map/");}},'users_suggest':function(options){return APIXHRService("GET",API_PATH+"domain/users/suggest/",options);},'domain':{'get':function(){return APIXHRService("GET",API_PATH+"domain/",{});},'update':function(updatedProperties){return APIXHRService("POST",API_PATH+"domain/update/",updatedProperties);},'groups':function(options){return APIXHRService("GET",API_PATH+"groups/",options);},'pages':function(){return APIXHRService("GET",API_PATH+'domain/pages/available',{});},'security':{'get':function(){return APIXHRService("GET",API_PATH+"security/",{});},'save':function(security){return APIXHRService("POST",API_PATH+"security/",security);}},license:{'status':function(){return APIXHRService('GET',API_PATH+'domain/license/');}},accessrequests:{'list':function(){return APIXHRService("GET",API_PATH+"domain/accessrequests/");},'resolve':function(user_id,is_accepted,reason){return APIXHRService("POST",API_PATH+"domain/accessrequests/",{user_id:user_id,is_accepted:is_accepted,reason:reason});}},'supported_processors':function(){return APIXHRService("GET",API_PATH+"domain/supported_processors/",{});}},domain_theme:{'save':function(theme){return APIXHRService("POST",API_PATH+"domain_theme/",theme);},'get':function(version){return APIXHRService("GET",API_PATH+"domain_theme/"+version+'/');},'make_live':function(version){return APIXHRService("GET",API_PATH+"domain_theme/"+version+"/make_live/");},'get_apikey':function(){return APIXHRService("GET",API_PATH+"domain_theme/apikey/");},'regenerate_apikey':function(){return APIXHRService("POST",API_PATH+"domain_theme/apikey/");}},'external_service_check':function(parameters){return APIXHRService("POST",API_PATH+"domain/verify_service_authentication",parameters);},'attachments':{'new':function(file,callback){return APIFileService(API_PATH+"attachments/",file,callback);}},'alternative_exports':{'new':function(file,callback){return APIFileService(API_PATH+"alternative_exports/",file,callback);}},'resources':{'fields':function(resource){return APIXHRService("POST",API_PATH+"resources/fields/",resource);},'preview':function(resource,nhits,options){nhits=nhits||10;options=options||{};return APIXHRService("POST",API_PATH+"resources/preview/?nhits="+nhits,resource,{},options.timeout);},'config':function(resource){return APIXHRService("POST",API_PATH+"resources/config/",resource);},'supported_formats':function(){return APIXHRService("GET",API_PATH+"resources/supported_formats/",{});},'new_realtime':function(callback){return APIXHRService("POST",API_PATH+"resources/new_realtime");},'new_file':function(file,callback){return APIFileService(API_PATH+"resources/",file,callback);},'new_text':function(text){return APIXHRService("POST",API_PATH+"resources/new_text",text);},'new_url':function(text){return APIXHRService("POST",API_PATH+"resources/new_url",text);}},'datasets':{'list':function(options){if(!options){options={};}
return APIXHRService("GET",API_PATH+"datasets/",options);},'preview':function(dataset,nhits,timeout){nhits=nhits||10;return APIXHRService("POST",API_PATH+"datasets/preview/?nhits="+nhits,dataset,{},timeout);},'show':function(id){return APIXHRService("GET",API_PATH+"datasets/"+id+"/",{});},'show_remote':function(dataset){return APIXHRService("POST",API_PATH+"datasets/remote/",dataset);},'show_remote_unverified':function(federation_parameters){return APIXHRService("POST",API_PATH+"datasets/remote_unverified/",federation_parameters);},'save':function(dataset){return APIXHRService("POST",API_PATH+"datasets/",dataset);},'delete':function(dataset){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/delete/");},'status':function(dataset){return APIXHRService("GET",API_PATH+"datasets/"+dataset.id+"/status/",{});},'versions':function(dataset){return APIXHRService("GET",API_PATH+"datasets/"+dataset.id+"/versions/",{});},'publish':function(dataset){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/publish/",dataset);},'records_errors':function(dataset,nhits){nhits=nhits||100;return APIXHRService("GET",API_PATH+"datasets/"+dataset.id+"/records_errors/?nhits="+nhits);},'unpublish':function(dataset){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/unpublish/",dataset);},'rename':function(dataset,new_dataset_id){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/rename/",{new_dataset_id:new_dataset_id});},'copy':function(dataset){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/copy/",dataset);},'abort_publish':function(dataset){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/abort_publish/",dataset);},'security':{'get':function(dataset){return APIXHRService("GET",API_PATH+"datasets/"+dataset.id+"/security/",{});},'save':function(dataset,security){return APIXHRService("POST",API_PATH+"datasets/"+dataset.id+"/security/",security);}},'resources':{'update_file':function(dataset,resource,file,callback){return APIFileService(API_PATH+'datasets/'+dataset.id+"/resources/"+resource.id+"/update_file/",file,callback);},'enable':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+"/resources/"+resource.id+"/enable/",callback);},'disable':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+"/resources/"+resource.id+"/disable/",callback);},'scratchRecover':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+"/resources/"+resource.id+"/recover/scratch/",callback);},'reindexRecover':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+"/resources/"+resource.id+"/recover/",callback);},'cancelReindexRecover':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+"/resources/"+resource.id+"/recover/cancel/",callback);},'generateApiKey':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+'/resources/'+resource.id+'/api_keys/generate/',callback);},'getApiKeys':function(dataset,resource,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+'/resources/'+resource.id+'/api_keys/',callback);},'deleteApiKey':function(dataset,resource,key,callback){return APIXHRService("DELETE",API_PATH+'datasets/'+dataset.id+'/resources/'+resource.id+'/api_keys/'+key+'/',callback);},'renewAPIKey':function(dataset,resource,key,callback){return APIXHRService("GET",API_PATH+'datasets/'+dataset.id+'/resources/'+resource.id+'/api_keys/renew/'+key+'/',callback);}},'processors_rewrite':function(processors,from_name,to_name){return APIXHRService("POST",API_PATH+"datasets/rename_processors/",{processors:processors,from_name:from_name,to_name:to_name});},'guess_processor_params':function(dataset){return APIXHRService("POST",API_PATH+"datasets/guess_processor_params/",dataset);},'snapshots':{'save':function(dataset_id,description){return APIXHRService("POST",API_PATH+"datasets/"+dataset_id+"/snapshots/",{description:description});},'list':function(dataset_id){return APIXHRService("GET",API_PATH+"datasets/"+dataset_id+"/snapshots/",{});},'delete':function(dataset_id,snapshot_id){return APIXHRService("POST",API_PATH+"datasets/"+dataset_id+"/snapshots/"+snapshot_id+"/delete/",{});}},'subscribers':{'list':function(dataset_id){return APIXHRService("GET",API_PATH+"datasets/"+dataset_id+"/subscribers/",{});},'notify':function(dataset_id,content){return APIXHRService("POST",API_PATH+"datasets/"+dataset_id+"/subscribers/notify/",content);}},'feedback':{'list':function(dataset_id,options){return APIXHRService("GET",API_PATH+"datasets/"+dataset_id+"/feedback/",options);},'archive':function(dataset_id,feedback){return APIXHRService("POST",API_PATH+"datasets/"+dataset_id+"/feedback/archive/",feedback);}}},'harvest':{'get':function(harvest_id){return APIXHRService("GET",API_PATH+'harvesters/'+harvest_id+'/',{});},'list':function(){return APIXHRService("GET",API_PATH+"harvesters/list/",{});},'available_harvesters':function(){return APIXHRService("GET",API_PATH+"harvesters/available_harvesters/",{});},'update':function(harvesterparams){return APIXHRService("POST",API_PATH+'harvesters/update/',harvesterparams);},'del':function(harvest_id){return APIXHRService('GET',API_PATH+'harvesters/'+harvest_id+'/delete/',{});},'start':function(harvest_id){return APIXHRService('GET',API_PATH+'harvesters/'+harvest_id+'/start/',{});},'publish':function(harvest_id){return APIXHRService('GET',API_PATH+'harvesters/'+harvest_id+'/publish/',{});},'unpublish':function(harvest_id){return APIXHRService('GET',API_PATH+'harvesters/'+harvest_id+'/unpublish/',{});},'detach':function(harvest_id){return APIXHRService('GET',API_PATH+'harvesters/'+harvest_id+'/detach/',{});},'status':function(){return APIXHRService("GET",API_PATH+'harvesters/status/',{});},'abort':function(harvest_id){return APIXHRService("GET",API_PATH+'harvesters/'+harvest_id+'/abort/',{});}},'metadata_templates':{'get':function(language){if(language){return APIXHRService("GET",API_PATH+"metadata_templates/",{'lang':language});}else{return APIXHRService("GET",API_PATH+"metadata_templates/",{});}},'save':function(metadata_templates){return APIXHRService("POST",API_PATH+"metadata_templates/",metadata_templates);},'suggest':function(template_name,meta_name,query){return APIXHRService("GET",API_PATH+"metadata_templates/"+template_name+'/'+meta_name+'/suggest/',{query:query});}},'apiproxy':{'form_definition':function(){return APIXHRService("GET",API_PATH+"apis/api_form_configuration/",{});},'config_wizard':function(api_config){return APIXHRService("POST",API_PATH+"apis/api_wizard/",api_config);},'swagger_specs':function(dataset){return APIXHRService("POST",API_PATH+"apis/api_doc/",dataset);}},'reuses':{'list':function(){return APIXHRService('GET',API_PATH+'reuses/',{});},'pending':function(){return APIXHRService('GET',API_PATH+'reuses/pending/',{});},'edit':function(reuse_id,data){return APIXHRService('POST',API_PATH+'reuses/'+reuse_id+'/edit/',data);},'edit_url':function(reuse_id){return API_PATH+'reuses/'+reuse_id+'/edit/';},'delete':function(reuse_id,data){return APIXHRService('POST',API_PATH+'reuses/'+reuse_id+'/delete/',{});},'accept':function(reuse_id){return APIXHRService('POST',API_PATH+'reuses/'+reuse_id+'/accept/',{});},'reject':function(reuse_id,data){return APIXHRService('POST',API_PATH+'reuses/'+reuse_id+'/reject/',data);}},'assets':{'upload':function(asset_name,file,callback,properties){return APIFileService(API_PATH+'assets/'+asset_name+'/',file,callback,{'meta':properties});},'uploadUrl':function(asset_name,filename){var url=API_PATH+'assets/'+asset_name+'/';if(filename){url+=assetUrlToFileName(filename)+'/';}
return url;},'remove':function(asset_name,filename){var url=API_PATH+'assets/'+asset_name+'/delete/';if(filename){url+=assetUrlToFileName(filename)+'/';}
return APIXHRService('POST',url);},'get':function(asset_name,filename){var url=API_PATH+'assets/'+asset_name+'/';if(filename){url+=assetUrlToFileName(filename)+'/';}
return APIXHRService('GET',url);}},subdomains:{list:function(){return APIXHRService('GET',API_PATH+'subdomains/',{});},create:function(subdomain){return APIXHRService('POST',API_PATH+'subdomains/',subdomain);},get:function(subdomainId){return APIXHRService('GET',API_PATH+'subdomains/'+subdomainId+'/',{});},'delete':function(subdomainId){return APIXHRService('DELETE',API_PATH+'subdomains/'+subdomainId+'/',{});},related_domains:function(subdomainId){return APIXHRService('GET',API_PATH+'subdomains/related_domains/',{});},quotas:{get:function(subdomainId){return APIXHRService('GET',API_PATH+'subdomains/'+subdomainId+'/quotas/');},update:function(subdomainId,quotas){return APIXHRService('POST',API_PATH+'subdomains/'+subdomainId+'/quotas/',quotas);}}}};}]);app.factory("ManagementAPIV2",["APIFileService","APIXHRService",function(APIFileService,APIXHRService){var API_PATH_V2='/api/management/v2/';var getGroupIDs=function(groups){var groupIDs=[];angular.forEach(groups,function(group){groupIDs.push(group.group_id);});return groupIDs;};var getQuota=function(quota){quota=quota||{};if(!isNullOrUndefined(quota.limit)&&!quota.unit){quota.unit='day';}else if(isNullOrUndefined(quota.limit)){quota={};}
return quota;};var getLimits=function(sourceLimits){if(!sourceLimits){return{};}
var limits={};angular.forEach(['max_datasets','max_records_by_dataset'],function(limitName){if(!isNullOrUndefined(sourceLimits[limitName])){limits[limitName]=sourceLimits[limitName];}});return limits;};var getBulkParameters=function(filters,ids){var parameters={'ids':ids};if(filters['search']){parameters['search']=filters['search'];}
return parameters;};var cleanObject=function(object,propertyList){var i;object=angular.copy(object);var keys=Object.keys(object);for(i=0;i<keys.length;i++){var key=keys[i];if(propertyList.indexOf(key)===-1){delete object[key];}}
for(i=0;i<propertyList.length;i++){if(!object.hasOwnProperty(propertyList[i])){object[propertyList[i]]=null;}}
return object;};return{'content_packs':{'list':function(){return APIXHRService('GET',API_PATH_V2+'content_packs/');},'unpack':function(name){return APIXHRService('PUT',API_PATH_V2+'unpack_content_pack/',{name:name});}},'files':{'new':function(file,callback){return APIFileService(API_PATH_V2+"files/",file,callback);},'list':function(){return APIXHRService('GET',API_PATH_V2+'files/')}},'jobs':{'get':function(jobUuid){return APIXHRService('GET',API_PATH_V2+'jobs/'+jobUuid);}},'datasets':{'abort':function(datasetUUID){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUUID+'/abort/');},'attachments':{'delete':function(datasetUID,attachmentUID){return APIXHRService('DELETE',API_PATH_V2+'datasets/'+datasetUID+'/attachments/'+attachmentUID)},'list':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/attachments/');},'new':function(datasetUID,fileURL){return APIXHRService('POST',API_PATH_V2+"datasets/"+datasetUID+'/attachments/',{url:fileURL});}},'changes':function(datasetUUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUUID+'/changes/');},'metadata':{'list':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/metadata/');},'get':function(datasetUID,metadataTemplateName,metadataName){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/metadata/'+metadataTemplateName+'/'+metadataName+'/');},'update':function(datasetUID,metadataTemplateName,metadataName,value,overrideRemoteValue){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUID+'/metadata/'+metadataTemplateName+'/'+metadataName+'/',{value:value,override_remote_value:overrideRemoteValue});}},'new':function(title){return APIXHRService('POST',API_PATH_V2+'datasets/',{metas:{default:{title:title}}});},'outputFields':{'get':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/output_fields/');}},'publish':function(datasetUUID){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUUID+'/publish/');},'restoreChange':function(datasetUUID,changeId){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUUID+'/restore_change/'+changeId+'/');},'resources':{'list':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/resources/');}},'schedules':{'list':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/schedules/');},'new':function(datasetUID,schedule) {return APIXHRService('POST',API_PATH_V2+'datasets/'+datasetUID+'/schedules/',schedule);},'get':function(datasetUID,scheduleUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/schedules/'+scheduleUID+'/');},'update':function(datasetUID,schedule){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUID+'/schedules/'+schedule.schedule_uid+'/',schedule);},'delete':function(datasetUID,scheduleUID){return APIXHRService('DELETE',API_PATH_V2+'datasets/'+datasetUID+'/schedules/'+scheduleUID+'/');}},'security':{'accessPolicy':{'get':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/security/access_policy/');},'update':function(datasetUID,accessPolicy){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUID+'/security/access_policy/',JSON.stringify(accessPolicy));}},'default':{'get':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/security/default/');},'update':function(datasetUID,defaultSecurity){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUID+'/security/default/',defaultSecurity);}},'users':{'list':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/security/users/',{expand:'user'});},'new':function(datasetUID,ruleset){var data=cleanObject(ruleset,['permissions','visible_fields','is_data_visible','filter_query','api_calls_quota','user']);return APIXHRService('POST',API_PATH_V2+'datasets/'+datasetUID+'/security/users/',data);},'delete':function(datasetUID,username){return APIXHRService('DELETE',API_PATH_V2+'datasets/'+datasetUID+'/security/users/'+username+'/');},'update':function(datasetUID,username,ruleset){var data=cleanObject(ruleset,['permissions','visible_fields','is_data_visible','filter_query','api_calls_quota']);return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUID+'/security/users/'+username+'/',data);}},'groups':{'list':function(datasetUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUID+'/security/groups/',{expand:'group'});},'new':function(datasetUID,ruleset){var data=cleanObject(ruleset,['permissions','visible_fields','is_data_visible','filter_query','api_calls_quota','group']);return APIXHRService('POST',API_PATH_V2+'datasets/'+datasetUID+'/security/groups/',data);},'delete':function(datasetUID,group_id){return APIXHRService('DELETE',API_PATH_V2+'datasets/'+datasetUID+'/security/groups/'+group_id+'/');},'update':function(datasetUID,group_id,ruleset){var data=cleanObject(ruleset,['permissions','visible_fields','is_data_visible','filter_query','api_calls_quota']);return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUID+'/security/groups/'+group_id+'/',data);}}},'status':function(datasetUUID){return APIXHRService('GET',API_PATH_V2+'datasets/'+datasetUUID+'/status/',{expand:'datasetid'});},'unpublish':function(datasetUUID){return APIXHRService('PUT',API_PATH_V2+'datasets/'+datasetUUID+'/unpublish/');}},'users':{'list':function(searchParams){searchParams=searchParams||{};if(angular.isArray(searchParams.permissions)) {searchParams.permissions=searchParams.permissions.join(',');}
if(!searchParams.permissions){delete searchParams.permissions;}
return APIXHRService('GET',API_PATH_V2+'users/',searchParams);},'invite':function(emails){emails=angular.isString(emails)?[emails]:emails;return APIXHRService('POST',API_PATH_V2+'users/',{emails:emails});},'lookup':function(username){return APIXHRService('GET',API_PATH_V2+'users/'+username+'/',{});},'delete':function(username){return APIXHRService('DELETE',API_PATH_V2+'users/'+username+'/',{});},'update':function(username,userData){var user={permissions:userData.permissions||[],group_ids:userData.group_ids|| getGroupIDs(userData.groups),quotas:getQuota(userData.quotas),limits:getLimits(userData.limits)};return APIXHRService('PUT',API_PATH_V2+'users/'+username+'/',user);},'removePermissions':function(username,permissions){if(angular.isString(permissions)){permissions=[permissions];}
return APIXHRService('DELETE',API_PATH_V2+'users/'+username+'/permissions/',{permissions:permissions});},'addPermissions':function(username,permissions){if(angular.isString(permissions)){permissions=[permissions];}
return APIXHRService('POST',API_PATH_V2+'users/'+username+'/permissions/',{permissions:permissions});},'removeFromGroups':function(username,group_ids){if(angular.isString(group_ids)){group_ids=[group_ids];}
return APIXHRService('DELETE',API_PATH_V2+'users/'+username+'/groups/',{group_ids:group_ids});},'addToGroups':function(username,group_ids){if(angular.isString(group_ids)){group_ids=[group_ids];}
return APIXHRService('POST',API_PATH_V2+'users/'+username+'/groups/',{group_ids:group_ids});}},'groups':{'list':function(){return APIXHRService('GET',API_PATH_V2+'groups/',{});},'new':function(title){return APIXHRService('POST',API_PATH_V2+'groups/',{title:title});},'lookup':function(groupId){return APIXHRService('GET',API_PATH_V2+'groups/'+groupId+'/',{});},'update':function(groupId,groupData){var group={title:groupData.title,permissions:groupData.permissions||[],quotas:getQuota(groupData.quotas),limits:getLimits(groupData.limits)};return APIXHRService('PUT',API_PATH_V2+'groups/'+groupId+'/',group);},'delete':function(groupId){return APIXHRService('DELETE',API_PATH_V2+'groups/'+groupId+'/',{});},'removePermissions':function(groupId,permissions){if(angular.isString(permissions)){permissions=[permissions];}
return APIXHRService('DELETE',API_PATH_V2+'groups/'+groupId+'/permissions/',{permissions:permissions});},'addPermissions':function(groupId,permissions){if(angular.isString(permissions)){permissions=[permissions];}
return APIXHRService('POST',API_PATH_V2+'groups/'+groupId+'/permissions/',{permissions:permissions});},'users':{'list':function(groupId,searchParams){searchParams=searchParams||{};return APIXHRService('GET',API_PATH_V2+'groups/'+groupId+'/users/',searchParams);},'new':function(groupId,usernames){usernames=angular.isArray(usernames)?usernames:[usernames];return APIXHRService('POST',API_PATH_V2+'groups/'+groupId+'/users/',{'usernames':usernames});},'delete':function(groupId,username){return APIXHRService('DELETE',API_PATH_V2+'groups/'+groupId+'/users/'+username+'/',{});}}},'accessRequests':{'list':function(){return APIXHRService('GET',API_PATH_V2+'access_requests/',{});},'approve':function(accessRequestId){return APIXHRService('PUT',API_PATH_V2+'access_requests/'+accessRequestId+'/approve/',{});},'reject':function(accessRequestId){return APIXHRService('PUT',API_PATH_V2+'access_requests/'+accessRequestId+'/reject/',{});}},'subdomains':{'list':function(searchParams){searchParams=searchParams||{};return APIXHRService('GET',API_PATH_V2+'subdomains/',searchParams);},'create':function(subdomain){return APIXHRService('POST',API_PATH_V2+'subdomains/',subdomain);},'get':function(subdomainId){return APIXHRService('GET',API_PATH_V2+'subdomains/'+subdomainId+'/',{});},'delete':function(subdomainId){return APIXHRService('DELETE',API_PATH+'subdomains/'+subdomainId+'/',{});},'update':function(subdomain){return APIXHRService('PUT',API_PATH_V2+'subdomains/'+encodeURIComponent(subdomain.id)+'/',subdomain);},'settings':{'get':function(){return APIXHRService('GET',API_PATH_V2+'subdomains/settings/',{});},'update':function(properties){return APIXHRService('POST',API_PATH_V2+'subdomains/settings/',properties);}},'bulk':{'pushContent':function(filters,subdomains,content){return APIXHRService('PATCH',API_PATH_V2+'subdomains/',Object.assign({},getBulkParameters(filters,subdomains),{'datasets':content['datasets']||[],'pages':content['pages']||[]}));},'delete':function(filters,subdomains){return APIXHRService('DELETE',API_PATH_V2+'subdomains/',getBulkParameters(filters,subdomains));}}},'pages':{'bulk':{'delete':function(search,pages){return APIXHRService('DELETE',API_PATH_V2+'pages/'+(search?'?search='+encodeURIComponent(search):''),pages);}},'list':function(searchParams){searchParams=searchParams||{};if(angular.isArray(searchParams.permissions)){searchParams.permissions=searchParams.permissions.join(',');}
if(!searchParams.permissions){delete searchParams.permissions;}
return APIXHRService('GET',API_PATH_V2+'pages/',searchParams);},'delete':function(pageId){return APIXHRService('DELETE',API_PATH_V2+'pages/'+pageId+'/',{});},create:function(page){return APIXHRService("POST",API_PATH_V2+'pages/',page);},'isValidTitle':function(title,language){var deferred=$q.defer();this.list().then(function(list){var valid=true;for(var i=0;i<list.length;i++){if(list[i].title[language]===title){valid=false;break;}}
deferred.resolve(valid);},function(reason){deferred.reject(reason);});return deferred.promise;},'save':function(pageId,page){return APIXHRService("PUT",API_PATH_V2+'pages/'+pageId+'/',page);}},'harvesters':{'create':function(harvester){return APIXHRService('POST',API_PATH_V2+'harvesters/',harvester);},'preview':function(harvester_id,params){return APIXHRService('POST',API_PATH_V2+'harvesters/'+harvester_id+'/preview/',{params:params});},'start':function(harvester_id){return APIXHRService('PUT',API_PATH_V2+'harvesters/'+harvester_id+'/start/');},'publish':function(harvester_id){return APIXHRService('PUT',API_PATH_V2+'harvesters/'+harvester_id+'/publish/');},'unpublish':function(harvester_id){return APIXHRService('PUT',API_PATH_V2+'harvesters/'+harvester_id+'/unpublish/');},'errors':function(harvester_id){return APIXHRService('GET',API_PATH_V2+'harvesters/'+harvester_id+'/errors/');},'abort':function(harvester_id){return APIXHRService('PUT',API_PATH_V2+'harvesters/'+harvester_id+'/abort/');},'delete':function(harvester_id,delete_attached_datasets){return APIXHRService('DELETE',API_PATH_V2+'harvesters/'+harvester_id+'/?delete_attached_datasets='+delete_attached_datasets);},'update':function(harvester_id,harvester){harvester=angular.copy(harvester);delete harvester.status;delete harvester.has_errors;delete harvester.created_at;delete harvester.harvester_id;delete harvester.last_modified_by;delete harvester.last_modified_at;delete harvester.last_started_at;delete harvester.last_success_at;delete harvester.counters;delete harvester.errors;delete harvester.fetcher;return APIXHRService('PUT',API_PATH_V2+'harvesters/'+harvester_id+'/',harvester);},'types':function(){return APIXHRService('GET',API_PATH_V2+'harvester_types/');},'list':function(){return APIXHRService('GET',API_PATH_V2+'harvesters/');}},'authorizedMetadata':{'list':function(){return APIXHRService('GET',API_PATH_V2+'authorized_metadata/');}}};}]);app.factory("SearchAPI",["APIXHRService","config",function(APIXHRService,config){var API_PATH = fetchPrefix() + '/d4c/api/';var customHeaders={};var timezone=jstz.determine().name();var timezoneAwareOptions=function(options){options=options||{};options.timezone=timezone;return options;};return{setApplication:function(appName){customHeaders["D4C-API-Analytics-App"]=appName;},setCustomHeaders:function(headers){angular.extend(customHeaders,headers);},persist:{map:function(mapid,title,value){return APIXHRService("POST","/map"+API_PATH+"save/",{'mapid':mapid,'title':title,'values':value});}},datasets:{'lookup':function(datasetId,options){return APIXHRService("GET",API_PATH+'datasets/1.0/'+datasetId+'/',timezoneAwareOptions(options),customHeaders);},'search':function(options){return APIXHRService("GET",API_PATH+'datasets/1.0/search/',timezoneAwareOptions(options),customHeaders);},'attachmentURL':function(attachment){return API_PATH+'datasets/1.0/'+config.DATASET_ID+'/attachments/'+attachment.id+'/';},'feedback':function(datasetId,data){return APIXHRService('POST',API_PATH+'datasets/1.0/'+datasetId+'/feedback/',data);},'specifications':function(datasetId,type,format){return APIXHRService('GET','/service/specifications/'+datasetId+'/'+type+'.'+format);}},records:{'search':function(options){return APIXHRService("GET",API_PATH+'records/1.0/search/',timezoneAwareOptions(options),customHeaders);},'download':function(options){return APIXHRService("GET",API_PATH+'records/1.0/download/',timezoneAwareOptions(options),customHeaders);},'analyze':function(options){return APIXHRService("GET",API_PATH+'records/1.0/analyze/',timezoneAwareOptions(options),customHeaders);},'geo':function(options,timeout){return APIXHRService("GET",API_PATH+'records/1.0/geocluster/',timezoneAwareOptions(options),customHeaders,timeout);},'geopreview':function(options,timeout){return APIXHRService("GET",API_PATH+'records/1.0/geopreview/',timezoneAwareOptions(options),customHeaders,timeout);},'geopolygon':function(options,timeout){return APIXHRService("GET",API_PATH+'records/1.0/geopolygon/',timezoneAwareOptions(options),customHeaders,timeout);},'boundingbox':function(options,timeout){return APIXHRService("GET",API_PATH+'records/1.0/boundingbox/',timezoneAwareOptions(options),customHeaders,timeout);}},metadata:{'basic':function(){return APIXHRService("GET",API_PATH+'metadata/1.0/basic/',{},customHeaders);},'interop':function(){return APIXHRService("GET",API_PATH+'metadata/1.0/interop/',{},customHeaders);},'extra':function(){return APIXHRService("GET",API_PATH+'metadata/1.0/extra/',{},customHeaders);}},snapshots:{'list':function(dataset_id){return APIXHRService('GET',API_PATH+'datasets/1.0/'+dataset_id+'/snapshots/',{},customHeaders);}},services:{'list':function(dataset_id){return APIXHRService('GET',API_PATH+'datasets/1.0/'+dataset_id+'/services/',{},customHeaders);}}};}]);app.factory('PlatformAPI',['APIXHRService','config',function(APIXHRService,config){var API_PATH = fetchPrefix() + '/d4c/api/platform/1.0/';return{domains:{'delete':function(domain){return APIXHRService('POST',API_PATH+'domains/'+domain.id+'/delete/'+domain);},'new':function(domain){return APIXHRService('POST',API_PATH+'domains/',domain);},'save':function(domain_id,isNew,domain,firstUser){return APIXHRService('POST',API_PATH+'domains/'+domain_id+'/',{'is_new':isNew,'domain':domain,'first_user':firstUser});},'get':function(domain_id){return APIXHRService('GET',API_PATH+'domains/'+domain_id+'/');},'statuses':function(){return APIXHRService('GET',API_PATH+'domains/statuses/',{});},'refresh':function(){return APIXHRService('POST',API_PATH+'domains/refresh/',{});},'idValidAndAvailable':function(domainId){return APIXHRService('GET',API_PATH+'domains/'+domainId+'/valid/');},license:{'infos':function(){return APIXHRService('GET',API_PATH+'domains/license/');},},aliases:{'lookup':function(domainId){return APIXHRService('GET',API_PATH+'domains/'+domainId+'/enumerate_aliases/');}},url_rewrites:{'lookup':function(domainId){return APIXHRService('GET',API_PATH+'domains/'+domainId+'/enumerate_url_rewrites/');}},ip_whitelist:{'lookup':function(domainId){return APIXHRService('GET',API_PATH+'domains/'+domainId+'/enumerate_full_ip_whitelist/');}}},suggest:{'all':function(options){return APIXHRService('GET',API_PATH+'suggest/all/',options);}},resources:{'enumerate_extractors':function(){return APIXHRService("GET",API_PATH+"resources/enumerate_extractors/",{});},'enumerate_processors':function(){return APIXHRService("GET",API_PATH+"resources/enumerate_processors/",{});},'enumerate_harvesters':function(){return APIXHRService("GET",API_PATH+"resources/enumerate_harvesters/",{});}},user:{'save':function(user){return APIXHRService("POST",API_PATH+"user/",user);},'send_email':function(user){return APIXHRService("POST",API_PATH+"user/email/",user);},'suggest':function(options){return APIXHRService("GET",API_PATH+"user/suggest/",options);},'get':function(user_name){return APIXHRService("GET",API_PATH+"user/",{"id":user_name});}}};}]);app.factory('CoreAPI',['APIXHRService','config',function(APIXHRService,config){var API_PATH = fetchPrefix() + '/d4c/api/';return{'account':{'get':function(){return APIXHRService("GET",API_PATH+"account/",{});},'save_details':function(user){return APIXHRService("POST",API_PATH+"account/details/",user);},'save_password':function(pass){return APIXHRService("POST",API_PATH+"account/password/",pass);},'save_email':function(email){return APIXHRService("POST",API_PATH+"account/email/",{'new_email':email});},'datasets_index_filters':{'lookup':function(){return APIXHRService("GET",API_PATH+"account/datasets_index_filters/");},'update':function(datasets_index_filters){return APIXHRService("PUT",API_PATH+"account/datasets_index_filters/",{'datasets_index_filters':datasets_index_filters});}},'api_key':{'list':function(){return APIXHRService("GET",API_PATH+"account/apikeys/");},'generate':function(){return APIXHRService("POST",API_PATH+"account/apikey/generate/");},'lookup':function(key){return APIXHRService("GET",API_PATH+"account/apikey/"+key+"/");},'update':function(key,params){return APIXHRService("POST",API_PATH+"account/apikey/"+key+"/",params);},'revoke':function(key){return APIXHRService("DELETE",API_PATH+"account/apikey/"+key+"/");}},'quota':{'get':function(){return APIXHRService("GET",API_PATH+"account/quota/");}},'subscriptions':{'datasets':{'subscribe':function(datasetId){return APIXHRService("POST",API_PATH+"account/subscriptions/datasets/"+datasetId+"/subscribe/");},'unsubscribe':function(datasetId){return APIXHRService("POST",API_PATH+"account/subscriptions/datasets/"+datasetId+"/unsubscribe/");}},'notifications':{'list':function(){return APIXHRService("GET",API_PATH+"account/subscriptions/notifications/");},'subscribe':function(notificationName){return APIXHRService("POST",API_PATH+"account/subscriptions/notifications/"+notificationName+"/subscribe/");},'unsubscribe':function(notificationName){return APIXHRService("POST",API_PATH+"account/subscriptions/notifications/"+notificationName+"/unsubscribe/");}},'newsletter':{'get':function(){return APIXHRService("GET",API_PATH+"account/subscriptions/newsletter/");},'language':function(language){return APIXHRService("POST",API_PATH+"account/subscriptions/newsletter/language/",{'language':language});},'subscribe':function(newsletterName){return APIXHRService("POST",API_PATH+"account/subscriptions/newsletter/"+newsletterName+"/subscribe/",{});},'unsubscribe':function(newsletterName){return APIXHRService("POST",API_PATH+"account/subscriptions/newsletter/"+newsletterName+"/unsubscribe/",{});}}},'sso_identities':{'list':function(){return APIXHRService("GET",API_PATH+"account/identities/");},'revoke':function(identityId){return APIXHRService("DELETE",API_PATH+"account/identity/"+identityId+"/");}},'onboardings':{'done':function(onboarding_id){return APIXHRService("POST",API_PATH+"account/onboardings/"+onboarding_id+"/");}}},'oauth2':{'applications':{'list':function(){return APIXHRService("GET",API_PATH+"oauth2/applications/");},'add':function(application){return APIXHRService("POST",API_PATH+"oauth2/applications/",application);},'remove':function(applicationId){return APIXHRService("POST",API_PATH+"oauth2/applications/"+applicationId+"/remove/");}},'grants':{'list':function(){return APIXHRService("GET",API_PATH+"oauth2/grants/");},'revoke':function(applicationId){return APIXHRService("POST",API_PATH+"oauth2/grants/"+applicationId+"/revoke/");}}}};}]);app.factory('PageAPI',['APIXHRService','$q','config',function(APIXHRService){var API_PATH = fetchPrefix() + '/d4c/api/v2/pages/';return{contact:function(slug,data){return APIXHRService("POST",API_PATH+slug+'/contact/',data);},list:function(){return APIXHRService("GET",API_PATH,{});},lookup:function(slug){return APIXHRService("GET",API_PATH+slug,{});}};}]);app.factory('MapbuilderAPI',['APIXHRService','$q','config',function(APIXHRService){var API_PATH = fetchPrefix() + '/d4c/api/v2/mapbuilder/';return{create:function(data){return APIXHRService("POST",API_PATH,data);},save:function(mapId,data){return APIXHRService("PUT",API_PATH+mapId+'/',data);},get:function(mapId){return APIXHRService("GET",API_PATH+mapId+'/');},list:function(){return APIXHRService("GET",API_PATH);},'delete':function(mapId){return APIXHRService("DELETE",API_PATH+mapId+'/');}};}]);app.factory('ReuseAPI',['APIXHRService','config',function(APIXHRService,config){var API_PATH = fetchPrefix() + '/d4c/api/datasets/1.0/';return{'list':function(){return APIXHRService('GET',API_PATH+config.DATASET_ID+'/reuses/',{});},'save':function(data){return APIXHRService('POST',API_PATH+config.DATASET_ID+'/reuses/',data);},'save_url':API_PATH+config.DATASET_ID+'/reuses/'};}]);app.factory("DebugLogger",['$window','config',function($window,config){return{log:function(){if(config.FORCE_DEBUG_LOGGER||$window.location.hash=='#debug'||$window.location.hash.indexOf('debug=')>=0||$(document.body).hasClass('showDebug')){console.log.apply(console,arguments);}}};}]);app.factory('AssetHelper',['$q','d4cNotificationService','APIFileService','translate',function($q,d4cNotificationService,APIFileService,translate){var getFullMessage=function(message,extra){message=translate(message);return extra?message.substr(0,message.length-1)+' (max '+extra+')'+message.substr(message.length-1):message;};var getMaxDimensions=function(config){return config.max_width+'x'+config.max_height;};var getMaxSize=function(config){if(config.max_size>Math.pow(1024,2)){return Math.round(config.max_size/Math.pow(1024,2)*10)/10+' Mo';}
return Math.round(config.max_size/1024)+' Ko';};var sizeAllowed=function(config,file){return file.size<=config.max_size;};return{post:function(url,file,config,extraData,callback){var deferred=$q.defer();if(!file||(file&&sizeAllowed(config,file))){APIFileService(url,file,callback,extraData).then(function(data){data=angular.fromJson(data);deferred.resolve(data);},function(data){if(data.target.responseText){data=angular.fromJson(data.target.responseText);data.error=$.inArray(data.errorcode,[70001,70002])>=0?getFullMessage(data.error,getMaxDimensions(config)):getFullMessage(data.error);}else{data={errorcode:70000,error:translate('Unable to save your changes.')};}
deferred.reject(data);});}else{var data={errorcode:70000,error:getFullMessage('The file you tried to upload exceeds the limit size.',getMaxSize(config))};d4cNotificationService.sendNotification(data);deferred.reject(data);}
return deferred.promise;}};}]);app.factory('LocationHelper',function(){return{delimiter:',',accuracy:5,formatLatLng:function(latLng){var lat=L.Util.formatNum(latLng.lat,this.accuracy);var lng=L.Util.formatNum(latLng.lng,this.accuracy);return new L.latLng(lat,lng);},getLocationParameterAsArray:function(location){return location.split(this.delimiter);},getLocationParameterFromMap:function(map){var center=this.formatLatLng(map.getCenter());return map.getZoom()+this.delimiter+center.lat+this.delimiter+center.lng;},getCenterFromLocationParameter:function(location){var a=this.getLocationParameterAsArray(location);return new L.latLng(a[1],a[2]);},getZoomFromLocationParameter:function(location){return this.getLocationParameterAsArray(location)[0];},serialize:function(center,zoom){center=this.formatLatLng(center);return zoom+this.delimiter+center.lat+this.delimiter+center.lng;}};});app.factory('$exceptionHandler',['$log','$injector',function($log,$injector){var alreadySent=[];return function(exception,cause){var $http=$injector.get('$http');var config=$injector.get('config');$log.error.apply($log,arguments);if(alreadySent.indexOf(exception.message)>=0){return;}else{alreadySent.push(exception.message);}
if(typeof exception==="string"){exception={message:exception,stack:''};}
var report={message:exception.message,stack:exception.stack,userlang:navigator.language||navigator.userLanguage,url:window.location.href,request_id:config.REQUEST_ID};$http.post('/api/errorprobe/',angular.toJson(report));};}]);app.service('EPSG',function(){var list={'2154':'Lambert 93 France','3949':'RGF93 / CC49'};return{nameFromEPSG:function(epsg){if(angular.isDefined(list[epsg])){return list[epsg]+' (EPSG:'+epsg+')';}else{return'EPSG:'+epsg;}},registry:function(){return list;},list:function(){var result=[];angular.forEach(list,function(label,epsg){result.push({label:label,value:epsg});});return result;}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.service('FlashService',function(){var counter=0;return{flashes:[],send:function(flash){var self=this;if(angular.isString(flash)){flash={type:'info',content:flash,isDismissible:true,onDismiss:null,};}
if(!flash.type){flash.type='info';}
if(!angular.isDefined(flash.isDismissible)){flash.isDismissible=true;}
flash.id=counter++;flash.dismiss=function(){self.dismiss(flash);};this.flashes.push(flash);return flash;},dismiss:function(flash){if(!flash.isDismissible){return;}
var i=this.flashes.length;while(i--){if(this.flashes[i].id===flash.id){this.flashes.splice(i,1);}}
if(angular.isFunction(flash.onDismiss)){flash.onDismiss();}},sendSuccess:function(flash){if(angular.isString(flash)){flash={type:'success',content:flash};}else{flash.type='success';}
return this.send(flash);},sendInfo:function(flash){if(angular.isString(flash)){flash={type:'info',content:flash};}else{flash.type='info';}
return this.send(flash);},sendWarning:function(flash){if(angular.isString(flash)){flash={type:'warning',content:flash};}else{flash.type='warning';}
return this.send(flash);},sendDanger:function(flash){if(angular.isString(flash)){flash={type:'danger',content:flash};}else{flash.type='danger';}
return this.send(flash);}};});})();;angular.module('d4c.core').factory('d4cVueComponentFactory',function vueComponentFactory(){return function(){return{restrict:'E',priority:9999,terminal:true,compile:function(tElem,tAttrs){tElem.attr('ng-non-bindable');return function(scope){var data={};var vm;var _scope=scope;while(_scope){angular.forEach(_scope,function(value,name){if(_scope.hasOwnProperty(name)&&name[0]!=='$'){data[name]=_scope[name];_scope.$watch(name,function(val){if(!vm)return;vm[name]=val;});}});_scope=_scope.$parent;}
vm=ngVue.createVueRoot(tElem[0],data);}},};}});;(function(){"use strict";var mod=angular.module('d4c.core');var D4CMimeType=function(mimetypeAsString){this.type=undefined;this.subtype=undefined;this.extension=undefined;mimetypeAsString=mimetypeAsString?mimetypeAsString.toLowerCase():'*/*';if(mimetypeAsString.indexOf('.')===0){this.extension=mimetypeAsString.substr(1);}else{var elements=mimetypeAsString.split('/');this.type=elements[0];this.subtype=(this.type!=='*'&&elements[1])|| '*';}
this.match=function(file){if(this.type==='*'){return true;}
if(this.extension){var extension=file.name.toLowerCase().split('.').pop();return this.extension===extension;}
var mimetype=new D4CMimeType(file.type);return this.type===mimetype.type&&(this.subtype===mimetype.subtype||this.subtype==='*');}};var D4CMimeTypeChecker=function(mimetypesAsString){this.mimetypes=[];var that=this;mimetypesAsString=mimetypesAsString||'';angular.forEach(mimetypesAsString.split(/\s*,\s*/),function(mimetypeAsString){that.mimetypes.push(new D4CMimeType(mimetypeAsString));});this.match=function(file){if(!this.mimetypes.length){return true;}
return this.mimetypes.some(function(mimetype){return mimetype.match(file);})};};mod.factory('D4CMimeType',function(){return D4CMimeType;});mod.factory('D4CMimeTypeChecker',function(){return D4CMimeTypeChecker;});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cTooltip',function($compile,$window,gettextCatalog,$interpolate){var tooltip=$('<div class="d4c-tooltip"></div>').hide();$(document.body).append(tooltip);return{require:'d4cTooltip',restrict:'A',controller:function($scope,$element,$attrs){this.rawTextTooltip=$attrs.d4cTooltip;this.rawTextTooltipPlural=$attrs.translatePlural;},link:function(scope,element,attrs,ctrl){var timeout,tooltipText;function showTooltip(content,position,e){if(content===''){return;}
tooltip[0].innerHTML='';tooltip.append(content);scope.$apply();if(['left','right','top','bottom'].indexOf(position)<0){if(e.clientX<$($window).width()/2){position='right';}else{position='left';}}
angular.forEach(['left','right','top','bottom'],function(direction){tooltip.removeClass('d4c-tooltip--'+direction);});switch(position){case'left':tooltip.addClass('d4c-tooltip--left');tooltip.css({left:'',right:$($window).width()-element.offset().left,top:element.offset().top,bottom:''});break;case'right':tooltip.addClass('d4c-tooltip--right');tooltip.css({left:element.offset().left+element.outerWidth(),right:'',top:element.offset().top,bottom:''});break;case'top':tooltip.addClass('d4c-tooltip--top');tooltip.css({left:element.offset().left+element.outerWidth()/2,right:'',top:'',bottom:$($window).height()-element.offset().top});break;case'bottom':tooltip.addClass('d4c-tooltip--bottom');tooltip.css({left:element.offset().left+element.outerWidth()/2,right:'',top:element.offset().top+element.outerHeight(),bottom:''});break;}
tooltip.show();scope.$watch(attrs.d4cTooltipDisabled,function(newValue,oldValue){if(!!newValue){tooltip.hide();}});}
var buildAndShowTooltip=function(e){if(attrs.translate&&attrs.translate==="d4c-tooltip"){if(angular.isDefined(attrs.translateN)){tooltipText=gettextCatalog.getPlural(scope.$eval(attrs.translateN),ctrl.rawTextTooltip,ctrl.rawTextTooltipPlural,scope,attrs.translateContext||null);}else{tooltipText=gettextCatalog.getString(ctrl.rawTextTooltip,scope,attrs.translateContext||null);}}else{tooltipText=$interpolate(ctrl.rawTextTooltip)(scope);}
if(!scope.$eval(attrs.d4cTooltipDisabled)){var delay=attrs.hasOwnProperty('d4cTooltipDelay')?attrs.d4cTooltipDelay:200;if(angular.isDefined(delay)&&delay!==''){timeout=setTimeout(function(){if(attrs.hasOwnProperty('d4cTooltipTemplate')&&scope.$eval(attrs.d4cTooltipTemplate)){showTooltip(scope.$eval(attrs.d4cTooltipTemplate),attrs.d4cTooltipDirection,e);}else{showTooltip(tooltipText,attrs.d4cTooltipDirection,e);}},attrs.hasOwnProperty('d4cTooltipDelay')?attrs.d4cTooltipDelay:200);}}};element.on('mouseenter',buildAndShowTooltip);scope.$on('refresh-tooltip',buildAndShowTooltip);element.on('mouseleave',function(e){if(timeout){clearTimeout(timeout);}
tooltip.hide();tooltip[0].innerHTML='';});element.on('focusout',function(){tooltip.hide();});element.on('$destroy',function(){tooltip.hide();});}};});mod.directive('d4cDisabledTooltip',function($compile,gettextCatalog){return{controller:function($scope,$element,$attrs){$scope.rawTextDisabledTooltip=$attrs.d4cDisabledTooltipText;$scope.rawTextTooltipPlural=$attrs.translatePlural;},link:function(scope,element,attrs){var classes='';if(attrs.d4cDisabledTooltipWrapperClass){classes=' '+attrs.d4cDisabledTooltipWrapperClass;}
element.wrap('<span class="d4c-disabled-tooltip'+classes+'" style="display: '+element.css('display')+';"></span>');var tooltipScope=scope.$new(false);if(angular.isUndefined(attrs.d4cDisabledTooltipDelay)){tooltipScope.delay=200;}else{tooltipScope.delay=parseInt(attrs.d4cDisabledTooltipDelay,10);}
if(attrs.translate&&attrs.translate==="d4c-disabled-tooltip-text"){if(angular.isDefined(attrs.translateN)){tooltipScope.text=gettextCatalog.getPlural(scope.$eval(attrs.translateN),scope.rawTextDisabledTooltip,scope.rawTextTooltipPlural,scope,attrs.translateContext||null);}else{tooltipScope.text=gettextCatalog.getString(scope.rawTextDisabledTooltip,scope,attrs.translateContext||null);}}else{tooltipScope.text=scope.rawTextDisabledTooltip;}
tooltipScope.template=scope.$eval(attrs.d4cDisabledTooltipTemplate);tooltipScope.direction=attrs.d4cDisabledTooltipDirection;scope.$watch(attrs.d4cDisabledTooltip,function(nv,ov){tooltipScope.disabledTooltip=nv;element.prop("disabled",nv);});if(scope.rawTextTooltipPlural){element.parent().append($compile('<div ng-show="disabledTooltip" class="d4c-disabled-tooltip__overlay" d4c-tooltip="{{text}}" translate="d4c-tooltip" translate-plural="'+scope.rawTextTooltipPlural+'" translate-n="'+attrs.translateN+'" d4c-tooltip-template="template" d4c-tooltip-direction="direction" d4c-tooltip-delay="{{delay}}"></div>')(tooltipScope));}else{element.parent().append($compile('<div ng-show="disabledTooltip" class="d4c-disabled-tooltip__overlay" d4c-tooltip="{{text}}" translate="d4c-tooltip" d4c-tooltip-template="template" d4c-tooltip-direction="{{ direction }}" d4c-tooltip-delay="{{delay}}"></div>')(tooltipScope));}}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('multipleField',function(){return{restrict:'E',require:['ngModel','^?form'],template:''+'<div class="multiple-field">'+'   <div ng-repeat="item in items track by $index">'+'       <div class="d4c-form__addon-wrapper">'+'           <input type="text"'+'                   class="d4c-form__control"'+'                   ng-disabled="d4cDisabled"'+'                   ng-model-onchange ng-model="items[$index]"'+'                   ng-change="cleanupEmptyItems(items)"'+'                   ng-readonly="readonly"'+'                   datalist-values="values"'+'                   datalist-values-language="valuesLanguage" />'+'           <button class="d4c-button d4c-form__addon"'+'                   ng-if="!d4cDisabled" '+'                   type="button" '+'                   aria-label="Remove" '+'                   translate="aria-label" '+'                   ng-click="removeItem($index)">'+'               <i class="icon-remove fa fa-remove" aria-hidden="true"></i>'+'           </button>'+'       </div>'+'   </div>'+'   <div class="input-append">'+'       <form>'+'           <div class="d4c-form__addon-wrapper">'+'               <input type="text"'+'                   class="d4c-form__control add"'+'                   ng-model="newItem"'+'                   ng-disabled="d4cDisabled"'+'                   datalist-values="values"'+'                   datalist-values-language="valuesLanguage" />'+'               <button class="d4c-button d4c-form__addon" disabled>'+'                   <i class="icon-plus fa fa-plus" aria-hidden="true"></i>'+'               </button>'+'           </div>'+'       </form>'+'   </div>'+'</div>',replace:true,scope:{modelitems:'=ngModel','readonly':'=ngReadonly','values':'=','valuesLanguage':'=',required:'@',d4cDisabled:'='},link:function(scope,element,attrs,ctrls){var ngModel=ctrls[0],formController=ctrls[1];var checkValidity=function(){if(scope.required===true){ngModel.$setValidity('required',scope.items&&scope.items.length>0);}};scope.$watch('modelitems',function(nv){if(nv){if(angular.isString(nv)){scope.items=[nv];}else{scope.items=nv;}}
checkValidity();},true);scope.$watch('items',function(nv){if(nv&&angular.isArray(nv)){scope.modelitems=nv;}
checkValidity();},true);scope.cleanupEmptyItems=function(items){for(var i=0;i<items.length;i++){if(!items[i]){items.splice(i,1);return;}}};scope.newItem='';scope.removeItem=function(index){scope.items.splice(index,1);if(formController){formController.$setDirty();}
checkValidity();};var addFunction=function(){if(scope.newItem){element.find('div.input-append > button').prop('disabled',true);if(!scope.items){scope.items=[];}
if(scope.items.indexOf(scope.newItem)<0){scope.items.push(scope.newItem);}
scope.newItem='';scope.$apply();}};element.find('input.add').on('blur',addFunction);element.find('form').on('submit',addFunction);element.find('input.add:last').on('keyup',function(){element.find('div.input-append  button').prop('disabled',$(this).val()==='');});}};});})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cCatalogCard',function(){return{restrict:'E',transclude:true,scope:{dataset:'=?',catalog:'=?'},template:''+'<div class="d4c-catalog-card" d4c-full-click inject></div>',controller:function($scope){if(!angular.isDefined($scope.dataset)){$scope.dataset=$scope.$parent.item;}
if(!angular.isDefined($scope.catalog)){$scope.catalog=$scope.$parent.context;}}};});mod.directive('d4cCatalogCardKeywords',function(){return{restrict:'E',require:'^d4cCatalogCard',template:''+'<div class="d4c-catalog-card__keywords">'+'    <d4c-catalog-card-keyword keyword="keyword"'+'                              ng-repeat="keyword in keywords track by $index"></d4c-catalog-card-keyword>'+'</div>',controller:function($scope){$scope.keywords=$scope.dataset.metas.keyword;if(angular.isString($scope.keywords)){$scope.keywords=[$scope.keywords];}}};});mod.directive('d4cCatalogCardKeyword',function(){return{restrict:'E',scope:{keyword:'=',catalog:'=?'},template:''+'<a class="d4c-catalog-card__keyword"'+'   href="#"'+'     ng-click="catalog.toggleRefine(\'keyword\', keyword)"'+'     ng-class="{\'d4c-catalog-card__keyword--active\': isActive(keyword)}"'+'     ng-bind="keyword"></a>',controller:function($scope){if(!angular.isDefined($scope.catalog)){$scope.catalog=$scope.$parent.catalog;}
$scope.isActive=function(keyword){if($scope.catalog.parameters['refine.keyword']){var refines=$scope.catalog.parameters['refine.keyword'];if(angular.isArray(refines)&&refines.indexOf(keyword)>-1||refines===keyword){return true;}}
return false;};}};});mod.directive('d4cCatalogCardThemeIcon',function(){return{restrict:'E',require:'^d4cCatalogCard',template:''+'<d4c-theme-picto class="d4c-catalog-card__theme-icon" theme="{{ dataset.metas.theme|firstValue }}" aria-hidden="true"></d4c-theme-picto>'};});mod.directive('d4cCatalogCardBody',function(){return{restrict:'E',require:'^d4cCatalogCard',replace:true,transclude:true,template:''+'<div class="d4c-catalog-card__body" ng-class="{\'d4c-catalog-card__body--full-width\': !dataset.has_records}" ng-transclude></div>'};});mod.directive('d4cCatalogCardTitle',function(){return{restrict:'E',require:'^d4cCatalogCard',template:''+'<a d4c-main-click'+'   class="d4c-catalog-card__title-link" '+'   ng-href="{{ (\'dataset/\' + dataset.datasetid + \'/\')|propagateAppendedURLParameters }}"'+'   target="_self">'+'    <h2 class="d4c-catalog-card__title" ng-bind="dataset.metas.title"></h2>'+'</a>'};});mod.directive('d4cCatalogCardDescription',function(){return{restrict:'E',require:'^d4cCatalogCard',template:''+'<p class="d4c-catalog-card__description" ng-bind-html="dataset.metas.description|shortSummary|prettyText"></p>'};});mod.directive('d4cCatalogCardMetadataItem',function(config){return{restrict:'E',require:'^d4cCatalogCard',scope:{itemTitle:'@',itemKey:'@'},template:''+'<div class="d4c-catalog-card__metadata-item" ng-show="shown">'+'    <div class="d4c-catalog-card__metadata-item-label" ng-bind="itemTitle|translate"></div>'+'    <div class="d4c-catalog-card__metadata-item-value" ng-switch="itemKey">'+'       <span ng-switch-when="records_count">'+'            <span translate translate-n="value" translate-plural="{{$count|number}} items"> {{$count|number}} item</span>'+'       </span>'+'       <span ng-switch-when="explore.download_count">{{value|number}}</span>'+'       <span ng-switch-when="modified">{{value|moment:"LLL"}}</span>'+'       <span ng-switch-when="data_processed">{{value|moment:"LLL"}}</span>'+'       <span ng-switch-default ng-bind-html="value|formatMeta|prettyText"></span>'+'    </div>'+'</div>',controller:function($scope){if($scope.itemKey.indexOf('.')>-1){var template=$scope.itemKey.split('.')[0];var key=$scope.itemKey.split('.')[1];if(angular.isDefined($scope.$parent.dataset.extra_metas[template])){$scope.value=$scope.$parent.dataset.extra_metas[template][key];}else{$scope.value=$scope.$parent.dataset.interop_metas&&$scope.$parent.dataset.interop_metas[template][key];}}else{$scope.value=$scope.$parent.dataset.metas[$scope.itemKey];}
if(angular.isUndefined($scope.value)){$scope.shown=false;}else if(['records_count','explore.download_count'].indexOf($scope.itemKey)>-1&&$scope.value===0){$scope.shown=false;}else{$scope.shown=true;}}};});mod.directive('d4cCatalogCardVisualizations',['domainConfig','defaultCustomViewConfig',function(domainConfig,defaultCustomViewConfig){return{restrict:'E',require:'^d4cCatalogCard',replace:true,template:''+'<div class="d4c-catalog-card__visualizations" ng-if="dataset.has_records">'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/table/" '+'       target="_self" '+'       class="d4c-catalog-card__visualization">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-table" aria-hidden="true"></i> '+'        <span translate>Table</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/map/" '+'       target="_self" '+'       class="d4c-catalog-card__visualization"'+'       ng-show="dataset.features.indexOf(\'geo\') >= 0">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-globe" aria-hidden="true"></i> '+'        <span translate>Map</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/analyze/" '+'       target="_self" '+'       class="d4c-catalog-card__visualization"'+'       ng-show="dataset.features.indexOf(\'analyze\') >= 0 && analyzeTabEnabled">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-bar-chart" aria-hidden="true"></i> '+'        <span translate>Analyze</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/calendar/" '+'       target="_self" '+'       class="d4c-catalog-card__visualization"'+'       ng-show="dataset.features.indexOf(\'calendar\') >= 0">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-calendar" aria-hidden="true"></i> '+'        <span translate>Calendar</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/images/" '+'       target="_self" '+'       class="d4c-catalog-card__visualization"'+'       ng-show="dataset.features.indexOf(\'image\') >= 0">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-picture-o" aria-hidden="true"></i> '+'        <span translate>Images</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/export/" '+'       target="_self" '+'       class="d4c-catalog-card__visualization">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-download" aria-hidden="true"></i> '+'        <span translate>Export</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/api/" '+'       ng-if="apiTabEnabled"'+'       target="_self" '+'       class="d4c-catalog-card__visualization">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-cogs" aria-hidden="true"></i> '+'        <span translate>API</span>'+'    </a>'+'    <a href="/explore/dataset/{{ dataset.datasetid }}/{{ (dataset.extra_metas.visualization.custom_view_slug) || defaultCustomViewConfig.slug }}/" '+'       ng-if="dataset.features.indexOf(\'custom_view\') > -1"'+'       target="_self" '+'       class="d4c-catalog-card__visualization">'+'        <i class="d4c-catalog-card__visualization-icon fa fa-{{ dataset.extra_metas.visualization.custom_view_icon || defaultCustomViewConfig.icon }}" aria-hidden="true"></i> '+'        <span ng-bind="dataset.extra_metas.visualization.custom_view_title || defaultCustomViewConfig.title"></span>'+'    </a>'+'</div>',link:function(scope){scope.apiTabEnabled=domainConfig['explore.enable_api_tab'];scope.analyzeTabEnabled=!domainConfig['explore.disable_analyze'];scope.defaultCustomViewConfig=defaultCustomViewConfig;}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cTabs',function(){return{restrict:'E',transclude:true,scope:{syncToUrl:'@',syncToUrlMode:'@',syncToObject:'=',name:'@',layout:'@?',collapsible:'=?',defaultCollapsed:'=?',defaultTab:'@'},template:''+'<div class="d4c-tabs" ng-show="panes.length" role="tablist">'+'    <div class="d4c-tabs__tabs">'+'        <a href=""'+'           ng-click="selectTab(pane)"'+'           ng-keypress="checkKey($event, pane)"'+'           ng-repeat="pane in panes"'+'           ng-class="{\'d4c-tabs__tab--active\': pane.selected,'+'                      \'d4c-tabs__tab--horizontal\': !layout || layout == \'horizontal\','+'                      \'d4c-tabs__tab--simple-nav\': layout == \'simple-nav\'}"'+'           class="d4c-tabs__tab {{ pane.slug }} {{ pane.tabClass }}"'+'           ng-hide="pane.hidden"'+'           role="tab">'+'            <i ng-show="pane.icon" class="fa fa-{{ pane.icon }}" aria-hidden="true"></i>'+'            {{ pane.title }}'+'            <span ng-if="pane.count|isDefined">({{pane.count}})</span>'+'        </a>'+'    </div>'+'    <div ng-transclude></div>'+'</div>',replace:true,controller:['$scope','$location','$element',function($scope,$location,$element){var panes=$scope.panes=[];var selectedIndex;$scope.syncToUrlMode=$scope.syncToUrlMode=='path'?'path':'hash';$scope.collapsible=($scope.collapsible===true);$scope.defaultCollapsed=($scope.defaultCollapsed===true);var userSelection=false;$scope.checKey=function(event,pane){if(event.keyCode===13){$scope.selectTab(pane,defaultSelection);}};$scope.selectTab=function(pane,defaultSelection){if(defaultSelection&&userSelection){return;}
if(!defaultSelection){userSelection=true;}
if(!pane.selected){angular.forEach(panes,function(p){p.selected=false;});pane.selected=true;selectedIndex=$.map(panes,function(p){return p.selected;}).indexOf(true);if($scope.syncToUrl!=='false'&&!defaultSelection){$location.replace();if($scope.syncToUrlMode==='hash'){$location.hash(pane.slug);}else{$location.path(pane.slug+'/');}}
if($scope.syncToObject&&!defaultSelection){$scope.syncToObject.tab=pane.slug;}
$scope.$emit('tabSelected',{'tabsName':$scope.name,'selection':pane.slug});}else if($scope.collapsible){angular.forEach(panes,function(p){p.selected=false;});}
$element.find('a.d4c-tabs__tab.'+pane.slug).blur();};this.selectTab=$scope.selectTab;this.addPane=function(pane,index){if(angular.isUndefined(index)){panes.push(pane);}else{panes.splice(index,0,pane);}
if(!($scope.collapsible&&$scope.defaultCollapsed)){if(panes.length==1&&!$scope.defaultTab){$scope.selectTab(pane,true,true);}else if($scope.defaultTab===pane.slug){$scope.selectTab(pane,true,true);}}};$scope.$on('selectTab',function(e,name,slug){if(name===$scope.name){$scope.selectTab(panes.filter(function(p){return p.slug===slug;})[0]);}});$scope.$watch(function(){return $.map(panes,function(p){return p.visible;});},function(nv,ov){if($scope.panes[selectedIndex]&&!$scope.panes[selectedIndex].visible){if(nv&&nv.indexOf(true)>=0){$scope.select($scope.panes[nv.indexOf(true)]);}}},true);this.isPreselected=function(pane){if($scope.syncToUrl!=='false'&&(($scope.syncToUrlMode==='path'&&($location.path()==='/'+pane.slug+'/'||$location.path()==='/'+pane.slug))||($scope.syncToUrlMode==='hash'&&$location.hash()===pane.slug))){return true;}
if($scope.syncToObject&&$scope.syncToObject.tab===pane.slug){return true;}
return false;};this.getLayout=function(){return angular.isDefined($scope.layout)?$scope.layout:'horizontal';};}]};});mod.directive('d4cPane',function(translate,$filter){return{require:'^d4cTabs',restrict:'E',transclude:true,template:''+'<div class="d4c-tabs__pane" role="tabpanel"'+'     ng-class="{\'d4c-tabs__pane--active\':struct.selected,'+'                \'d4c-tabs__pane--horizontal\': !layout || layout == \'horizontal\','+'                \'d4c-tabs__pane--simple-nav\': layout == \'simple-nav\'}">'+'    <div ng-if="shown || !struct.autoUnload" ng-transclude>'+'    </div>'+'</div>',replace:true,scope:true,link:function(scope,element,attrs,tabsCtrl){if(scope.$eval(attrs.doNotRegister)===true){scope.shown=false;scope.struct={autoUnload:true,hidden:true};return;}
scope.layout=tabsCtrl.getLayout();scope.struct={title:translate(attrs.title),slug:attrs.slug||$filter('slugify')(attrs.title),icon:attrs.icon,hidden:(('ngShow'in attrs&&!scope.$eval(attrs.ngShow))||('ngHide'in attrs&&scope.$eval(attrs.ngHide))),tabClass:attrs.tabClass,autoUnload:attrs.paneAutoUnload=='true'};element.removeAttr('title');var position;var parent=element[0].parentNode;for(var i=0;i<parent.children.length;i++){if(parent.children[i]===element[0]){position=i;break;}}
tabsCtrl.addPane(scope.struct,position);if(tabsCtrl.isPreselected(scope.struct)){tabsCtrl.selectTab(scope.struct);}
scope.$watch(function(){return(('ngShow'in attrs&&!scope.$eval(attrs.ngShow))||('ngHide'in attrs&&scope.$eval(attrs.ngHide)));},function(nv,ov){scope.struct.hidden=nv;});scope.$watch(attrs.count,function(nv){if(angular.isDefined(nv)){scope.struct.count=nv;}},true);scope.$watch('struct.selected',function(nv){if(nv){scope.$applyAsync(function(){scope.shown=true;});}else{scope.shown=false;}});}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cDatasetSelectionForFederation',function($window,$compile,config,ManagementAPI,translate){return{restrict:'E',scope:{presets:'&',selectionCallback:'&',customSources:'=',filteringEnabled:'=?',preventDatasetChange:'=?'},templateUrl:'/static/d4c/html/dataset-selection-with-permissions.html',link:function(scope){scope.BRAND_HOSTNAME=config.BRAND_HOSTNAME;scope.USER=config.USER;scope.loading=true;scope.setSelection=function(selection){$.extend(scope.selection,selection);var is_selection_valid=scope.selectionCallback({selection:scope.selection});if(is_selection_valid===false){clearSelection();}
if(selection.dataset){scope.selection_details=selection.dataset;}};var getFederationParameters=function(presets){if(presets.domainId&&presets.datasetId){return{datasetid:presets.datasetId,domainid:presets.domainId,userid:presets.userId};}
return false;};var initSelection=function(){scope.selection={};scope.selection_details={};var presets=scope.presets();if(presets){if(getFederationParameters(presets)){ManagementAPI.datasets.show_remote_unverified(getFederationParameters(presets)).success(function(dataset){if(dataset.error){scope.setSelection(presets);}else{scope.setSelection($.extend(presets,{dataset:dataset}));}
scope.loading=false;}).error(function(){scope.setSelection(presets);scope.loading=false;});}else{scope.setSelection(presets);scope.loading=false;}}};var clearSelection=function(){initSelection();scope.selectionCallback({});};initSelection();}};});mod.directive('d4cDatasetSelectionWithPermissions',function($window,$compile,config,ManagementAPI,translate){return{restrict:'E',scope:{presets:'&',selectionCallback:'&',customSources:'=',filteringEnabled:'=?',preventDatasetChange:'=?'},templateUrl:'/static/d4c/html/dataset-selection-with-permissions.html',link:function(scope){scope.BRAND_HOSTNAME=config.BRAND_HOSTNAME;scope.USER=config.USER;scope.loading=true;scope.setSelection=function(selection){$.extend(scope.selection,selection);var is_selection_valid=scope.selectionCallback({selection:scope.selection});if(is_selection_valid===false){clearSelection();}
if(selection.dataset){scope.selection_details=selection.dataset;}};var getFederationParameters=function(presets){if(presets.domainId&&presets.datasetId){return{datasetid:presets.datasetId,domainid:presets.domainId,userid:presets.userId};}
return false;};var initSelection=function(){scope.selection={};scope.selection_details={};var presets=scope.presets();if(presets){if(getFederationParameters(presets)){ManagementAPI.datasets.show_remote_unverified(getFederationParameters(presets)).success(function(dataset){if(dataset.error){if(dataset.error=="unknown_dataset"){scope.error=translate('The selected dataset does not exist or is not accessible anymore.');presets.datasetId='';scope.selection.datasetId='';scope.selectionCallback({'selection':presets});scope.setSelection(presets);}else{scope.setSelection(presets);}}else{scope.setSelection($.extend(presets,{dataset:dataset}));}
scope.loading=false;}).error(function(){scope.setSelection(presets);scope.loading=false;});}else{scope.setSelection(presets);scope.loading=false;}}};var clearSelection=function(){initSelection();scope.selectionCallback({});};initSelection();}};});mod.directive('d4cDatasetSelection',function($window,$compile,config,ManagementAPI){return{restrict:'A',scope:{d4cDatasetSelectionPresets:'&',d4cDatasetSelectionCallback:'&',d4cDatasetSelectionCustomSources:'@',d4cDatasetSelectionFilteringEnabled:'=?',d4cDatasetSelectionCentralstoreDisabled:'=?',d4cDatasetSelectionRelatedDomainsDisabled:'=?',d4cDatasetSelectionPreventDatasetChange:'=?'},link:function(scope,element){var relatedDomainIds=[];var init=function(){element.on('click',function(e){e.preventDefault();scope.presets=scope.d4cDatasetSelectionPresets();if(scope.presets.datasetId){if(angular.isDefined(scope.presets.domainId)&&scope.presets.domainId!==config.DOMAIN_ID){if(relatedDomainIds.indexOf(scope.presets.domainId)>-1){scope.presets.source='related@'+scope.presets.domainId;}else{scope.presets.source='central';scope.presets.datasetId=scope.presets.datasetId+'@'+scope.presets.domainId;}}}
scope.presets.domainId=null;scope.filteringEnabled=scope.d4cDatasetSelectionFilteringEnabled;var body=angular.element($window.document.body);var overlay=$compile(''+'<div class="d4c-dataset-selection__overlay">'+'    <div class="d4c-dataset-selection__container container">'+'        <div class="d4c-dataset-selection__close-button" ng-click="close()">'+'            <i class="icon-remove fa fa-close"></i>'+'        </div>'+'        <div id="d4c-dataset-selection__interface-container" class="d4c-dataset-selection__interface-container">'+'            <d4c-dataset-selection-interface '+'                custom-sources="{{ d4cDatasetSelectionCustomSources }}"'+'                filtering-enabled="filteringEnabled"'+'                presets-catalog-parameters="presets.catalogParameters"'+'                presets-dataset-parameters="presets.datasetParameters"'+'                presets-source="'+(scope.presets.source||'')+'"'+'                presets-dataset-id="'+(scope.presets.datasetId||'')+'"'+'                presets-domain-id="'+(scope.presets.domainId||'')+'"'+'                callback="d4cDatasetSelectionCallback({selection: selection})"'+'                centralstore-disabled="d4cDatasetSelectionCentralstoreDisabled"'+'                related-domains-disabled="d4cDatasetSelectionRelatedDomainsDisabled"'+'                prevent-dataset-change="d4cDatasetSelectionPreventDatasetChange"'+'                ></d4c-dataset-selection-interface>'+'        </div>'+'    </div>'+'</div>'+'</d4c-dataset-selection-interface></div>')(scope);body.css('overflow-y','hidden');body.append(overlay);scope.close=function(){body.css('overflow-y','');overlay.remove();};overlay.on('click',function(){scope.close();});scope.$on('closeDatasetSelectionOverlay',scope.close);overlay.find('.d4c-dataset-selection__interface-container').on('click',function(e){e.stopPropagation();});return false;});};if(!scope.d4cDatasetSelectionRelatedDomainsDisabled&&!scope.d4cDatasetSelectionCentralstoreDisabled&&config.HAS_RELATED_DOMAINS){ManagementAPI.subdomains.related_domains().success(function(data){var relatedDomains=[];if(!angular.equals(data.parent_domain,{})){relatedDomains.push(data.parent_domain);}
relatedDomains=relatedDomains.concat(data.subdomains,data.sibling_domains);relatedDomainIds=relatedDomains.map(function(relatedDomain){return relatedDomain.domain_id;});init();});}else{init();}},controller:function(){}};});mod.directive('d4cDatasetSelectionInterface',function($compile,config){return{restrict:'E',scope:{presetsSource:'@',presetsDatasetId:'@',presetsDomainId:'@',presetsCatalogParameters:'=',presetsDatasetParameters:'=',customSources:'@',callback:'&',filteringEnabled:'=?',centralstoreDisabled:'=?',relatedDomainsDisabled:'=?',preventDatasetChange:'=?'},template:'<div class="d4c-dataset-selection-interface"></div>',link:function(scope,element){var container=$(element);scope.$on('changeDatasetSelectionSource',function(e,source){refreshList(source,null,null,scope.presetsCatalogParameters);});scope.$on('changeDatasetSelectionCustomSource',function(e,domainid,apikey){refreshList('custom',null,null,scope.presetsCatalogParameters,domainid,apikey);});var containedScope=null;var refreshList=function(source,datasetid,domainid,catalogParameters,customDomainID,customAPIKey){if(containedScope){containedScope.$destroy();}
containedScope=scope.$new(false);containedScope.source=source;if(datasetid){containedScope.datasetid=datasetid;}
if(domainid){containedScope.domainid=domainid;}
if(catalogParameters){containedScope.catalogParameters=catalogParameters;}
if(source==='custom'){containedScope.domainid=customDomainID;containedScope.apiKey=customAPIKey;}
containedScope.catalogParameters=containedScope.catalogParameters||{};containedScope.catalogParameters.source=source;if(source==='subdomains'){containedScope.catalogParameters['refine.parent_domain']=config.DOMAIN_ID;containedScope.catalogParameters.source='central';}else{delete containedScope.catalogParameters['refine.parent_domain'];}
var list=$compile('<d4c-dataset-selection-list '+'    filtering-enabled="filteringEnabled"'+'    api-key="{{apiKey}}"'+'    custom-sources="{{customSources}}"'+'    catalog-parameters="catalogParameters" '+'    dataset-parameters="presetsDatasetParameters" '+'    source="{{source}}" '+'    domainid="{{domainid}}" '+'    datasetid="{{datasetid}}" '+'    callback="callback({selection: selection})"'+'    centralstore-disabled="centralstoreDisabled"'+'    related-domains-disabled="relatedDomainsDisabled"'+'    prevent-dataset-change="preventDatasetChange"'+'></d4c-dataset-selection-list>')(containedScope);container.empty().append(list);};refreshList(scope.presetsSource,scope.presetsDatasetId,scope.presetsDomainId,scope.presetsCatalogParameters);}};});mod.directive('d4cDatasetSelectionList',function(config,D4CWidgetsConfig,ManagementAPI){return{restrict:'E',scope:{source:'@',domainid:'@',datasetid:'@',catalogParameters:'=',datasetParameters:'=',callback:'&',customSources:'@',apiKey:'@',filteringEnabled:'=?',centralstoreDisabled:'=?',relatedDomainsDisabled:'=?',preventDatasetChange:'=?'},templateUrl:'/static/d4c/html/dataset-selection-list.html',controller:function($scope){$scope.BRAND_HOSTNAME=config.BRAND_HOSTNAME;$scope.PORTAL_TITLE=D4CWidgetsConfig.websiteName;$scope.CENTRALSTORE=config.CENTRALSTORE;$scope.PARENT_DOMAIN=config.PARENT_DOMAIN;$scope.HAS_RELATED_DOMAINS=config.HAS_RELATED_DOMAINS;$scope.DOMAIN_ID=config.DOMAIN_ID;$scope.catalogParameters=$scope.catalogParameters?$scope.catalogParameters:{};$.extend($scope.catalogParameters,{'sort':'modified'});$scope.presetDatasetParameters=angular.copy($scope.datasetParameters);$scope.presetCatalogParameters=angular.copy($scope.catalogParameters);if($scope.datasetid){$scope.exploredDatasetID=$scope.datasetid;}
if(!$scope.relatedDomainsDisabled&&!$scope.centralstoreDisabled&&$scope.HAS_RELATED_DOMAINS){ManagementAPI.subdomains.related_domains().success(function(data){var relatedDomains=[];if(!angular.equals(data.parent_domain,{})){relatedDomains.push(data.parent_domain);}
relatedDomains=relatedDomains.concat(data.subdomains,data.sibling_domains);$scope.relatedDomains=relatedDomains;});}
$scope.showMapFilter=false;$scope.exploreDataset=function(datasetID){$scope.exploredDatasetID=datasetID;};$scope.exploreCatalog=function(){$scope.exploredDatasetID=null;$scope.catalogParameters=angular.copy($scope.presetCatalogParameters);};$scope.changeSource=function(source){$scope.$emit('changeDatasetSelectionSource',source);};$scope.refreshCustomSource=function(domainid,apikey){$scope.$emit('changeDatasetSelectionCustomSource',domainid,apikey);};$scope.selectDataset=function(dataset,parameters){var domainid,datasetid;if($scope.source==='central'){var tokens=dataset.datasetid.split('@');datasetid=tokens[0];domainid=tokens[1];}else{datasetid=dataset.datasetid;domainid=dataset.metas.domain;}
$scope.$emit('closeDatasetSelectionOverlay');$scope.callback({selection:{source:$scope.source,domainId:domainid,datasetId:datasetid,datasetParameters:angular.copy(parameters),dataset:dataset}});};$scope.isContextFiltered=function(context){if(!context.parameters){return false;}
var filtered=false;angular.forEach(context.parameters,function(value,key){if(value!==null&&value!==''){if(['q','rq','geofilter.polygon','geofilter.distance'].indexOf(key)){filtered=true;}
if(key.startsWith('refine.')||key.startsWith('exclude.')){filtered=true;}}});return filtered;};}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cCodemirrorMenubar',['translate','config',function(translate,config){return{restrict:'E',replace:true,scope:{codemirrorOptions:'=?'},template:''+'<div class="d4c-codemirror-menubar">'+'    <d4c-toggle ng-if="rtl"'+'                left-label="{{ ltrLabel }}"'+'                left-value="\'ltr\'"'+'                right-label="{{ rtlLabel }}"'+'                right-value="\'rtl\'"'+'                ng-model="direction"'+'                ng-change="setOption(\'direction\', direction)"></d4c-toggle>'+'    <label>'+'        <input type="checkbox"'+'               d4c-no-dirty'+'               ng-model="lineWrapping"'+'               ng-change="setOption(\'lineWrapping\', lineWrapping)">'+'        <span translate>Wrap lines</span>'+'    </label>'+'</div>',link:function(scope){scope.ltrLabel=translate('left-to-right');scope.rtlLabel=translate('right-to-left');scope.rtl=config.AVAILABLE_LANGUAGES&&config.AVAILABLE_LANGUAGES.indexOf('ar')>-1;var toggles=['lineWrapping','direction'];scope.codemirrorOptions=scope.codemirrorOptions||{};scope.setOption=function(name,value){if(localStorage){localStorage.setItem('codemirror.'+name,value);}
scope.codemirrorOptions[name]=value;};if(localStorage){angular.forEach(toggles,function(name){var value=localStorage.getItem('codemirror.'+name);if(value==='true'){value=true;}
if(value==='false'){value=false;}
scope.setOption(name,value);scope[name]=value;});}}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('addRemove',function(){return{require:'ngModel',restrict:'A',scope:true,link:function(scope,element,attrs,ngModel){scope.add=function(value,copy,index,modifierFunction){if(!ngModel.$viewValue){ngModel.$viewValue=[];}
var addedVal;if(copy){addedVal=angular.copy(value);}else{addedVal=value;}
if(modifierFunction){addedVal=modifierFunction(addedVal,index+1);}
ngModel.$viewValue.push(addedVal);ngModel.$setViewValue(ngModel.$viewValue);return addedVal;};scope.remove=function(index){if(!angular.isNumber(index)){index=ngModel.$viewValue.indexOf(index);}
ngModel.$viewValue.splice(index,1);ngModel.$setViewValue(ngModel.$viewValue);};}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cSearchInput',function($timeout){return{restrict:'E',replace:true,require:'ngModel',scope:{submit:'&',placeholder:'@',default:'=?',inputClasses:'@?',width:'@'},template:''+'<div class="d4c-search-input">'+'    <div class="d4c-search-input__input-area">'+'       <div class="d4c-form__addon-wrapper d4c-form__addon-wrapper--{{ width }}">'+'           <input type="text"'+'                   class="d4c-search-input__input d4c-form__control {{ inputClasses }}"'+'                   ng-model="model"'+'                   ng-keydown="$event.which === 13 && submit()"'+'                   placeholder="{{ placeholder || (\'Search...\'|translate)}}">'+'           <button class="d4c-button d4c-form__addon"'+'               type="button"'+'               ng-click="submit()">'+'               <i class="fa fa-search"></i>'+'           </button>'+'       </div>'+'       <button class="d4c-search-input__reset"'+'               ng-show="model"'+'               ng-click="resetModel()">'+'           <i class="fa fa-times-circle" aria-hidden="true"></i>'+'       </button>'+'    </div>'+'</div>',link:function(scope,element,attrs,ngModelCtrl){if(angular.isDefined(attrs.autofocus)){element.find('.d4c-search-input__input')[0].focus();}
if(!angular.isDefined(scope.submit)){scope.submit=function(){ngModelCtrl.$setViewValue(scope.model);};}
ngModelCtrl.$render=function(){scope.model=ngModelCtrl.$viewValue;};scope.$watch('model',function(nv){ngModelCtrl.$setViewValue(nv);});scope.resetModel=function(){if(angular.isDefined(scope.default)){scope.model=scope.default;}else{scope.model=null;}
$timeout(scope.submit);};}};});})();;(function(){"use strict";var mod=angular.module('d4c.core');mod.directive('d4cSlackFeedback',['$timeout','$document','APIXHRService','d4cNotificationService','translate','keypressHelper',function($timeout,$document,APIXHRService,d4cNotificationService,translate,keypressHelper){return{restrict:'E',replace:true,scope:{intro:'@'},template:''+'<div class="d4c-slack-feedback"'+'     ng-class="{\'d4c-slack-feedback--expanded\': expanded}">'+'   <div class="d4c-slack-feedback__header" ng-click="toggle()" d4c-tooltip="Submit feedback" d4c-tooltip-disabled="expanded">'+'       <div>'+'           <i class="fa fa-comment d4c-slack-feedback__main-icon" '+'              ng-class="{\'d4c-slack-feedback__main-icon--expanded\': expanded}"'+'              aria-hidden="true"></i>'+'           <span ng-show="expanded" translate>Submit feedback</span>'+'       </div>'+'       <i class="fa" '+'          ng-class="{\'fa-angle-up\': !expanded, \'fa-angle-down\': expanded}"'+'          aria-hidden="true"></i>'+'   </div>'+'   <div class="d4c-slack-feedback__body" ng-show="expanded">'+'       <p ng-bind="intro"></p>'+'       <textarea ng-model="message"'+'                 ng-disabled="sending"'+'                 class="d4c-slack-feedback__message"'+'                 translate="placeholder"'+'                 placeholder="Write your comments here"></textarea>'+'       <div class="d4c-slack-feedback__submit">'+'           <button class="d4c-button d4c-button--primary"'+'                   ng-disabled="sending || !message"'+'                   ng-click="postFeedbackToSlack()">'+'               <i class="fa fa-send" aria-hidden="true" ng-hide="sending"></i>'+'               <d4c-spinner ng-show="sending"></d4c-spinner>'+'               <span translate>Submit feedback</span>'+'           </button>'+'       </div>'+'   </div>'+'</div>',link:function(scope,element){var reset=function(){scope.expanded=false;scope.sending=false;scope.message=undefined;};if(!scope.intro){scope.intro=translate('This is a feature we introduced recently, if you have any feedback we\'d be happy to read it!');}
scope.toggle=function(){scope.expanded=!scope.expanded;$timeout(function(){scope.message=undefined;},300);};scope.triggerKey=function(e){e.preventDefault();if(scope.message){scope.postFeedbackToSlack();}};keypressHelper('keydown',scope,element.find('textarea'),{'uiKeydown':"{'ctrl-enter': 'triggerKey($event);', 'meta-enter': 'triggerKey($event);'}"});scope.postFeedbackToSlack=function(){scope.sending=true;APIXHRService('POST','/slack_feedback/',{message:scope.message}).then(function(){d4cNotificationService.sendNotification({title:translate('Thank you!'),type:'success',message:translate('Your feedback has been sent to the team!')});$timeout(reset);});};reset();}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cOnboarding',['d4cOnboardingConfiguration','CoreAPI','$compile','$rootScope','translate','$timeout',function(d4cOnboardingConfiguration,CoreAPI,$compile,$rootScope,translate,$timeout){return{restrict:'E',link:function(){var defaultOptions={doneLabel:translate('Done'),nextLabel:translate('Next'),prevLabel:translate('Previous'),skipLabel:translate('Skip'),hintButtonLabel:translate('Got it'),keyboardNavigation:false};var compileHTML=function(html){return $compile('<div>'+html+'</div>')($rootScope.$new(true)).html();};var compileOptions=function(options){if(options.steps.length){var steps=[];angular.forEach(options.steps,function(step){step.intro=compileHTML(step.intro);steps.push(step);});options.steps=steps;}
if(options.hints.length){var hints=[];angular.forEach(options.hints,function(hint){if(hint.selector&&!hint.element){hint.element=document.querySelector(hint.selector);}
hint.hint=compileHTML(hint.hint);hints.push(hint);});options.hints=hints;}
return options;};$timeout(function(){if(Object.keys(d4cOnboardingConfiguration).length){var intro=introJs();var options=compileOptions(d4cOnboardingConfiguration.options);options=$.extend({},defaultOptions,options);intro.setOptions(options);intro.oncomplete(function(){intro.addHints();});intro.start();$(window).on('scroll',function(){intro.refresh();});CoreAPI.account.onboardings.done(d4cOnboardingConfiguration.onboardingId);}});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cSuggestions',function($timeout,$window){return{restrict:'E',transclude:true,template:''+'<div class="d4c-suggestions" tabindex="-1">'+'    <input class="d4c-suggestions__input" '+'           type="text" '+'           autocomplete="false" '+'           placeholder="{{ placeholder }}" '+'           ng-model="ngModel" '+'           ng-trim="false" '+'           ng-disabled="d4cDisabled" '+'           ng-focus="autofocus" />'+'    <ul class="d4c-suggestions__items"'+'        ng-class="{\'d4c-suggestions__items--visible\': items.length > 1 || items[0].value !== ngModel}">'+'        <li ng-repeat="item in items" '+'            class="d4c-suggestions__item"'+'            ng-class="{\'d4c-suggestions__item--active\': $index == itemsIndex}" '+'            ng-click="setSuggestion()" '+'            ng-show="{{ filterItem(item) }}"'+'            inject>'+'            <span ng-bind-html="item._highlightResult.value.value"></span>'+'        </li>'+'    </ul>'+'</div>',replace:true,scope:{ngModel:'=',sourceCallback:'&',selectionCallback:'&',placeholder:'@',d4cDisabled:'=?',autofocus:'=?',filter:'&'},link:function(scope,element,attrs){if(!angular.isDefined(scope.autofocus)){scope.autofocus=false;}
if(!angular.isUndefined(scope.filter())){scope.filterItem=scope.filter();}else{scope.filterItem=function(item){return true;};}
scope.items=[];scope.itemsIndex=-1;scope.hasFocus=false;var inputElement=element.find('.d4c-suggestions__input');var itemsElement=element.find('.d4c-suggestions__items');scope.safeApply=function(fn){var phase=this.$root.$$phase;if(phase=='$apply'||phase=='$digest')
this.$eval(fn);else
this.$apply(fn);};inputElement.on('focus',function(){scope.hasFocus=true;scope.itemsIndex=-1;scope.getSuggestions();scope.$apply();});$($window.document.body).on('click.suggestions',function(e){if(!$(e.target).closest(element).length){scope.hasFocus=false;scope.$apply();}});$($window.document.body).on('click',function(e){if(!jQuery(e.target).hasClass('d4c-suggestions')&&jQuery(e.target).parents('.d4c-suggestions').length===0){scope.items=[];scope.$apply();}});element.on('mouseenter','.d4c-suggestions__item',function(e){scope.itemsIndex=element.find('.d4c-suggestions__item').index(this);scope.$apply();});inputElement.on('keydown',function(e){if(e.keyCode==38){scope.itemsIndex=Math.max(scope.itemsIndex-1,-1);scope.$apply();}
if(e.keyCode==40){scope.itemsIndex=Math.min(scope.itemsIndex+1,scope.items.length-1);scope.$apply();}
if((e.keyCode==38||e.keyCode==40)&&scope.itemsIndex>=0){var current_item=element.find('.d4c-suggestions__item').eq(scope.itemsIndex);var offset=current_item.position().top;var step=current_item.height();if(offset<step){itemsElement.scrollTop(Math.max(itemsElement.scrollTop()-step,0));}else if(offset>itemsElement.height()-step){itemsElement.scrollTop(itemsElement.scrollTop()+step);}
e.preventDefault();}
if(e.keyCode==13){scope.setSuggestion();scope.$apply();}
if(e.keyCode==27){scope.items=[];scope.$apply();}});scope.setSuggestion=function(){if(scope.itemsIndex>=0){if(attrs.selectionCallback){scope.selectionCallback({value:scope.items[scope.itemsIndex]});scope.ngModel='';}else{scope.ngModel=scope.items[scope.itemsIndex];}
scope.items=[];}
inputElement.blur();};scope.getSuggestions=function(){if(scope.ngModel){scope.sourceCallback({q:scope.ngModel}).then(function(response){scope.items=response.data.hits;});}else{scope.items=[];}};scope.$watch('ngModel',function(nv,ov){if(nv!==ov){if(!scope.d4cDisabled){scope.getSuggestions();scope.itemsIndex=-1;}}});}};});})();;(function(){'use strict';var mod=angular.module('d4c.core');var adjustBodyScrollbars=function(isModalDisplayed){if(isModalDisplayed){var properties={'position':'fixed','width':'100%'};if(document.body.scrollHeight>document.body.clientHeight){properties['top']=-$(window).scrollTop();properties['overflow-y']='scroll';}
$('body').css(properties);}else{var scrollTop=-parseInt(document.body.style.top||0);$('body').css({'position':'','overflow-y':'','width':'','top':''});$('html,body').scrollTop(scrollTop);}};mod.directive('d4cModal',['$rootScope','$timeout','$document',function($rootScope,$timeout,$document){return{restrict:'E',transclude:true,scope:{'name':'@','bodyClass':'@','title':'@','titleIcon':'@'},template:''+'<div class="d4c-modal" ng-if="displayed" title="" >'+'    <div class="d4c-modal__backdrop d4c-modal__backdrop--animate-in"></div>'+'    <div class="d4c-modal__window d4c-modal__window--animate-in {{bodyClass}}" '+'         role="dialog" '+'         aria-labelledby="d4c-modal-title">'+'       <div class="d4c-modal__header">'+'           <h1 class="d4c-modal__title" '+'               id="d4c-modal-title" '+'               ng-if="title">'+'               <i ng-if="titleIcon" ng-class="[titleIcon]" aria-hidden="true"></i>'+'               {{title}}'+'           </h1>'+'           <button type="button" ng-click="cancelModal()" class="d4c-modal__close-button" aria-label="Close dialog"><i class="d4cui-delete"></i></button>'+'           <div class="d4c-modal__wizard-steps" ng-if="steps.length">'+'               <div class="d4c-modal__wizard-step"'+'                    ng-repeat="step in steps"'+'                    ng-class="{\'d4c-modal__wizard-step--active\': $index + 1 === activeStep}">'+'                   <div class="d4c-modal__wizard-step-number">{{ $index + 1 }}</div>'+'                   <div class="d4c-modal__wizard-step-label">{{ step }}</div>'+'               </div>'+'           </div>'+'       </div>'+'       <div class="d4c-modal__inner d4c-modal__loading" ng-show="loading">'+'           <div>'+'               <div ng-repeat="message in loadingMessageLines">{{ message }}</div>'+'               <d4c-progress-bar mode="infinite"></d4c-progress-bar>'+'           </div>'+'       </div>'+'       <div class="d4c-modal__inner d4c-modal__content" ng-hide="loading" ng-transclude></div>'+'   </div>'+'</div>',link:function(scope,element){scope.loading=false;var capitalizedName=scope.name[0].toUpperCase()+scope.name.substr(1);var eventTarget;var loadingStartedAt;var loadingMinDisplayTime=1000;var getRemainingLoadingTime=function(){return Math.max(0,loadingMinDisplayTime-(Date.now()-loadingStartedAt));};var hidingDisabled=false;var disableHiding=function(){hidingDisabled=true;element.find('.d4c-modal__close-button').hide();};var enableHiding=function(){hidingDisabled=false;element.find('.d4c-modal__close-button').show();};var handleKeyDown=function(event){if(hidingDisabled){return;}
scope.$apply(function(){if(event.keyCode===27){event.preventDefault();cancelModal();}});};var showModal=function(event){if(!angular.isUndefined(event)){eventTarget=event.target;}
scope.displayed=true;$document.on('keydown',handleKeyDown);scope.$emit('showModal',scope.name);};var cancelModal=function(callback){$timeout(function(){element.find('.d4c-modal__window').removeClass('d4c-modal__window--animate-in').addClass('d4c-modal__window--animate-out');element.find('.d4c-modal__backdrop').removeClass('d4c-modal__backdrop--animate-in').addClass('d4c-modal__backdrop--animate-out');$timeout(function(){scope.displayed=false;$document.off('keydown',handleKeyDown);scope.$emit('hideModal',scope.name);if(!angular.isUndefined(eventTarget)){eventTarget.focus();}
if(scope.loading){stopLoadingState();}
if(callback){callback();}},200)},scope.loading?getRemainingLoadingTime():0);};var startLoadingState=function(message,blocking){var contentElement=element.find('.d4c-modal__content'),loadingElement=element.find('.d4c-modal__loading');loadingElement.css('height',contentElement.height());scope.loadingMessageLines=message||translate('Loading');if(!angular.isArray(scope.loadingMessageLines)){scope.loadingMessageLines=[scope.loadingMessageLines];}
loadingStartedAt=Date.now();scope.loading=true;if(blocking){disableHiding();}};var stopLoadingState=function(callback){$timeout(function(){element.find('.d4c-modal__loading').css('height','');scope.loading=false;enableHiding();if(callback){callback();}},getRemainingLoadingTime())};scope.cancelModal=cancelModal;scope.$parent['show'+capitalizedName]=showModal;scope.$parent['hide'+capitalizedName]=cancelModal;scope.$parent['start'+capitalizedName+'LoadingState']=startLoadingState;scope.$parent['stop'+capitalizedName+'LoadingState']=stopLoadingState;$rootScope.$on('show'+capitalizedName,function(event,clickEvent){showModal(clickEvent);});$rootScope.$on('hide'+capitalizedName,function(){cancelModal();});scope.$watch('displayed',function(nv){scope.$parent[scope.name+'Displayed']=scope.displayed;adjustBodyScrollbars(nv);});},controller:function($scope){$scope.steps=[];$scope.activeStep=1;this.registerStep=function(stepLabel){$scope.steps.push(stepLabel);return $scope.steps.length;};$scope.$watch('displayed',function(){$scope.steps=[];$scope.activeStep=1;});var nextStep=function(){$scope.activeStep=Math.min($scope.steps.length,$scope.activeStep+1);};$scope.nextStep=nextStep;this.nextStep=nextStep;this.previousStep=function(){$scope.activeStep=Math.max(0,$scope.activeStep-1);};this.isStepActive=function(stepNumber){return $scope.activeStep===stepNumber;};}};}]);mod.directive('d4cModalStep',function(){return{restrict:'E',replace:true,transclude:true,scope:true,require:'^d4cModal',template:'<div class="d4c-modal__inner" ng-show="isActive()" ng-transclude></div>',link:function(scope,element,attrs,d4cModalCtrl){var stepNumber=d4cModalCtrl.registerStep(attrs.label);scope.$parent.nextModalStep=d4cModalCtrl.nextStep;scope.$parent.previousModalStep=d4cModalCtrl.previousStep;scope.isActive=function(){return d4cModalCtrl.isStepActive(stepNumber);};}};});mod.directive('d4cModalBody',function($timeout){return{restrict:'E',replace:true,transclude:true,scope:true,require:'^d4cModal',template:''+'<div class="d4c-modal__body d4c-modal__inner">'+'   <div class="d4c-modal__body-top-shadow" ng-class="{\'hidden\': atTop}"></div>'+'   <div class="d4c-modal__scrollable-content">'+'       <div class="u-d4c-padding-normal" d4c-transclude></div>'+'   </div>'+'   <div class="d4c-modal__body-bottom-shadow" ng-class="{\'hidden\': atBottom}"></div>'+'</div>',link:function(scope,element,attrs,ctrl,transclude){scope.atTop=false;scope.atBottom=false;transclude(scope.$parent,function(clone){element.find('[d4c-transclude]').append(clone);});var contentElement=element.find('.d4c-modal__scrollable-content')[0];var setInnerShadows=function(){scope.atTop=contentElement.scrollTop===0;scope.atBottom=contentElement.scrollHeight===contentElement.offsetHeight||contentElement.scrollHeight<(contentElement.offsetHeight+contentElement.scrollTop+1);if(scope.$applyAsync){scope.$applyAsync();}else{$timeout(function(){});}};contentElement.addEventListener('scroll',setInnerShadows);scope.$watch(function(){return contentElement.scrollHeight;},setInnerShadows);setInnerShadows();}}});})();;(function(){var app=angular.module('d4c.core');app.directive('d4cJsonFormatter',function(){return{restrict:'A',replace:true,scope:{"data":'=d4cJsonFormatter',"liveUpdate":'=?d4cJsonFormatterLiveUpdate'},link:function(scope,element,attrs){var htmlElementClass=typeof HTMLElement!=="undefined"?HTMLElement:Element;scope.$watch('data',function(nv,ov){element.html('');if(nv!==null&&nv!==undefined){json2HTML(nv,element[0]);}},!!scope.liveUpdate);function json2HTML(json,element){var group=document.createElement('div');group.className='group';var list=document.createElement('ul');var temp;if(!(json instanceof htmlElementClass)&&$.isArray(json)){list.className='array';temp=document.createElement('div');temp.className='bracket start';temp.innerHTML='[';group.appendChild(temp);group.appendChild(list);temp=document.createElement('div');temp.className='bracket end';temp.innerHTML=']';group.appendChild(temp);}else if(!(json instanceof htmlElementClass)&&typeof(json)=='object'&&json!==null){list.className='object';temp=document.createElement('div');temp.className='bracket start';temp.innerHTML='{';group.appendChild(temp);group.appendChild(list);temp=document.createElement('div');temp.className='bracket end';temp.innerHTML='}';group.appendChild(temp);}else{console.error('JSON must either be Object or Array :',json);}
element.appendChild(group);if(json){var last_comma;$.each(json,function(key,value){var item=document.createElement('li');list.appendChild(item);if(!(json instanceof htmlElementClass)&&typeof(json)=='object'&&!$.isArray(json)){item.innerHTML='<span class="key">"'+key+'":</span>';}
var valueWrapper;if(value instanceof htmlElementClass){valueWrapper=document.createElement('span');var attributes='';angular.forEach(value.attributes,function(elt){attributes+=' '+elt.nodeName+'="'+elt.nodeValue+'"';});valueWrapper.appendChild(document.createTextNode('<'+value.tagName.toLowerCase()+attributes+'>...</'+value.tagName.toLowerCase()+'>'));valueWrapper.className=valueWrapper.className+' '+'html';item.appendChild(valueWrapper);}else if($.isArray(value)){if(value.length>20){item.innerHTML=item.innerHTML+'<div class="group"><div class="bracket start">[</div>(too many elements to preview)<div class="bracket end">]</div></div>';}else if(value.length){json2HTML(value,item);}else{item.innerHTML=item.innerHTML+'<div class="group"><div class="bracket start">[</div><div class="bracket end">]</div></div>';}}else if(value!==null&&typeof(value)=='object'){json2HTML(value,item);}else{valueWrapper=document.createElement('span');valueWrapper.className='value';if(typeof(value)=='string'){valueWrapper.innerHTML='"'+value.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"\\\"")+'"';}else if(typeof(value)=='boolean'){valueWrapper.innerHTML=value?'true':'false';}else if(value===null){valueWrapper.innerHTML='null';valueWrapper.className=valueWrapper.className+' '+'null';}else if(value===undefined){valueWrapper.innerHTML='undefined';valueWrapper.className=valueWrapper.className+' '+'undefined';}else{valueWrapper.innerHTML=value;}
valueWrapper.className=valueWrapper.className+' '+typeof(value);item.appendChild(valueWrapper);}
last_comma=document.createElement('span');last_comma.innerHTML=',';last_comma.className='comma';item.appendChild(last_comma);});if(last_comma){last_comma.parentElement.removeChild(last_comma);}}else{var li=document.createElement('li');var span=document.createElement('span');span.className='value';span.innerHTML='null';li.appendChild(span);list.appendChild(li);}}
element.on('click','.group',function(e){e.stopPropagation();$(this).removeClass('folded');});element.on('click','.bracket',function(e){e.stopPropagation();$(this).closest('.group').toggleClass('folded');});element.on('click','.key',function(e){e.stopPropagation();$(this).next('.group').toggleClass('folded');});element.on('mouseenter','.key',function(e){element.find('.hovered').removeClass('hovered');$(this).next('.group').addClass('hovered');});element.on('mouseleave',function(e){element.find('.hovered').removeClass('hovered');});}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cBindAngularContent',['$compile',function($compile){return{restrict:'A',link:function(scope,element,attrs){scope.$watch(function(){return scope.$eval(attrs.d4cBindAngularContent);},function(value){if('doNotDecodeContent'in attrs){element.html(value);}else{var html=jQuery('<div />').html(value).text();element.html(html);}
if(element[0].tagName.toLowerCase()!=='style'){$compile(element.contents())(scope);}});}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cClipboardTextarea',['translate','$compile',function(translate,$compile){return{restrict:'E',replace:true,scope:{value:'=',inputWidth:'@',id:'@',class:'@',d4cAutofocus:'=',type:'@'},link:function(scope,element){var template='<div class="d4c-form__addon-wrapper d4c-form__addon-wrapper--'+scope.inputWidth+' '+scope.class+'">'+'    <textarea type="text"'+'           class="d4c-form__control"'+'           ng-model="value"'+'           ng-readonly="true"'+
(scope.type==='code'?'dir="ltr"':'')+
(scope.id?'id="'+scope.id+'">':'>')+'    </textarea>'+'    <button class="d4c-form__addon d4c-button"'+'            type="button"'+'            ng-click="copyToClipboard()"'+'            d4c-autofocus="d4cAutofocus"'+'            d4c-tooltip'+'            d4c-tooltip-template="tooltipMessage"'+'            d4c-tooltip-direction="top">'+'        <i class="fa fa-clipboard"></i>'+'    </button>'+'</div>';var clipboardInput=$compile(template)(scope);element.replaceWith(clipboardInput);var inputElement=clipboardInput.find('textarea');var buttonElement=clipboardInput.find('button');scope.ariaLabel=translate('Copy to clipboard');var defaultTooltipMessage=function(){scope.tooltipMessage=translate('Copy to clipboard');};var successTooltipMessage=function(){scope.tooltipMessage='<i class="fa fa-check"></i> '+translate('Copied');};scope.copyToClipboard=function(){inputElement.select();document.execCommand('copy');successTooltipMessage();scope.$broadcast('refresh-tooltip');inputElement.blur();};buttonElement.on('mouseenter',defaultTooltipMessage);}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cPagesList',['D4CWidgetsConfig',function(D4CWidgetsConfig){return{restrict:'E',replace:true,scope:true,template:''+'<ul class="d4c-pages-list">'+'    <d4c-page-enumerator>'+'        <li class="d4c-pages-list__page">'+'            <a ng-href="{{ page.url }}">{{ page.title[language] || page.slug }}</a>'+'            <div ng-bind="page.description || \'No description available.\'|translate"></div>'+'        </li>'+'    </d4c-page-enumerator>'+'</ul>',controller:function($scope){$scope.language=D4CWidgetsConfig.language;}};}]);mod.directive('d4cPageEnumerator',['PageAPI',function(PageAPI){return{restrict:'E',scope:true,transclude:true,template:''+'<div class="d4c-page-enumerator">'+'    <div inject class="d4c-page-enumerator__page" ng-repeat="page in pages"></div>'+'</div>',link:function(scope){scope.pages=[];PageAPI.list().success(function(pagesResponse){var pages=[];angular.forEach(pagesResponse.pages,function(pageResponse){pages.push(pageResponse.page);});scope.pages=pages;});}};}]);})();;(function(){"use strict";var mod=angular.module('d4c.core'),PI2=Math.PI*2,pickerWindowHTML=''+'<div class="d4c-color-picker__window" style="display: none;" ng-init="selectedTab = savedTab" ng-click="$event.stopPropagation();">'+'   <ul class="d4c-color-picker__menu-tabs" role="tablist">'+'       <li class="d4c-color-picker__menu-tab" role="tab" ng-class="{\'d4c-color-picker__menu-tab--active\':selectedTab === \'nice-colors\'}" ng-keypress="tabsCheckKey($event, \'nice-colors\')" ng-click="changeTab(\'nice-colors\')" translate tabindex="0">Nice colors</li>'+'       <li class="d4c-color-picker__menu-tab" role="tab" ng-class="{\'d4c-color-picker__menu-tab--active\':selectedTab === \'color-wheel\'}" ng-keypress="tabsCheckKey($event, \'color-wheel\')" ng-click="changeTab(\'color-wheel\')" translate tabindex="0">Color wheel</li>'+'   </ul>'+'   <div class="d4c-color-picker__content">'+'      <div class="d4c-color-picker__color-tools">'+'          <div class="d4c-color-picker__color-wheel" ng-show="selectedTab === \'color-wheel\'" role="tabpanel">'+'              <canvas class="d4c-color-picker__color-wheel-canvas" '+'                      tabindex="0" '+'                      ng-keydown="canvasCheckKey($event)" '+'                       aria-live="polite" '+'                      aria-label="Use arrow keys to select a color in the wheel" '+'                      translate="aria-label"></canvas>'+'               <input type="range" '+'                      class="d4c-color-picker__hsv-range" '+'                      ng-model=\'hsvValue\' '+'                      ng-change="onHSVValueChange()">'+'           </div>'+'           <div class="d4c-color-picker__nice-colors" ng-show="selectedTab === \'nice-colors\'" role="tabpanel">'+'           </div>'+'       </div>'+'       <div class="d4c-color-picker__color-preview-area">'+'           <div class="d4c-color-picker__saturation-sample"><span class="d4c-color-picker__saturation-sample-hexcode" aria-live="polite" aria-label="Current color"></span></div>'+'       </div>'+'   </div>'+'   <div class="d4c-color-picker__popup__validation">'+'       <button type="button"'+'               class="d4c-button d4c-button--link d4c-color-picker__popup__cancel-button" '+'               ng-click="closePicker()" aria-label="Close color picker" translate="aria-label">'+'           <span translate>Cancel</span>'+'       </button>'+'       <button type="button" '+'               class="d4c-button d4c-button--primary d4c-color-picker__popup__apply-button" '+'               ng-click="saveColor()">'+'           <i class="d4cui-valid"></i> '+'           <span translate>Select color</span>'+'       </button>'+'   </div>'+'</div>';function drawCursor(x,y,ctx){ctx.beginPath();ctx.strokeStyle='#000';ctx.lineWidth=1;ctx.arc(~~x,~~y,4,0,PI2);ctx.stroke();}
function buildNiceColorsRows(niceColors){var result="";for(var i=0;i<niceColors.length;i++){result+='<div class="d4c-color-picker__nice-colors-shades">';for(var j=0;j<niceColors[i].length;j++){result+=''+'<div ng-click="selectNiceColor(\''+niceColors[i][j][1]+'\')"'+'     tabindex="0"'+'     role="button"'+'     aria-label="'+niceColors[i][j][1]+'('+niceColors[i][j][0]+')'+'"'+'     ng-keyPress="selectColorCheckKey($event,\''+niceColors[i][j][1]+'\')"'+'     class="d4c-color-picker__nice-colors-col d4c-color-picker__nice-colors-col-color"'+'     d4c-tooltip="'+niceColors[i][j][0]+'"'+'     ng-style="{ \'background-color\' : \' '+niceColors[i][j][1]+'\', \'border\' : ( \''+niceColors[i][j][1]+'\'=== \'#FFFFFF\' ? \'solid 1px '+niceColors[i][j][2]+'\': \'none\')}">'+'</div>';}
result+='</div>';}
return result;}
mod.directive('d4cColorpicker',['$compile','$document','ColorHelper','$timeout','translate',function($compile,$document,colorHelper,$timeout,translate){var currentWindowPicker,savedTab='nice-colors';function destroyCurrentPicker(){if(currentWindowPicker){currentWindowPicker.remove();}
currentWindowPicker=null;}
return{restrict:'E',scope:{ngModel:'=',ngDisabled:'=',ngReadonly:'=',defaultColor:'@',ariaLabelText:'@'},replace:true,require:'ngModel',link:function(scope,element,attrs,ngModel){var pickerDiv,canvas,canvasElem,width,height,ctx,imageData,saturationSample,saturationSampleHexcode,saturationInput,pixels,radius,defaultColor,colorSample,resetButton,required=false;if(!scope.ngDisabled){scope.ngDisabled=false;}
if(!scope.ngReadonly){scope.ngReadonly=false;}
var template='<div class="d4c-color-picker__button">'+'   <span class="d4c-form__addon-wrapper">'+'       <input type="text"'+'              class="d4c-form__control d4c-color-picker__hex-color-input"'+'              ng-model="ngModel"'+'              ng-model-options="{ debounce: 200 }"'+'              ng-disabled="ngDisabled"'+'              ng-readonly="ngReadonly"'+'              ng-class="{\'d4c-color-picker__hex-color-input-wrapper--disabled\': ngDisabled}"'+'              ng-change="onInputChange(ngModel)"'+'              ng-click="onTextClick($event)"'+'              maxlength="7"'+'              aria-label="{{inputLabel}}">'+'       <button class="d4c-button d4c-form__addon d4c-color-picker__input-button"'+'               type="button"'+'               ng-click="toggleColorPicker($event)"'+'               ng-disabled="ngDisabled"'+'               ng-readonly="ngReadonly"'+'               aria-label="{{buttonLabel}}">'+'           <div class="d4c-color-picker__color-sample"></div>'+'           <i class="d4cui-bottom d4c-color-picker__input-button-arrow"'+'              ng-readonly="ngReadonly" ></i>'+'       </button>'+'   </span>'+'   <button ng-hide="ngDisabled||ngReadonly"'+'           type="button"'+'           class=" d4c-color-picker__reset-button"'+'           ng-click="resetDefaultColor()"'+'           aria-label="Reset value"'+'           translate="aria-label">'+'       <i class="d4cui-reset"></i>'+'   </button>'+'</div>';var pickerButton=angular.element(template);element.replaceWith(pickerButton);pickerButton=$compile(pickerButton)(scope);colorSample=pickerButton.find(".d4c-color-picker__color-sample").first();resetButton=pickerButton.find('.d4c-color-picker__reset-button');scope.inputLabel=scope.ariaLabelText+' ';scope.buttonLabel=translate('Open color picker');if(attrs.required){required=true;}
defaultColor=function(){if(scope.defaultColor){return scope.defaultColor.toUpperCase();}};ngModel.$parsers.push(function(viewValue){return colorHelper.formatHexColor(viewValue);});ngModel.$formatters.push(function(modelValue){return colorHelper.formatHexColor(modelValue);});ngModel.$validators=function(modelValue,viewValue){return colorHelper.isValidHexColor(modelValue||viewValue);};scope.selectNiceColor=function(val){scope.selectedColor=val;updateColorWheelTab(val);};scope.selectColorCheckKey=function(event,color){if(event.keyCode===13){scope.selectNiceColor(color);}};scope.tabsCheckKey=function(event,tab){if(event.keyCode===13){scope.changeTab(tab);}};function initPickerWindow(){$document.find('body').first().prepend($compile(pickerWindowHTML)(scope));pickerDiv=$document.find(".d4c-color-picker__window").first();saturationSample=pickerDiv.find(".d4c-color-picker__saturation-sample").first();saturationInput=pickerDiv.find(".d4c-color-picker__hsv-range").first();saturationSampleHexcode=pickerDiv.find(".d4c-color-picker__saturation-sample-hexcode").first();canvas=pickerDiv.find("canvas").first();canvasElem=canvas.get(0);width=canvas.width();height=canvas.height();canvasElem.setAttribute('width',width);canvasElem.setAttribute('height',height);ctx=canvasElem.getContext("2d");imageData=ctx.createImageData(width,height);pixels=imageData.data;radius=width/2;colorHelper.loadWheel(radius,pixels,100);pickerDiv.find('.d4c-color-picker__nice-colors').first().append($compile(buildNiceColorsRows(colorHelper.niceColors))(scope));currentWindowPicker=pickerDiv;}
ngModel.$render=function(){if(!ngModel.$viewValue){if(required){ngModel.$setViewValue(colorHelper.formatHexColor(defaultColor())||"#FFFFFF");}else{ngModel.$setViewValue(undefined);}}
refreshResetButton(ngModel.$modelValue);var isValidColor=colorHelper.isValidHexColor(ngModel.$modelValue);if(required&&!isValidColor){return;}else if(!isValidColor){colorSample.css('background-color','');return;}else{var longHex=colorHelper.shortToLongHexColor(ngModel.$modelValue);colorSample.css('background-color',longHex);}
if(radius&&ctx){updateColorWheelTab(longHex);}};var updateColorWheelTab=function(hex){var longHex=colorHelper.shortToLongHexColor(hex),rgb=colorHelper.HexToRGB(longHex),xyv=colorHelper.RGBToXYV(rgb[0],rgb[1],rgb[2],radius),gradientHsv=colorHelper.RGBToHSV(rgb[0],rgb[1],rgb[2]),gradientStart=colorHelper.HSVToRGB(gradientHsv[0],gradientHsv[1],1);scope.currentX=xyv[0];scope.currentY=xyv[1];scope.hsvValue=xyv[2]*100;updateSaturationSample(rgb[0],rgb[1],rgb[2],longHex,gradientStart[3]);redrawWheelAndCursor(scope.currentX,scope.currentY);};scope.toggleColorPicker=function(event){scope.activeButton=$(event.target);if(scope.ngDisabled){return;}
if(!pickerDiv||!pickerDiv.is(currentWindowPicker)){destroyCurrentPicker();initPickerWindow();}
if(pickerDiv.is(":visible")){return hideColorPicker();}
positionPicker();updateColorWheelTab(ngModel.$modelValue||defaultColor||"#FFFFFF");$document.on('mouseup',mouseUp);$document.on('mousedown',clickDocument);canvas.on('mousedown',mouseDown);scope.selectedTab=savedTab;pickerDiv.show();$document.on('keydown',keyDown);$timeout(function(){setTabFocus();});};function setTabFocus(){pickerDiv.find($('.d4c-color-picker__menu-tab--active')).focus();}
function hideColorPicker(){$document.off('keyup',keyUp);$document.off('mouseup',mouseUp);$document.off('mousedown',clickDocument);$document.off('keydown',keyDown);if(canvas){canvas.off('mousemove',mouseMove);canvas.off('mouseup',mouseUp);canvas.off('mousedown',mouseDown);}
if(pickerDiv){pickerDiv.hide();scope.activeButton.focus();}}
scope.closePicker=function(){scope.selectedColor=ngModel.$viewValue;savedTab=scope.selectedTab;pickerDiv.hide();scope.activeButton.focus();};scope.saveColor=function(){if(scope.selectedColor){ngModel.$setViewValue(scope.selectedColor);ngModel.$render();colorSample.css('background-color',scope.selectedColor);}
savedTab=scope.selectedTab;pickerDiv.hide();scope.activeButton.focus();};scope.changeTab=function(newTab){savedTab=newTab;scope.selectedTab=newTab;};scope.$watch(defaultColor,function(newDefaultColor,oldDefaultColor){var currentColor=ngModel.$modelValue;if(currentColor===oldDefaultColor){ngModel.$setViewValue(newDefaultColor);}
ngModel.$render();});scope.hideColorPicker=hideColorPicker;function clickDocument(e){if(!pickerDiv){return;}
if(!jQuery(e.target).hasClass('d4c-color-picker__window')&&jQuery(e.target).parents('.d4c-color-picker__hex-color-input-wrapper').length===0&&jQuery(e.target).parents('.d4c-color-picker__window').length===0){hideColorPicker();}}
scope.resetDefaultColor=function(){if(required){scope.selectedColor=defaultColor()||"#FFFFFF";}else{scope.selectedColor=defaultColor();}
ngModel.$setViewValue(scope.selectedColor);ngModel.$render();};scope.onHSVValueChange=function(){var hs=colorHelper.XYToHS(scope.currentX,scope.currentY,radius),rgb=colorHelper.HSVToRGB(hs[0],hs[1],scope.hsvValue/100),hexCode=colorHelper.RGBToHex(rgb[0],rgb[1],rgb[2]),gradientStartRgb=colorHelper.HSVToRGB(hs[0],hs[1],1),gradientStart=colorHelper.RGBToHex(gradientStartRgb[0],gradientStartRgb[1],gradientStartRgb[2]);updateSaturationSample(rgb[0],rgb[1],rgb[2],hexCode,gradientStart[1]);scope.selectedColor=hexCode;refreshResetButton(ngModel.$modelValue);};scope.onInputChange=function(){ngModel.$setViewValue(scope.ngModel);ngModel.$render();};function refreshResetButton(currentValue){if(!required||defaultColor()){if(currentValue!==defaultColor()){resetButton.show();}else{resetButton.hide();}}}
function mouseMove(e){var canvasOffset=canvas.offset(),canvasX=Math.floor(e.pageX-canvasOffset.left),canvasY=Math.floor(e.pageY-canvasOffset.top),hs=colorHelper.XYToHS(canvasX,canvasY,radius),rgb=colorHelper.HSVToRGB(hs[0],hs[1],scope.hsvValue/100),hexCode=colorHelper.RGBToHex(rgb[0],rgb[1],rgb[2]),gradientStartRgb=colorHelper.HSVToRGB(hs[0],hs[1],1),gradientStart=colorHelper.RGBToHex(gradientStartRgb[0],gradientStartRgb[1],gradientStartRgb[2]);scope.currentX=canvasX;scope.currentY=canvasY;updateSaturationSample(rgb[0],rgb[1],rgb[2],hexCode,gradientStart);redrawWheelAndCursor(scope.currentX,scope.currentY);scope.selectedColor=hexCode;refreshResetButton(ngModel.$modelValue);}
scope.canvasCheckKey=function(event){var newX,newY;if(event.keyCode===37){newX=scope.currentX-1;newY=scope.currentY;}else if(event.keyCode===38){newY=scope.currentY-1;newX=scope.currentX;}else if(event.keyCode===39){newX=scope.currentX+1;newY=scope.currentY;}else if(event.keyCode===40){newY=scope.currentY+1;newX=scope.currentX;}
if(Math.hypot(90-newX,90-newY)<90){scope.currentX=newX;scope.currentY=newY;var hs=colorHelper.XYToHS(scope.currentX,scope.currentY,radius),rgb=colorHelper.HSVToRGB(hs[0],hs[1],scope.hsvValue/100),hexCode=colorHelper.RGBToHex(rgb[0],rgb[1],rgb[2]),gradientStartRgb=colorHelper.HSVToRGB(hs[0],hs[1],1),gradientStart=colorHelper.RGBToHex(gradientStartRgb[0],gradientStartRgb[1],gradientStartRgb[2]);updateSaturationSample(rgb[0],rgb[1],rgb[2],hexCode,gradientStart);redrawWheelAndCursor(scope.currentX,scope.currentY);}};function updateSaturationSample(red,green,blue,hex,gradientStart){if(!hex){hex=colorHelper.RGBToHex(red,green,blue);}
saturationInput.css('background','linear-gradient(to left, '+gradientStart+', black)');saturationSample.css('background',hex);saturationSampleHexcode.text(hex);if(colorHelper.isDarkColor(red,green,blue)){saturationSampleHexcode.css('color','white');}else{saturationSampleHexcode.css('color','black');}}
function redrawWheelAndCursor(cursorX,cursorY){ctx.putImageData(imageData,0,0);drawCursor(cursorX,cursorY,ctx);ctx.beginPath();ctx.lineWidth=4;ctx.arc(radius,radius,radius,0,2*Math.PI);ctx.strokeStyle="white";ctx.stroke();}
function positionPicker(){var availableSpaceBottom=jQuery(window).height()-(pickerButton.offset().top-jQuery(document).scrollTop())-pickerButton.height(),availableSpaceTop=(pickerButton.offset().top-jQuery(document).scrollTop()),hasSpaceBottom=pickerDiv.height()+10<availableSpaceBottom,hasSpaceTop=pickerDiv.height()+10<availableSpaceTop,hasSpaceLeft=pickerButton.offset().left>pickerDiv.width()&&(availableSpaceBottom>pickerDiv.height()/2&&availableSpaceTop>pickerDiv.height()/2),hasSpaceRight=pickerButton.offset().left<pickerDiv.width()&&(availableSpaceBottom>pickerDiv.height()/2&&availableSpaceTop>pickerDiv.height()/2);if(hasSpaceTop){pickerDiv.css('top',(pickerButton.offset().top-pickerDiv.height()-10));pickerDiv.addClass('d4c-color-picker__window-bottom-arrow');pickerDiv.addClass('d4c-color-picker__window--hide-up-arrow');alignPicker(pickerDiv);}else if(hasSpaceBottom){pickerDiv.css('top',(pickerButton.offset().top+pickerButton.height()+10));pickerDiv.addClass('d4c-color-picker__window-top-arrow');pickerDiv.addClass('d4c-color-picker__window--hide-down-arrow');alignPicker(pickerDiv);}else if(!hasSpaceTop&&!hasSpaceBottom&&hasSpaceLeft){pickerDiv.css('top',((pickerButton.offset().top+(pickerButton.height()/2))-(pickerDiv.height()/2))+10);pickerDiv.css('left',(pickerButton.offset().left-pickerDiv.width()-10));pickerDiv.addClass('d4c-color-picker__window-left-side-arrow');pickerDiv.addClass('d4c-color-picker__window--hide-up-arrow');}else if(!hasSpaceTop&&!hasSpaceBottom&&!hasSpaceLeft&&hasSpaceRight){pickerDiv.css('top',((pickerButton.offset().top+(pickerButton.height()/2))-(pickerDiv.height()/2))+10);pickerDiv.css('left',(pickerButton.offset().left+pickerButton.width()+10));pickerDiv.addClass('d4c-color-picker__window-right-side-arrow');pickerDiv.addClass('d4c-color-picker__window--hide-down-arrow');}else{pickerDiv.css('margin','0, auto');pickerDiv.css('position','fixed');pickerDiv.css('width','100%');pickerDiv.css('height','100%');pickerDiv.css('top',0);pickerDiv.addClass('d4c-color-picker__window--hide-down-arrow');pickerDiv.addClass('d4c-color-picker__window--hide-up-arrow');}}
function alignPicker(pickerDiv){if(pickerButton.offset().left<jQuery(window).width()/2){pickerDiv.css('left',pickerButton.offset().left);pickerDiv.addClass('d4c-color-picker__window-arrow--left');pickerDiv.removeClass('d4c-color-picker__window-arrow--right');}else{pickerDiv.css('left',((pickerButton.offset().left+pickerButton.width())-pickerDiv.width()));pickerDiv.addClass('d4c-color-picker__window-arrow--right');pickerDiv.removeClass('d4c-color-picker__window-arrow--left');}}
scope.onTextClick=function($event){$event.target.select();};scope.$on('$destroy',function(){hideColorPicker();});function mouseUp(){canvas.off('mousemove',mouseMove);canvas.off('mouseup',mouseUp);}
function mouseDown(e){canvas.on('mousemove',mouseMove);canvas.on('mouseup',mouseUp);mouseMove(e);}
function keyUp(event){if(event.keyCode===27){scope.closePicker();}else if(event.keyCode===13){scope.saveColor();}}
function keyDown(event){if(event.keyCode===27){hideColorPicker();}}}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cValueOverModel',function(){return{restrict:'A',require:'ngModel',link:function(scope,element,attrs,ngModel){ngModel.$setViewValue(attrs.value);ngModel.$setPristine();}};});}());;(function(){'use strict';var mod=angular.module('d4c.core.form.directives',['gettext','d4c.core','ui.keypress']);var d4cDelayDirective=['$timeout','$rootScope',function($timeout,$rootScope){return{require:['ngModel'],link:function(scope,element,attrs,ctrls){var modelCtrl=ctrls[0];var pendingDebounce=null;var debounceDelay=+attrs['d4cDelay']||false;modelCtrl.$commitViewValue=modelCtrl.$setViewValue;modelCtrl.$setViewValue=function(value,force){var ctrl=this;if(pendingDebounce){$timeout.cancel(pendingDebounce);}
if(debounceDelay&&!force){pendingDebounce=$timeout(function(){scope.$apply(function(){ctrl.$commitViewValue(value);});},debounceDelay);}else if(scope.$$phase||$rootScope.$$phase){ctrl.$commitViewValue(value);}else{scope.$apply(function(){ctrl.$commitViewValue(value);});}};element.on('blur',function(ev){modelCtrl.$setViewValue(element.val(),true);});if(element.get(0).type!=="textarea"){element.on('keypress',function(ev){if(ev.which===13){modelCtrl.$setViewValue(element.val(),true);ev.preventDefault();return false;}});}}};}];mod.directive('d4cDelay',d4cDelayDirective);mod.directive('d4cSaveButton',['$document','keypressHelper','$timeout',function($document,keypressHelper,$timeout){return{restrict:'E',replace:true,require:'?^form',scope:{dirty:'=?dirty',type:'=?type',invalid:'=?invalid',action:'&?d4cSaveButtonAction',label:'=?'},template:''+'<button class="btn d4c-button" '+'        type="type" '+'        ng-disabled="!getDirty() || getInvalid()" '+'        ng-class="{\'btn-primary\': getDirty() && !getInvalid(), \'d4c-button--primary\': getDirty() && !getInvalid()}">'+'    <i class="fa fa-save icon-save" aria-hidden="true"></i> '+'    <span ng-if="!label" translate>Save</span>'+'    <span ng-if="label">{{ label }}</span>'+'</button>',link:function(scope,element,attrs,FormCtrl){var action=scope.action();scope.type=scope.type||'button';scope.getDirty=function(){if(angular.isDefined(scope.dirty)){return scope.dirty;}
if(angular.isDefined(FormCtrl)){return FormCtrl.$dirty;}
return true;};scope.getInvalid=function(){if(angular.isDefined(scope.invalid)){return scope.invalid;}
if(angular.isDefined(FormCtrl)&&FormCtrl!==null){return FormCtrl.$invalid;}
return false;};scope.completeAction=function(event){if(scope.getDirty()&&!scope.getInvalid()){if(angular.isDefined(action)){if(event&&event.preventDefault){event.preventDefault();}
action();}else if(angular.isDefined(FormCtrl)){}}else{if(event&&event.preventDefault){event.preventDefault();}}};scope.triggerButton=function(e){e.preventDefault();$timeout(function(){element.trigger('click');},0);};element.bind('click',scope.completeAction);keypressHelper('keydown',scope,$document,{'uiKeydown':"{'ctrl-S': 'triggerButton($event);', 'meta-S': 'triggerButton($event);'}"});}};}]);mod.directive('d4cColorChooser',['colorScale','$document',function(colorScale,$document){return{restrict:'AE',scope:{color:'=',allowedcolors:'='},replace:true,templateUrl:'/static/d4c/html/color-chooser.html',link:function(scope,element,attrs){scope.colorrangetemplates=colorScale.getColorSets();scope.colortemplates=[];scope.internalValues={};scope.preview=true;scope.closeSelector=function($event){scope.preview=true;};scope.openSelector=function($event){scope.preview=false;var documentClickHandler=function($event){if($($event.target).closest(element).length!==1){scope.closeSelector();$document.off('click',documentClickHandler);}
scope.$apply();};$document.on('click',documentClickHandler);$event.stopPropagation();$event.preventDefault();};scope.toggleSelector=function($event){if(scope.preview){scope.openSelector($event);}else{scope.closeSelector($event);}};scope.selectDynamicRange=function(name){scope.internalValues.color=name;scope.closeSelector();};scope.selectSingleColor=function(color){scope.internalValues.color=color;scope.closeSelector();};scope.selectStaticRange=function(color){scope.internalValues.color=color;};scope.$watch('internalValues',function(nv,ov){if(nv.color&&nv.color!==ov.color){if(!(nv.color.startsWith('range-')||nv.color.startsWith('custom-'))){var found=false;angular.forEach(scope.colortemplates,function(color){if(color.label===nv.color){found=true;}});scope.color=nv.color;}else{scope.color=nv.color;}}},true);scope.$watch('color',function(nv,ov){scope.internalValues.colortype='single';if(nv){if(nv.startsWith('range-')){scope.internalValues.colortype='range';scope.internalValues.color=nv;}else{scope.internalValues.colortype='single';scope.internalValues.color=nv;}}},true);scope.$watch('allowedcolors',function(nv,ov){if(nv&&nv.length>0){scope.colortemplates=colorScale.getColorList(nv,scope.color);if(!colorScale.isColorAllowed(scope.color,scope.colortemplates,scope.allowedcolors)){scope.color=scope.colortemplates[0].label;}}},true);}};}]);mod.directive('d4cMultipleEmails',function(){return{require:'ngModel',link:function(scope,element,attrs,ctrl){ctrl.$parsers.unshift(function(viewValue){var re=/\S+@\S+\.\S+/;var emails=viewValue.split(/[\s,;]+/);var validity=!viewValue||emails.map(function(email){return re.test(email);}).reduce(function(previousValue,currentValue){return previousValue&&currentValue;},true);ctrl.$setValidity('d4cMultipleEmails',validity);return validity?viewValue:undefined;});}};});mod.directive('d4cNoDirtyCheck',function(){return{restrict:'A',require:'ngModel',link:function(scope,elem,attrs,ctrl){var alwaysFalse={get:function(){return false;},set:function(){}};Object.defineProperty(ctrl,'$pristine',alwaysFalse);Object.defineProperty(ctrl,'$dirty',alwaysFalse);}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cClipboardInput',['translate','$compile',function(translate,$compile){return{restrict:'E',replace:true,scope:{value:'=',inputWidth:'@',id:'@',d4cAutofocus:'=',type:'@'},link:function(scope,element){scope.ariaLabel=translate('Copy to clipboard');var template='<div class="d4c-form__addon-wrapper d4c-form__addon-wrapper--{{ inputWidth }}">'+'    <input type="{{ type || \'text\'}}"'+'           id="{{id}}"'+'           class="d4c-form__control"'+'           ng-model="value"'+'           ng-readonly="true" aria-disabled="true">'+'    <button class="d4c-form__addon d4c-button"'+'            type="button"'+'            ng-click="copyToClipboard()"'+'            d4c-tooltip'+'            d4c-tooltip-template="tooltipMessage"'+'            d4c-tooltip-direction="top"'+'            d4c-autofocus="d4cAutofocus"'+'            aria-label="{{ariaLabel}}">'+'        <i class="fa fa-clipboard" aria-hidden="true"></i>'+'    </button>'+'</div>';var clipboardInput=$compile(template)(scope);element.replaceWith(clipboardInput);var inputElement=clipboardInput.find('input');var buttonElement=clipboardInput.find('button');var defaultTooltipMessage=function(){scope.tooltipMessage=translate('Copy to clipboard');};var successTooltipMessage=function(){scope.tooltipMessage='<i class="fa fa-check"></i> '+translate('Copied');};scope.copyToClipboard=function(){inputElement.select();document.execCommand('copy');successTooltipMessage();scope.$broadcast('refresh-tooltip');inputElement.blur();};buttonElement.on('mouseenter',defaultTooltipMessage);}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.factory('d4cCountriesListProvider',function(config,$http){var lang=config.LANGUAGE;var promise=$http.get('/static/countries/'+lang+'/'+lang+'.json');return{promise:promise};});mod.directive("d4cCountriesList",['d4cCountriesListProvider',function(d4cCountriesListProvider){return{restrict:'E',template:'<select ng-model="selectedCountryCode">'+' <option ng-repeat="country in topCountriesList | orderBy:\'name\'" value="{{country.code}}">{{country.name}}</option>'+' <option ng-if="topCountries !== undefined">--------</option>'+' <option ng-repeat="country in countriesList | orderBy:\'name\'" value="{{country.code}}">{{country.name}}</option>'+'</select>'+'',scope:{topCountries:'=',restrictToCountries:'='},require:'ngModel',link:function(scope,element,attrs,ngModelCtrl){ngModelCtrl.$render=function(){scope.selectedCountryCode=ngModelCtrl.$viewValue;};scope.$watch('selectedCountryCode',function(nv){ngModelCtrl.$setViewValue(nv);});d4cCountriesListProvider.promise.success(function(data){var country;scope.countriesList=[];scope.topCountriesList=[];angular.forEach(data,function(value,key){country={code:key,name:value};if(isNullOrUndefined(scope.restrictToCountries)||scope.restrictToCountries.indexOf(key)>-1){scope.countriesList.push(country);if(!isNullOrUndefined(scope.topCountries)&&scope.topCountries.indexOf(key)>-1){scope.topCountriesList.push(country);}}});});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cPictopicker',function(config,$window,$compile,translate,$document){var pictos=null;return{restrict:'E',require:'ngModel',controller:function($scope,$http){var q="";var lang=config.LANGUAGE;$scope.iconsCount=0;$scope.filterPictos=function(q){q=D4C.StringUtils.slugify(D4C.StringUtils.normalize(q));$scope.filteredIconsCount=0;if(q!==""){$scope.filteredCategories=[];$scope.filteredIconsCount=0;angular.forEach(pictos.categories,function(category){var pushedCategory=false;for(var i=0;i<category.keywords_cat.length;i++){if(D4C.StringUtils.slugify(D4C.StringUtils.normalize(category.keywords_cat[i])).indexOf(q)>-1){$scope.filteredCategories.push({title:category.title,icons:category.icons});pushedCategory=true;$scope.filteredIconsCount+=category.icons.length;break;}}
if(!pushedCategory){$scope.filteredCategories.push({title:category.title,icons:[]});angular.forEach(category.icons,function(icon){for(var i=0;i<icon.keywords.length;i++){if(D4C.StringUtils.slugify(D4C.StringUtils.normalize(icon.keywords[i])).indexOf(q)>-1){$scope.filteredCategories[$scope.filteredCategories.length-1].icons.push(icon);$scope.filteredIconsCount+=1;break;}}});}});document.getElementById('d4c-pictopicker__popup__icons-list').scrollTop=0;}else{$scope.filteredCategories=pictos.categories;$scope.filteredIconsCount=$scope.iconsCount;if(document.getElementById('d4c-pictopicker__popup__icons-list')!==null){document.getElementById('d4c-pictopicker__popup__icons-list').scrollTop=0;}}};$scope.countIcons=function(categories){var count=0;angular.forEach(categories,function(category){count+=category.icons.length;});return count;};var promise=$http.get('/static/pictos/img/set-v3/'+lang+'.json');promise.then(function(response){if(response.status===200){pictos=response.data;$scope.iconsCount=$scope.countIcons(pictos.categories);$scope.filterPictos(q);$scope.initRender();}else{console.log('Error while trying to get icons metadatas from the server');}});},replace:true,scope:{color:'=',defaultValue:'@',d4cDisabled:'=',placeholder:'@',required:'=?',currentPictoUrl:'='},link:function(scope,element,attrs,ngModel){var pickerButton;var template='<div class="d4c-pictopicker__button-container">'+'   <button type="button" class="d4c-button d4c-pictopicker__button" ng-click="togglePicker($event)" aria-label="{{ariaLabel}}">'+'       <span ng-show="currentPicto" class="d4c-pictopicker__button-picto"><d4c-map-picto class="" classes="\'chosen-picto \'" name="{{currentPicto}}" ></d4c-map-picto></span>'+'       <span ng-show="currentPicto" class="d4c-pictopicker__button-label">{{currentPictoName}}</span>'+'       <span ng-hide="currentPicto" class="no-chosen-picto d4c-pictopicker__button-label" ng-bind="iconPlaceholder"></span>'+'       <i class="d4cui-bottom d4c-pictopicker__button-arrow"></i>'+'   </button>'+'</div>';element.replaceWith($compile(template)(scope));scope.q='';scope.initRender=function(){ngModel.$render();};scope.scrollTo=function(target){var elementToScroll=document.getElementById(target);if(elementToScroll!==null){elementToScroll.scrollIntoView();}};scope.iconPlaceholder=scope.placeholder||translate('No icon');var templatePopupHTML='<div class="d4c-pictopicker__popup">'+'   <div class="d4c-pictopicker__popup__search">'+'       <i class="d4cui-search d4c-pictopicker__popup__search__placeholder-icon"></i>'+'       <input class="d4c-pictopicker__popup__search__input" type="search" ng-model="q" ng-change="filterPictos(q)" ng-model-options="{ debounce: 200 }" placeholder="Search an icon" translate="placeholder" autofocus/>'+'       <button type="button" ng-if="q" class="d4c-pictopicker__popup__search__clear-button" aria-label="Clear search box." translate="aria-label" ng-click="clearInput()">'+'           <i class="d4cui-delete" aria-hidden="true"></i>'+'       </button>'+'   </div>'+'   <div class="d4c-pictopicker__popup__search__results-count">{{filteredIconsCount}} / {{iconsCount}}</div>'+'   <div class="d4c-pictopicker__popup__icons-list" id="d4c-pictopicker__popup__icons-list">'+'       <div id="d4c-pictopicker__popup__icons-list__top"></div>'+'       <div ng-hide="required" class="d4c-pictopicker__popup__no-icon" id="d4c-pictopicker__popup-no_icon">'+'           <p class="d4c-pictopicker__popup__no-icon__category-title" translate>No icon</p>'+'           <div class="d4c-pictopicker__popup__icons-list__icon"'+'               ng-click="select(\'\')" ng-class="{\'no-picto\': true, \'active\': \'\' === currentPicto}"'+'               ng-mouseenter="previewNoPicto()"'+'               ng-mouseleave="hidePreview()" tabindex="0" ng-keypress="checkIconKey($event, \'\')" aria-label="No icon" role="button" translate="aria-label">'+'               <img src="/static/pictos/img/set-v3/pictos/no_picto.svg"/>'+'           </div>'+'       </div>'+'       <div class="d4c-pictopicker__popup__icons-list__group" ng-if="filteredCategories" ng-repeat="category in filteredCategories track by category.title" '+'           id="d4c-pictopicker__popup__icons-list__group">'+'           <p class="d4c-pictopicker__popup__icons-list__group__category-title" ng-bind="category.title"></p>'+'           <div class="d4c-pictopicker__popup__icons-list__icon"'+'               title="{{picto.label}}" ng-repeat="picto in category.icons track by picto.filename" '+'               ng-click="select(picto)" ng-class="{\'active\': picto.name === currentPicto}"'+'               ng-mouseenter="previewPicto(picto)"'+'               ng-mouseleave="hidePreview()" tabindex="0" role="button" aria-label="{{picto.name}}" translate="aria-label" ng-keypress="checkIconKey($event, picto)">'+'               <img ng-src="/static/pictos/img/set-v3/pictos/{{picto.filename}}.svg" />'+'           </div>'+'       </div>'+'   </div>'+'   <div class="d4c-pictopicker__popup__selected-icon">'+'       <div ng-if="isOldIcon && !selectedPicto && !showPreview && !showNoIconPreview">'+'           <div>Select an icon</div>'+'       </div>'+'       <div ng-if="selectedPicto && !showPreview && !showNoIconPreview && !isOldIcon">'+'           <div class="d4c-pictopicker__popup__selected-icon__icon" ng-click="scrollTo(picto.filename)">'+'               <img ng-src="/static/pictos/img/set-v3/pictos/{{selectedPicto}}.svg" />'+'           </div>'+'           <span>'+'               <div ng-bind="selectedPictoName"></div>'+'           </span>'+'       </div>'+'       <div ng-if="!selectedPicto && !showPreview && !showNoIconPreview && !isOldIcon">'+'           <div class="d4c-pictopicker__popup__selected-icon__icon" ng-click="scrollTo(\'d4c-pictopicker__popup__icons-list__top\')">'+'               <img src="/static/pictos/img/set-v3/pictos/no_picto.svg" />'+'           </div>'+'           <span d4c-pictopicker__popup__selected-icon__no-icon translate>No icon</span>'+'       </div>'+'       <div ng-if="showPreview">'+'           <div class="d4c-pictopicker__popup__selected-icon__icon-preview" ng-click="scrollTo(picto.filename)">'+'               <img ng-src="/static/pictos/img/set-v3/pictos/{{pictoPreview}}.svg" />'+'           </div>'+'           <span>'+'               <div ng-bind="pictoPreviewName"></div>'+'           </span>'+'       </div>'+'       <div ng-if="showNoIconPreview ">'+'           <div class="d4c-pictopicker__popup__selected-icon__icon-preview" ng-click="scrollTo(picto.filename)">'+'               <img src="/static/pictos/img/set-v3/pictos/no_picto.svg" />'+'           </div>'+'           <span>'+'               <div translate>No icon</div>'+'           </span>'+'       </div>'+'   </div>'+'   <div class="d4c-pictopicker__popup__validation">'+'       <button type="button" ng-click="close()" class="d4c-button d4c-button--link d4c-pictopicker__popup__cancel-button" '+'               tabindex="0" aria-label="Close icon picker" translate="aria-label">Cancel</button>'+'       <button class="d4c-button d4c-button--primary d4c-pictopicker__popup__apply-button" ng-click="validate(picto)" tabindex="0" type="button">'+'           <i class="d4cui-valid" aria-hidden="true"></i> <span translate>Select icon</span>'+'       </button>'+'   </div>'+'</div>';var popup;var clickAnywhereToClose=function(){closePicker();};function positionPicker(popup){var availableSpaceBottom=jQuery(window).height()-(pickerButton.offset().top-jQuery(document).scrollTop())-pickerButton.height();var availableSpaceTop=(pickerButton.offset().top-jQuery(document).scrollTop());var hasSpaceBottom=popup.height()+10<availableSpaceBottom;var hasSpaceTop=popup.height()+10<availableSpaceTop;var hasSpaceLeft=pickerButton.offset().left>popup.width()&&(availableSpaceBottom>popup.height()/2&&availableSpaceTop>popup.height()/2);var hasSpaceRight=pickerButton.offset().left<popup.width()&&(availableSpaceBottom>popup.height()/2&&availableSpaceTop>popup.height()/2);if(hasSpaceTop){popup.css('top',(pickerButton.offset().top-popup.height()-10));popup.addClass('d4c-pictopicker__popup-bottom-arrow');popup.addClass('d4c-pictopicker__popup--hide-up-arrow');alignPicker(popup);}else if(hasSpaceBottom){popup.css('top',(pickerButton.offset().top+pickerButton.height()+10));popup.addClass('d4c-pictopicker__popup-top-arrow');popup.addClass('d4c-pictopicker__popup--hide-down-arrow');alignPicker(popup);}else if(!hasSpaceTop&&!hasSpaceBottom&&hasSpaceLeft){popup.css('top',((pickerButton.offset().top+(pickerButton.height()/2))-(popup.height()/2))+10);popup.css('left',(pickerButton.offset().left-popup.width()-10));popup.addClass('d4c-pictopicker__popup-left-side-arrow');popup.addClass('d4c-pictopicker__popup--hide-up-arrow');}else if(!hasSpaceTop&&!hasSpaceBottom&&!hasSpaceLeft&&hasSpaceRight){popup.css('top',((pickerButton.offset().top+(pickerButton.height()/2))-(popup.height()/2))+10);popup.css('left',(pickerButton.offset().left+pickerButton.width()+10));popup.addClass('d4c-pictopicker__popup-right-side-arrow');popup.addClass('d4c-pictopicker__popup--hide-down-arrow');}else{popup.css('margin','0, auto');popup.css('position','fixed');popup.css('width','100%');popup.css('height','100%');popup.css('top',0);popup.addClass('d4c-pictopicker__popup--hide-down-arrow');popup.addClass('d4c-pictopicker__popup--hide-up-arrow');}}
function alignPicker(popup){if(pickerButton.offset().left<jQuery(window).width()/2){popup.css('left',pickerButton.offset().left);popup.addClass('d4c-pictopicker__popup-arrow--left');popup.removeClass('d4c-pictopicker__popup-arrow--right');}else{popup.css('left',((pickerButton.offset().left+pickerButton.context.offsetWidth)-popup.width()));popup.addClass('d4c-pictopicker__popup-arrow--right');popup.removeClass('d4c-pictopicker__popup-arrow--left');}}
var openPicker=function(event){scope.activeButton=$(event.target);var templatePopup=$compile(templatePopupHTML);pickerButton=$(event.target);popup=templatePopup(scope);$($window.document.body).append(popup);positionPicker(popup);popup.on('click',function(e){e.stopPropagation();});event.stopPropagation();$($window.document).on('click',clickAnywhereToClose);if(angular.isUndefined(scope.currentPicto)){scope.selectedPicto='';}else if(scope.currentPicto.startsWith('d4c-')){scope.selectedPicto=scope.currentPicto.replace('d4c-','');}else{scope.isOldIcon=true;}
scope.selectedPictoName=scope.currentPictoName;$document.keydown(function(event){if(event.keyCode===27){closePicker();}});$('#d4c-pictopicker__popup__icons-list').on('wheel',function(event){var iconList=$('#d4c-pictopicker__popup__icons-list'),iconListTop=$('#d4c-pictopicker__popup__icons-list__top'),height=iconList.height()+iconListTop.height(),scrollHeight=iconList.get(0).scrollHeight;if((iconList.scrollTop()===(scrollHeight-height)&&event.originalEvent.deltaY>0)||(iconList.scrollTop()===0&&event.originalEvent.deltaY<0)){event.preventDefault();}});};var closePicker=function(){$($window.document).off('click',clickAnywhereToClose);$(document).off('keyup',keyUp);popup.remove();popup=null;scope.clearInput();scope.activeButton.focus();$(document).unbind('keydown');};scope.checkIconKey=function(event,picto){if(event.keyCode===13){scope.select(picto);}};scope.togglePicker=function(event){if(!popup){if(!scope.d4cDisabled){openPicker(event);}}else{closePicker();}};scope.close=function(){closePicker();};scope.select=function(picto){scope.showPreview=false;scope.showNoIconPreview=false;scope.isOldIcon=false;if(picto!==""){scope.selectedPictoName=picto.name;scope.selectedPicto=picto.filename;}else{scope.selectedPicto='';}};scope.previewPicto=function(picto){scope.showPreview=true;scope.showNoIconPreview=false;scope.pictoPreview=picto.filename;scope.pictoPreviewName=picto.name;};scope.previewNoPicto=function(){scope.showNoIconPreview=true;scope.pictoPreview='no_picto.svg';scope.pictoPreviewName='';};scope.hidePreview=function(){scope.showPreview=false;scope.showNoIconPreview=false;};scope.validate=function(){if(!scope.isOldIcon){if(scope.selectedPicto===''){scope.currentPicto=scope.selectedPicto;}else{scope.currentPicto='d4c-'+scope.selectedPicto;}
scope.currentPictoName=scope.selectedPictoName;ngModel.$setViewValue(scope.currentPicto);}
closePicker();};function keyUp(event){if(event.which==27){closePicker();}else if(event.which==13){scope.validate();}}
scope.clearInput=function(){scope.q="";scope.filteredCategories=pictos.categories;scope.scrollTo('d4c-pictopicker__popup-icons_list-top');scope.filteredIconsCount=scope.iconsCount;$(".d4c-pictopicker__popup__search__input").focus();};var getPictoName=function(picto){if(pictos!==null){angular.forEach(pictos.categories,function(category){angular.forEach(category.icons,function(icon){if('d4c-'+icon.filename===picto){scope.currentPictoName=icon.name;}});});if(angular.isUndefined(scope.currentPictoName)){scope.currentPictoName=picto;}}};ngModel.$render=function(){if(ngModel.$viewValue){scope.currentPicto=ngModel.$viewValue.replace('-d4c','');getPictoName(ngModel.$viewValue);}else if(!angular.isUndefined(scope.currentPictoUrl)&&scope.currentPictoUrl!==null){if(scope.currentPictoUrl.includes('set-v3')){scope.currentPicto='d4c-'+scope.currentPictoUrl.split('/').pop().replace('.svg','');getPictoName(scope.currentPicto);}else if(scope.currentPictoUrl.includes('set-v2')){scope.isOldIcon=true;scope.currentPicto=scope.currentPictoUrl.split('/').pop().replace('.svg','');scope.currentPictoName=scope.currentPicto;}}else{scope.currentPicto=scope.defaultValue;scope.currentPictoName=scope.defaultValue;}
scope.ariaLabel=format_string(translate('Current icon is {iconName}. Open icon picker'),{iconName:scope.currentPictoName});};element.on('click',function(e){e.stopPropagation();});}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cNoDirty',function(){return{require:'ngModel',link:function(scope,element,attrs,ngModelCtrl){ngModelCtrl.$setDirty=angular.noop;}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cDatasetFeedback',['$compile','$window',function($compile,$window){var template='<div class="d4cwidget-dataset-feedback">'+'<div class="d4cwidget-dataset-feedback__container">'+'<div class="d4cwidget-dataset-feedback__close-button"><i class="fa fa-times" aria-hidden="true"></i></div>'+'<d4c-dataset-feedback-interface dataset="d4cDatasetFeedbackDataset" record="d4cDatasetFeedbackRecord"></d4c-dataset-feedback-interface>'+'</div>'+'</div>';return{restrict:'A',scope:{d4cDatasetFeedbackDataset:'=',d4cDatasetFeedbackRecord:'='},link:function(scope,element,attrs){if(scope.d4cDatasetFeedbackDataset.getExtraMeta('explore','feedback_enabled')){element.on('click',function(){var body=angular.element($window.document.body);var overlay=$compile(template)(scope);body.append(overlay);var close=function(){overlay.remove();};overlay.on('click',function(e){close();});scope.$on('closeDatasetFeedbackOverlay',close);scope.$apply();});}else{console.warn('dataset feedback is not enabled for this dataset');}}};}]);mod.directive('d4cDatasetFeedbackInterface',function(){return{restrict:'E',scope:{dataset:'=',record:'='},templateUrl:'/static/frontoffice/explore-dataset/html/dataset-feedback-interface.html',link:function(scope,element,attrs){element.on('click',function(e){e.stopPropagation();});},controller:['$scope','$filter','$http','$timeout','SearchAPI',function($scope,$filter,$http,$timeout,SearchAPI){if($scope.record){$scope.newValues=angular.copy($scope.record.fields);}else{$scope.newValues={};}
var geoshapeFieldCount=$scope.dataset.fields.filter(function(field){return field.type=='geo_shape';}).length;$scope.feedbackFields=$scope.dataset.fields.filter(function(field){if(field.type==='geo_point_2d'){if(geoshapeFieldCount>0){geoshapeFieldCount-=1;return false;}else{return true;}}
return field.type!=='file';});$scope.hasNewValue=function(field){if(field.type=='datetime'||field.type=='date'){return moment($scope.record.fields[field.name]).utc().format()!=moment($scope.newValues[field.name]).utc().format();}
else{return!angular.equals($scope.record.fields[field.name],$scope.newValues[field.name]);}};$scope.isGeoField=function(field){return field.type=='geo_point_2d'||field.type=='geo_shape';};$scope.send=function(){var submittedValues={};angular.forEach($scope.newValues,function(value,key){if(!$scope.record||angular.isUndefined($scope.record.fields[key])||!angular.equals($scope.record.fields[key],value)){submittedValues[key]=value;}});var payload={'schema':$scope.dataset.fields,'recordid':$scope.record?$scope.record.recordid:null,'newValues':submittedValues,'comment':$scope.userComment};$scope.working=true;SearchAPI.datasets.feedback($scope.dataset.datasetid,payload).success(function(){$scope.working=false;$scope.sent=true;$timeout(function(){$scope.$emit('closeDatasetFeedbackOverlay');},2000);}).error(function(){$scope.working=false;});};}]};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive("d4cProgressBar",function(){return{restrict:'E',scope:{'val':'=?','max':'=?','text':'@?','mode':'@?','warningLevel':'@?','dangerLevel':'@?','showPercents':'=?','showValMax':'=?','errored':'=?','infiniteCompleted':'=?'},replace:true,template:''+'<div class="d4c-progress-bar" title="{{ getTitle() }}">'+'    <div class="d4c-progress-bar__bar" '+'         ng-class="{\'d4c-progress-bar__bar-capacity\': mode === \'capacity\' && !capacityDangerZone() && !capacityWarningZone(),'+'                    \'d4c-progress-bar__bar-capacity--danger\': capacityDangerZone(),'+'                    \'d4c-progress-bar__bar-capacity--warning\': capacityWarningZone(),'+'                    \'d4c-progress-bar__bar-infinite\': mode === \'infinite\' && !errored && !infiniteCompleted,'+'                    \'d4c-progress-bar__bar-infinite--errored\': mode === \'infinite\' && errored,'+'                    \'d4c-progress-bar__bar-infinite--completed\': mode === \'infinite\' && !errored && infiniteCompleted,'+'                    \'d4c-progress-bar__bar-progress\': mode === \'progress\' && val < max && !errored,'+'                    \'d4c-progress-bar__bar-progress--completed\': mode === \'progress\' && val >= max && !errored,'+'                    \'d4c-progress-bar__bar-progress--errored\': mode === \'progress\' && errored}"'+'         ng-style="{\'width\': progressBarPercent + \'%\' }">'+'        <span class="d4c-progress-bar__percent" ng-if="showValMax || showPercents || text || mode === \'infinite\'">'+'           <span ng-show="showValMax">{{ val|number }} / {{ max|number }}</span>'+'           <span ng-show="showValMax && showPercents">-</span>'+'           <span ng-show="showPercents">{{ progressBarPercent|number:0 }}%</span>'+'           <span ng-show="(showValMax || showPercents) && text">-</span>'+'           <span ng-show="text">{{ text }}</span>'+'       </span>'+'    </div>'+'</div>',link:function(scope){if(scope.mode!=='progress'&&scope.mode!=='capacity'&&scope.mode!=='infinite'){scope.mode='progress';}
if(scope.mode==='infinite'){scope.progressBarPercent=100;}
if(!angular.isDefined(scope.showValMax)&&!angular.isDefined(scope.showPercents)&&!angular.isDefined(scope.text)&&scope.mode!=='infinite'){scope.showValMax=true;}
scope.capacityDangerZone=function(){return scope.mode==='capacity'&&angular.isDefined(scope.dangerLevel)&&scope.progressBarPercent>scope.dangerLevel;};scope.capacityWarningZone=function(){return scope.mode==='capacity'&&!scope.capacityDangerZone()&&angular.isDefined(scope.warningLevel)&&scope.progressBarPercent>scope.warningLevel;};var setProgress=function(){if(scope.mode=='infinite'){scope.progressBarPercent=100;}else if(angular.isDefined(scope.val)&&angular.isDefined(scope.max)){scope.progressBarPercent=Math.min(scope.val/scope.max*100,100);}else{scope.progressBarPercent=0;}};scope.$watch('val',function(){setProgress();});scope.$watch('max',function(){setProgress();});},controller:['$scope','$filter',function($scope,$filter){$scope.getTitle=function(){var title='';if(angular.isDefined($scope.val)&&angular.isDefined($scope.max)&&$scope.mode!='infinite'){title+=$filter('number')($scope.val)+' / '+$filter('number')($scope.max);}
if(angular.isDefined($scope.text)){if(title.length>0){title+=' - ';}
title+=$scope.text;}
return title;};}]};});})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cChartControlSerie',['ChartHelper','translate',function(ChartHelper,translate){var $dataset,defineHelpers=function($scope){$scope.availableChartTypes=ChartHelper.getAvailableChartTypes(ChartHelper.getDatasetId($scope.context),$scope.stacked);$scope.allowedcolors=ChartHelper.getAllowedColors($scope.serie.type,$scope.breakdown);};return{templateUrl:angular.version.minor===2?'/static/d4c/html/chart-control-serie-angular12.html':'/static/d4c/html/chart-control-serie.html',require:"^chartControls",scope:{serie:'=',context:'=',advanced:'=',singleAxis:'=',breakdown:'=',stacked:'='},replace:true,controller:function($scope,$element,$attrs){$scope.translate=translate;if($scope.context){defineHelpers($scope);$scope.allowedcolors=[];if($scope.serie){$scope.allowedcolors=ChartHelper.getAllowedColors($scope.serie.type,$scope.breakdown);}}
$scope.$watch('serie',function(nv,ov){if(nv&&$scope.context){defineHelpers($scope);}
if(nv){$scope.allowedcolors=ChartHelper.getAllowedColors(nv.type,$scope.breakdown);}},true);$scope.$watch('stacked',function(nv,ov){if($scope.context){defineHelpers($scope);}},true);$scope.$watch('breakdown',function(nv,ov){if($scope.context){defineHelpers($scope);}},true);var unwatch=$scope.$watch('context',function(nv,ov){if(nv){ChartHelper.init(nv,$scope.advanced,true);if($scope.serie){defineHelpers($scope);}
unwatch();}});$scope.isRangeChart=ChartHelper.isRangeChart.bind(ChartHelper);$scope.pieChartPositions=ChartHelper.getPieChartPositions();$scope.allowThresholds=ChartHelper.allowThresholds.bind(ChartHelper);$scope.display='';}};}]);mod.directive('d4cChartControlSerieFunction',['ChartHelper','translate',function(ChartHelper,translate){var $dataset,defineHelpers=function($scope){var uniqueid=ChartHelper.getDatasetId($scope.context);$scope.isRangeChart=ChartHelper.isRangeChart.bind(ChartHelper);$scope.availableY=ChartHelper.getAvailableY(uniqueid);$scope.availableFunctions=ChartHelper.getAvailableFunctions(uniqueid);};return{templateUrl:'/static/d4c/html/chart-control-serie-function.html',scope:{serie:'=',context:'=',advanced:'='},replace:true,controller:function($scope){$scope.translate=translate;$scope.$watch('context',function(nv,ov){if(nv){ChartHelper.init(nv,$scope.advanced,true);defineHelpers($scope);}},true);$scope.$watch('serie',function(nv,ov){if(nv&&$scope.context){defineHelpers($scope);}},true);},link:function(scope,element,attrs){scope.subserie=!!('subserie'in attrs);}};}]);mod.directive('chartControls',['$http','$location','$timeout','translate','ChartHelper','AggregationHelper','ContextHelper',function($http,$location,$timeout,translate,ChartHelper,AggregationHelper,ContextHelper){var $dataset;return{templateUrl:'/static/d4c/html/chart-controls.html',scope:{context:'=',dataChart:'=datachart',colors:'=',query:'=',index:'=',advanced:'='},require:['chartControls','^advancedChartControls'],transclude:true,controller:function($scope,$element,$attrs,$transclude){var that=this;$scope.getSerieForChart=function(query,chart){var queryIndex=$scope.dataChart.queries.indexOf(query);var serieIndex=query.charts.indexOf(chart);return"serie"+(queryIndex+1)+'-'+(serieIndex+1);};$scope.serieRemoval=function(chart){var serieIndex=$scope.query.charts.indexOf(chart);if($scope.query.sort==='serie'+(serieIndex+1)){$scope.query.sort='';}else{var currentSortIndex=parseInt($scope.query.sort.substring(5),10);if(currentSortIndex>serieIndex+1){$scope.query.sort='serie'+(currentSortIndex-1);}}};$scope.reorderQueries=function(items,olditems){if($scope.query.sort){$scope.query.sort=$scope.query.sort.split('-')[0]+'-'+(items.indexOf(olditems[parseInt($scope.query.sort.split('-')[1],10)-1])+1);}};$scope.stackingEnabled=function(){if($scope.query.charts.length>1){var type=$scope.query.charts[0].type;for(var i=1;i<$scope.query.charts.length;i++){if($scope.query.charts[i].type!==type){return false;}}
return true;}else if($scope.query.charts.length===1&&$scope.query.seriesBreakdown){return true;}else{return false;}};$scope.translate=translate;this.init=function(nv,ov){ChartHelper.init($scope.context,$scope.advanced,true);$scope.availableX=ChartHelper.getAvailableX(ChartHelper.getDatasetId($scope.context),undefined,$scope.advanced);updatexAxis($scope.query.xAxis);updateSeriesBreakdown($scope.query.seriesBreakdown);$scope.isRangeChart=ChartHelper.isRangeChart.bind(ChartHelper);$scope.$watch('context',function(nv,ov){if(nv){ChartHelper.init(nv,$scope.advanced,true);$scope.availableX=ChartHelper.getAvailableX(ChartHelper.getDatasetId(nv),undefined,$scope.advanced);updatexAxis($scope.query.xAxis);updateSeriesBreakdown($scope.query.seriesBreakdown);}},true);function updatexAxis(nv,ov){$scope.availableBreakDowns=ChartHelper.getAvailableBreakDowns(ChartHelper.getDatasetId($scope.context),nv);if(['date','datetime'].indexOf(ChartHelper.getFieldType(ChartHelper.getDatasetId($scope.context),nv))!==-1){$scope.timescales=ChartHelper.getTimescales(ChartHelper.getDatasetId($scope.context),nv,$scope.advanced);}else{$scope.timescales=[];}}
function updateSeriesBreakdown(nv,ov){if(['date','datetime'].indexOf(ChartHelper.getFieldType(ChartHelper.getDatasetId($scope.context),nv))!==-1){$scope.timescalesForBreakdown=ChartHelper.getTimescales(ChartHelper.getDatasetId($scope.context),nv,$scope.advanced);}else{$scope.timescalesForBreakdown=[];}}
$scope.$watch("query.xAxis",updatexAxis,true);$scope.$watch("query.seriesBreakdown",updateSeriesBreakdown,true);};this.setParentController=function(ctrl){this.ctrl=ctrl;};$scope.initColorsCategoryModal=function(field){$scope.categoryColors=angular.copy($scope.query.categoryColors)||{};$scope.updateCategories(field);$scope.showColorsCategoryModal();};$scope.updateCategories=function(field){var datasetContext=ContextHelper.getDatasetContext('chartcontext','',$scope.query.config.dataset,$scope.query.config.options);datasetContext.wait().then(function(){datasetContext.getFacetValues(field).then(function(result){result.map(function(item){$scope.categoryColors[item]=$scope.categoryColors[item]||'';});for(var category in $scope.categoryColors){if(result.indexOf(category)===-1){delete($scope.categoryColors[category]);}}});});};$scope.apply=function(){var cleanupCategoryColors={};for(var key in $scope.categoryColors){console.log(key);if($scope.categoryColors[key]){cleanupCategoryColors[key]=$scope.categoryColors[key];}}
$scope.query.categoryColors=cleanupCategoryColors;$scope.hideColorsCategoryModal();}},link:function(scope,element,attr,ctrls){scope.serieTemplate=ChartHelper.getSerieTemplate();ctrls[0].setParentController(ctrls[1]);var unwatchDataChart=scope.$watch('dataChart',function(nv,ov){if(!nv)return;var unwatchDataset=scope.$watch('context',function(nv,ov){if(!nv)return;ctrls[0].init();unwatchDataset();});unwatchDataChart();});}};}]);mod.directive('d4cChartControlQuery',[function(){return{scope:true,link:function($scope){$scope.datasetSelectionPresets=function(){return{catalogParameters:{'refine.features':'analyze'},datasetId:$scope.query.config.dataset,datasetParameters:$scope.query.config.options};};$scope.datasetSelectionCallback=function(selection){$scope.query.config.options=selection.datasetParameters;};}};}]);mod.directive('advancedChartControls',['config','ChartHelper','URLSynchronizer','SearchAPI','$location','$timeout','$q','ManagementAPI',function(config,ChartHelper,URLSynchronizer,SearchAPI,$location,$timeout,$q,ManagementAPI){return{restrict:'AE',templateUrl:angular.version.minor===2?'/static/d4c/html/advanced-chart-controls-angular12.html':'/static/d4c/html/advanced-chart-controls.html',scope:{context:'=',chartContext:'=',initialChartContext:'=?',noControls:'=?'},require:'advancedChartControls',replace:true,controller:['$scope',function($scope){var domain=window.location.protocol+'//'+window.location.host;var source=$location.search().source;$scope.allTimescales=ChartHelper.getAllTimescales();$scope.graphMode='analysis';$scope.datasetSelectionPresets=function(){return{catalogParameters:{'refine.features':'analyze'}};};$scope.datasetSelectionCallback=function(selection){SearchAPI.datasets.lookup(selection.datasetId,{'extrametas':true}).then(function(dataset){$scope.addDataset(dataset.data,selection.datasetParameters);});};$scope.removeQuery=function(query){var index=$scope.localChartContext.dataChart.queries.indexOf(query);$scope.localChartContext.dataChart.queries.splice(index,1);};$scope.addDataset=function(dataset,searchParameters){dataset=D4C.Dataset(dataset);if(!$scope.context.datasets){$scope.context.datasets={};}
$scope.context.datasets[dataset.datasetid]={'dataset':dataset,'parameters':searchParameters};ChartHelper.init($scope.context.datasets[dataset.datasetid],true);if(!$scope.localChartContext.dataChart){$scope.localChartContext.dataChart={'queries':[]};}
var query;if(dataset.extra_metas&&dataset.extra_metas.visualization&&dataset.extra_metas.visualization.analyze_default){var chart=JSON.parse(dataset.extra_metas.visualization.analyze_default);query=chart.queries[0];}else{query={charts:[ChartHelper.getSerieTemplate()]};}
query.config={'dataset':dataset.datasetid,'options':searchParameters||{}};$scope.localChartContext.dataChart.queries.push(query);};$scope.saveChart=function(){$scope.savingChart=true;var request;if($scope.localChartContext.chartId){request=ManagementAPI.charts.update($scope.localChartContext.chartId,$scope.localChartContext.title,$scope.localChartContext.dataChart);}else{request=ManagementAPI.charts.new($scope.localChartContext.title,$scope.localChartContext.dataChart);}
request.success(function(chart){$scope.initialChartContext.dataChart=chart.value;$scope.initialChartContext.title=chart.title;$scope.initialChartContext.lastModification=chart.last_modification;$scope.localChartContext.lastModification=chart.last_modification;$scope.initialChartContext.chartId=chart.persist_id;$scope.localChartContext.chartId=chart.persist_id;if($location.path()==='/'){$location.path('/'+chart.persist_id+'/');$location.search({});if($scope.destroyUrlSynchronizer){$scope.destroyUrlSynchronizer();}}
$scope.savingChart=false;}).error(function(){$scope.savingChart=false;});};$scope.isChartDirty=function(){return!$scope.localChartContext.chartId||!angular.equals($scope.localChartContext,$scope.initialChartContext);};}],link:function(scope,element,attrs,ctrl){function preparationFinished(){scope.localChartContext.dataChart={};angular.extend(scope.localChartContext.dataChart,scope.chartContext.dataChart);if(!!('urlsynchronize'in attrs)){scope.destroyUrlSynchronizer=URLSynchronizer.addJSONSynchronizedObject(scope,'chartContext.dataChart','dataChart');}
scope.$watch('localChartContext',function(nv,ov){scope.graphMode="timeserie";angular.forEach(scope.localChartContext.dataChart.queries,function(query){var fieldType=ChartHelper.getFieldType(ChartHelper.getDatasetUniqueId(query.config.dataset),query.xAxis);if(["date","datetime"].indexOf(fieldType)===-1){scope.graphMode="analysis";}});updateCharts();},true);if(!scope.advanced){scope.$watch('context',function(nv,ov){if(scope.localChartContext.dataChart){var dataChart=scope.localChartContext.dataChart;for(var i=0;i<dataChart.queries.length;i++){var query=dataChart.queries[i];if(nv.datasets&&nv.datasets[query.config.dataset]){query.config.options=angular.copy(nv.datasets[query.config.dataset].parameters);if(query.config.options){delete(query.config.options.dataChart);}}}
angular.forEach(nv.datasets,function(dataset,name){var found=false;for(var i=0;i<dataChart.queries.length;i++){if(nv.datasets[dataChart.queries[i].config.dataset]){found=true;}}
if(!found){var query={config:{dataset:dataset.dataset.datasetid,options:dataset.parameters||{}},charts:[ChartHelper.getSerieTemplate()]};dataChart.queries.push(query);}});}},true);}
scope.$evalAsync(function(scope){updateCharts();});}
function updateCharts(){var uniqueid,query,i,j;var dataChart=scope.localChartContext.dataChart;if(dataChart){for(i=0;i<dataChart.queries.length;i++){query=dataChart.queries[i];var fakeContext={dataset:scope.context.datasets[query.config.dataset].dataset,parameters:query.config.options,domain:query.config.domain||""};if(scope.context.datasets[query.config.dataset]){ChartHelper.init(fakeContext);uniqueid=ChartHelper.getDatasetId(fakeContext);if(typeof query.xAxis==="undefined"){ChartHelper.setDefaultQueryValues(uniqueid,query,scope.advanced);}
for(j=0;j<query.charts.length;j++){ChartHelper.setSerieDefaultValues(uniqueid,query.charts[j],query.xAxis);}
ChartHelper.setDefaultQueryValues(uniqueid,query,scope.advanced);}}
ChartHelper.setChartDefaultValues(uniqueid,dataChart,undefined,scope.advanced);var nb_series=0;for(i=0;i<dataChart.queries.length;i++){query=dataChart.queries[i];if(scope.context.datasets[query.config.dataset]){uniqueid=ChartHelper.getDatasetId(query.config,"");for(j=0;j<query.charts.length;j++){ChartHelper.setSerieDefaultColors(query.charts[j],query.seriesBreakdown,nb_series);nb_series++;}}}
if(asyncInProgress){$timeout.cancel(asyncInProgress);}
asyncInProgress=$timeout(function(){angular.extend(scope.chartContext,angular.copy(scope.localChartContext));},0);}}
var asyncInProgress=false;scope.noControls=!!scope.noControls;scope.advanced=!!('advanced'in attrs);scope.canSave=!!('canSave'in attrs)&&!!(config.USER);scope.context=scope.context||{};scope.chartContext=scope.chartContext||{};scope.initialChartContext=scope.initialChartContext||{};if(!angular.equals(scope.initialChartContext,{})){scope.localChartContext={chartId:scope.initialChartContext.chartId,title:scope.initialChartContext.title,lastModification:scope.initialChartContext.lastModification};}else{scope.localChartContext={};}
scope.savingChart=false;if(!scope.context.datasets){if(!scope.chartContext.dataChart){if(scope.initialChartContext.dataChart){scope.chartContext.dataChart=angular.copy(scope.initialChartContext.dataChart);}else if($location.search().dataChart){scope.chartContext.dataChart=JSON.parse(b64_to_utf8($location.search().dataChart));}else{scope.chartContext.dataChart={timescale:'',queries:[]};}}
if(!scope.context.datasets){scope.context.datasets={};}
var requests=[];if(scope.chartContext.dataChart.queries.length===0){preparationFinished();}else{var datasets={};angular.forEach(scope.chartContext.dataChart.queries,function(query,index){datasets[query.config.dataset]=query.config.options||{};});angular.forEach(datasets,function(value,datasetname){if(!scope.context.datasets[datasetname]){scope.context.datasets[datasetname]={};requests.push(SearchAPI.datasets.lookup(datasetname,datasets[datasetname]).success(function(dataset){scope.context.datasets[datasetname].dataset=new D4C.Dataset(dataset);if(!scope.advanced){scope.context.datasets[datasetname].parameters=datasets[datasetname];}
ChartHelper.init(scope.context.datasets[datasetname]);}));}});$q.all(requests).then(function(){preparationFinished();});}}else{angular.forEach(scope.context.datasets,function(dataset,name){ChartHelper.init(dataset);});if(!scope.chartContext.dataChart){if($location.search().dataChart){scope.chartContext.dataChart=JSON.parse(b64_to_utf8($location.search().dataChart));}else{scope.chartContext.dataChart={queries:[]};angular.forEach(scope.context.datasets,function(dataset,name){if(dataset.dataset.extra_metas&&dataset.dataset.extra_metas.visualization&&dataset.dataset.extra_metas.visualization.analyze_default){var chart=JSON.parse(dataset.dataset.extra_metas.visualization.analyze_default);scope.chartContext.dataChart=angular.copy(chart);scope.chartContext.dataChart.queries[0].config={};scope.chartContext.dataChart.queries[0].config.dataset=dataset.dataset.datasetid;scope.chartContext.dataChart.queries[0].config.options=dataset.parameters||{};}else{var query={config:{dataset:dataset.dataset.datasetid,options:dataset.parameters||{}},charts:[ChartHelper.getSerieTemplate()]};scope.chartContext.dataChart.queries.push(query);}});}
angular.forEach(scope.context.datasets,function(dataset,name){for(var i=0;i<scope.chartContext.dataChart.queries.length;i++){if(scope.chartContext.dataChart.queries[i].config.dataset===name){scope.chartContext.dataChart.queries[i].config.options=angular.copy(dataset.parameters);}}});}else{}
preparationFinished();}}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cMultiProgressBar',[function(){return{restrict:'E',scope:{'values':'=?','max':'=?','texts':'=?','warningLevel':'@?','dangerLevel':'@?','showPercents':'=?','unit':'@?','format':'@?'},template:''+'<div class="d4c-progress-bar d4c-multi-progress-bar"'+'     d4c-tooltip="{{ getTitle() }}" d4c-tooltip-direction="top">'+'     <div class="d4c-progress-bar__bar d4c-multi-progress-bar__bar d4c-progress-bar__bar-capacity"'+'          ng-style="{\'width\': total_percent + \'%\' }"'+'          ng-class="classes">'+'          <span class="d4c-progress-bar__percent">{{ total|number }} / {{ max|number }}</span>'+'     </div>'+'</div>',link:function(scope){if(typeof scope.warningLevel==="undefined"){scope.warningLevel=75;}else{scope.warningLevel=parseInt(scope.warningLevel,10);}
if(typeof scope.dangerLevel==="undefined"){scope.dangerLevel=90;}else{scope.dangerLevel=parseInt(scope.dangerLevel,10);}
if(typeof scope.unit==="undefined"){scope.unit='';}
var index;scope.total=0;scope.total_percent=0;scope.percents=[];scope.formattedvalues=[];for(index in scope.values){scope.total=scope.total+scope.values[index]*1;scope.percents[index]=Math.min(scope.values[index]*100/scope.max,100);scope.formattedvalues[index]=scope.formatter(scope.values[index]);}
scope.total_percent=scope.total*100/scope.max;scope.classes={};if(scope.total_percent>scope.dangerLevel){scope.classes['d4c-progress-bar__bar-capacity--danger']=true;}else if(scope.total_percent>scope.warningLevel){scope.classes['d4c-progress-bar__bar-capacity--warning']=true;}},controller:['$scope','$filter',function($scope,$filter){$scope.getTitle=function(item){var translateFilter=$filter('translate'),index,s='';$scope.formatter=$filter($scope.format||'number');for(index in $scope.values){if($scope.texts&&item===$scope.texts[index]){s+="<strong>";}
if($scope.texts&&$scope.texts[index]){s+=$scope.texts[index]+': ';}
s+=$scope.formatter($scope.values[index]);if($scope.unit){s+=' '+$scope.unit;}
s+='<br>';if($scope.texts&&item===$scope.texts[index]){s+="</strong>";}}
if(typeof item==="undefined"){s+="<strong>";}
s+=translateFilter('Total:')+' '+$scope.formatter($scope.total);if($scope.unit){s+=' '+$scope.unit;}
s+='<br>';s+=translateFilter('Max:')+' '+$scope.formatter($scope.max);if($scope.unit){s+=' '+$scope.unit;}
if(typeof item==="undefined"){s+="</strong>";}
return s;};}]};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cPagination',[function(){return{restrict:'E',replace:true,scope:{currentPage:'=',lastPage:'=',loadPageCallback:'&'},template:''+'<ul class="d4c-pagination">'+'    <li class="d4c-pagination__item">'+'        <button class="d4c-button d4c-pagination__page d4c-pagination__page--{{ digits }}"'+'                ng-disabled="currentPage == 1"'+'                ng-click="loadPreviousPage()">'+'            <i class="fa fa-angle-left"></i>'+'        </button>'+'    </li>'+'    <li class="d4c-pagination__item"'+'        ng-show="displayLeftEllipsis">'+'        <button class="d4c-button d4c-pagination__page d4c-pagination__page--{{ digits }}"'+'                type="button"'+'                ng-class="{\'d4c-button--primary\': page == 1}"'+'                ng-click="loadPage(1)">'+'            1'+'        </button>'+'    </li>'+'    <li class="d4c-pagination__ellipsis d4c-pagination__ellipsis--{{ digits }}"'+'        ng-show="displayLeftEllipsis">'+'        <i class="fa fa-ellipsis-h"></i>'+'    </li>'+'    <li class="d4c-pagination__item">'+'        <button class="d4c-button d4c-pagination__page d4c-pagination__page--{{ digits }}"'+'                type="button"'+'                ng-class="{\'d4c-button--primary\': page == currentPage}"'+'                ng-repeat="page in displayedPageNumbers"'+'                ng-click="loadPage(page)">'+'            {{ page }}'+'        </button>'+'    </li>'+'    <li class="d4c-pagination__ellipsis d4c-pagination__ellipsis--{{ digits }}" '+'        ng-show="displayRightEllipsis">'+'        <i class="fa fa-ellipsis-h"></i>'+'    </li>'+'    <li class="d4c-pagination__item"'+'        ng-show="displayRightEllipsis">'+'        <button class="d4c-button d4c-pagination__page d4c-pagination__page--{{ digits }}"'+'                type="button"'+'                ng-class="{\'d4c-button--primary\': page == lastPage}"'+'                ng-click="loadPage(lastPage)">'+'            {{ lastPage }}'+'        </button>'+'    </li>'+'    <li class="d4c-pagination__item">'+'        <button class="d4c-button d4c-pagination__page d4c-pagination__page--{{ digits }}"'+'                ng-disabled="currentPage == lastPage"'+'                ng-click="loadNextPage()">'+'            <i class="fa fa-angle-right"></i>'+'        </button>'+'    </li>'+'</ul>',link:function(scope){scope.displayedPageNumbers=[];scope.digits=1;scope.displayLeftEllipsis=false;scope.displayRightEllispsis=false;var setPaginationItems=function(){var start=1;var end=scope.lastPage;scope.displayLeftEllipsis=(scope.lastPage>7)&&(scope.currentPage>3);scope.displayRightEllipsis=(scope.lastPage>7)&&((scope.lastPage-scope.currentPage)>3);if(scope.displayLeftEllipsis&&scope.displayRightEllipsis){start=scope.currentPage-1;end=scope.currentPage+1;}else if(scope.displayLeftEllipsis){start=scope.lastPage-4;end=scope.lastPage;}else if(scope.displayRightEllipsis){start=1;end=5;}
scope.displayedPageNumbers=[];for(var i=start;i<=end;i++){scope.displayedPageNumbers.push(i);}};var setPaginationItemsWidth=function(){scope.digits=(scope.lastPage+'').length;};scope.loadPreviousPage=function(){scope.loadPageCallback({page:Math.max(1,scope.currentPage-1)});};scope.loadPage=function(page){scope.loadPageCallback({page:page});};scope.loadNextPage=function(){scope.loadPageCallback({page:Math.min(scope.lastPage,scope.currentPage+1)});};scope.$watchGroup(['currentPage','lastPage'],function(nv,ov){if(!angular.equals(nv,ov)||(nv&&scope.displayedPageNumbers.length===0)) {setPaginationItems();setPaginationItemsWidth();}});scope.$watch('lastPage',function(nv,ov){if(nv!=ov){setPaginationItemsWidth();}});setPaginationItems();setPaginationItemsWidth();}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cCollapsible',function(){return{restrict:'EA',transclude:true,replace:true,template:''+'<div class="d4c-collapsible" ng-transclude>'+'</div>',link:function(scope,element,attrs){scope.expanded=false;if(angular.isDefined(attrs.initiallyExpanded)&&attrs.initiallyExpanded=='true'){scope.expanded=true;}}};});mod.directive('d4cCollapsibleAboveFold',function(translate){return{require:'^d4cCollapsible',restrict:'E',transclude:true,template:''+'<div class="d4c-collapsible__above-fold" '+'     ng-class="{\'d4c-collapsible__above-fold--expanded\': expanded}"'+'     ng-click="expanded=!expanded">'+'    <div ng-transclude></div>'+'    <div class="d4c-collapsible__help-text" >'+'        <span ng-hide="expanded" translate tabindex="0" aria-label="{{expandAriaLabel}}" ng-keypress="checkKey($event)" role="button">Click to expand</span>'+'        <span ng-show="expanded" translate tabindex="0" aria-label="{{collapseAriaLabel}}" ng-keypress="checkKey($event)" role="button">Click to collapse</span>'+'    </div>'+'</div>',controller:function($scope){$scope.checkKey=function(event){if(event.keyCode===13){$scope.expanded=!$scope.expanded;}};$scope.expandAriaLabel=translate("Press enter to expand panel");$scope.collapseAriaLabel=translate("Press enter to collapse panel");}};});mod.directive('d4cCollapsibleFold',function(){return{require:'^d4cCollapsible',restrict:'E',transclude:true,template:''+'<div class="d4c-collapsible__fold" ng-show="expanded" ng-transclude>'+'</div>'};});})();;(function(){'use strict';var mod=angular.module('d4c.core');var getExtension=function(filename){if(filename.indexOf('.')===1){return undefined;}
return filename.split('.').pop();};var isImage=function(mimetype){return mimetype&&mimetype.split('/')[0]==='image';};var getFontAwesomeIcon=function(mimetype,extension){if(isImage(mimetype)){return'fa-file-image-o';}
if(mimetype==='application/pdf'||extension==='pdf'){return'fa-file-pdf-o';}
return'fa-file-o';};mod.directive('d4cFileSummary',['d4cCompileAndReplace',function(d4cCompileAndReplace){return{restrict:'E',scope:false,replace:true,link:function(scope,element,attrs){var isDownloadLink=attrs.linkType==='download'||(!attrs.linkType&&!isImage(attrs.mimetype));d4cCompileAndReplace(scope,element,''+'<div class="d4c-file-summary d4c-file-summary--'+attrs.width+'">'+'   <i class="fa fa-3x '+getFontAwesomeIcon(attrs.mimetype,getExtension(attrs.filename))+' d4c-file-summary__icon" '+'      aria-hidden="true"></i>'+'   <div class="d4c-file-summary__inner">'+'       <div class="d4c-file-summary__link-wrapper">'+'           <a href="'+attrs.url+'"'+
(isDownloadLink?'download':'target="_blank"')+'              class="d4c-file-summary__link">'+attrs.filename+'</a>'+'           <i class="fa '+(isDownloadLink?'fa-download':'fa-external-link')+' d4c-file-summary__link-icon" '+'              aria-hidden="true"></i>'+'       </div>'+'       <div class="d4c-file-summary__details">'+
(attrs.size?attrs.size:'')+'       </div>'+'   </div>'+'   <button class="d4c-button d4c-button--danger"'+'           d4c-confirm-click'+'           d4c-confirm-click-action="'+attrs.d4cConfirmClickAction+'"'+'           d4c-confirm-click-title="'+attrs.d4cConfirmClickTitle+'"'+'           d4c-confirm-click-message="'+attrs.d4cConfirmClickMessage+'"'+'           d4c-confirm-click-button-label="'+attrs.d4cConfirmClickButtonLabel+'">'+'       <i class="fa fa-trash" aria-hidden="true"></i>'+'   </button>'+'</div>');}};}]);})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cLanguageSwitcher',['config',function(config){return{restrict:'A',link:function(scope,element){var language=element.attr('d4c-language-switcher');var changeLanguage=function(){var $form=$('<form/>',{id:'tmpLangForm',method:'POST',action:'/i18n/setlang/'});$form.append(config.CSRF_TOKEN);$form.append($('<input/>',{type:'hidden',name:'language',value:language}));$('body').append($form);$form.submit();};element.on('click',function(event){event.preventDefault();changeLanguage();});}};}]);}());;(function(){"use strict";var mod=angular.module('d4c.core');mod.directive('d4cDatetimePicker',function(ModuleLazyLoader){var lpad=function(val){val=val.toString();while(val.length<2){val='0'+val;}
return val;};var formatTimeToISO=function(time){if(time){return moment(time).milliseconds(0).toISOString().replace('.000Z','Z');}else{return null;}};var romeOptions={styles:{container:"rd-container d4cwidgets-rd-container"},weekStart:1};return{restrict:'E',replace:true,scope:{ngModel:'=',format:'@',d4cDisabled:'=',displayTime:'@'},require:'ngModel',template:''+'<div class="d4c-datetime-picker">'+'   <div class="d4c-datetime-picker__date">'+'       <input type="text" class="d4c-datetime-picker__date-input" ng-class="{\'d4c-datetime-picker__date-input--disabled\': d4cDisabled}" ng-disabled="d4cDisabled" ng-model="internalModel" placeholder="{{ format }}"></input>'+'       <i class="d4c-datetime-picker__calendar-addon fa fa-calendar" ng-hide="d4cDisabled"></i>'+'   </div>'+'   <span ng-if="timezone" class="d4c-datetime-picker__timezone" translate>Local time ({{timezone}})</span>'+'</div>',link:function(scope,element,attrs,ngModel){scope.format=scope.format||'YYYY-MM-DD HH:mm:ss';var isDateTime=scope.format.indexOf(' ')>-1;scope.timezone=null;if(isDateTime){var offset=new Date().getTimezoneOffset();scope.timezone=((offset<0?'+':'-')+
lpad(parseInt(Math.abs(offset/60),10))+':'+
lpad(Math.abs(offset%60)));}
ModuleLazyLoader('rome').then(function(){if(typeof scope.displayTime==="undefined"){scope.displayTime=true;}else{scope.displayTime=(scope.displayTime==="true");}
rome(element.find('input')[0],angular.extend({},romeOptions,{time:scope.displayTime,inputFormat:scope.dateFormat})).on('data',function(value){scope.$apply(function(){scope.internalModel=formatTimeToISO(moment(value,scope.dateFormat));});});});scope.$watch('internalModel',function(nv,ov){if(nv){if(isDateTime){scope.ngModel=(moment(nv,"YYYY-MM-DD HH:mm:ss")).toISOString().replace('.000','').replace('Z',"+00:00");}else{scope.ngModel=nv;}}});scope.$watch('ngModel',function(nv,ov){var date;if(nv){if(isDateTime){date=moment(nv);scope.internalModel=date.format('YYYY-MM-DD HH:mm:ss');}else{date=moment(nv);scope.internalModel=date.format('YYYY-MM-DD');}}});}};});}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cEmbedControl',function($location,translate,WidgetCodeBuilder){function buildWidgetCode(embedType,context){if(embedType==="cartograph"){return"";}else if(embedType==="table"){return WidgetCodeBuilder.buildTableWidgetCode(context,$location.search());}else if(embedType==="analyze"){var encodedChartConfig=$location.search()['dataChart'];if(encodedChartConfig){return WidgetCodeBuilder.buildChartWidgetCode(JSON.parse(b64_to_utf8(encodedChartConfig)));}else{return"";}}else if(embedType==="media-gallery"){return WidgetCodeBuilder.buildMediaWidgetCode(context,$location.search());}else if(embedType==="map"){return WidgetCodeBuilder.buildMapWidgetCode(context,$location.search());}else if(embedType==="calendar"){return WidgetCodeBuilder.buildCalendarWidgetCode(context);}else if(embedType==="custom"){return WidgetCodeBuilder.buildCustomViewCode(context);}}
return{restrict:'E',replace:true,scope:{embedType:'@',anonymousAccess:'=',multidatasets:'@',defaultCollapse:'@',context:'=?',forceEmbedDatasetCard:'=',widgetCode:'=?'},templateUrl:'/static/d4c/html/embed_control.html',controller:function($scope,$timeout){$scope.sizes=[{name:'small',label:'',width:400,height:300},{name:'medium',label:'',width:600,height:450},{name:'large',label:'',width:800,height:600},{name:'custom',label:translate('Custom size'),width:600,height:450}];angular.forEach($scope.sizes,function(value){if(value.label===''){value.label=value.width+' × '+value.height;}});$scope.tab='share';$scope.size=$scope.sizes[0];$scope.embedUrlOptions={'static':false,datasetcard:$scope.forceEmbedDatasetCard||false};$scope.mapOptions={scrollWheelZoom:false};var _computeShareUrl=function(url,embedType){if(embedType==='cartograph'){url=url.replace('/map/','/map/embed/');}else if(embedType==='chartbuilder'){url=url.replace('/chart/','/chart/embed/');}else{url=url.replace('/explore/','/explore/embed/');}
return url;};var _computeEmbedUrl=function(url,options,embedType){url=_computeShareUrl(url,embedType);if(url.indexOf('?')===-1){url+='?';}
angular.forEach(options,function(value,key){url+='&'+key+'='+value;});return url;};var updateUrls=function(){var baseUrl=''+$location.absUrl();$scope.share_url=_computeShareUrl(baseUrl,$scope.embedType);$scope.embed_url=_computeEmbedUrl(baseUrl,getUrlOptions(),$scope.embedType);};var getUrlOptions=function(){var options=$scope.embedUrlOptions;if($scope.embedType==='map'){options=$.extend({},options,$scope.mapOptions);}
return options;};var init=function(){if($scope.widgetCode){$scope.$watch('[widgetCode, embedUrlOptions, mapOptions]',function(){updateUrls();if($scope.tab==='widget'&&!$scope.widgetCode){$scope.tab='share';}},true);}else{$scope.loc=$location;$scope.$watch('[loc.absUrl(), embedUrlOptions, mapOptions]',function(){updateUrls();$scope.widgetCode=buildWidgetCode($scope.embedType,$scope.context);if($scope.tab==='widget'&&!$scope.widgetCode){$scope.tab='share';}},true);}};if($scope.context){$scope.context.wait().then(function(dataset){init();});}else{init();}
$timeout(function(){$scope.$emit('embedControlLoaded');},0);}};});})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cDropdownPosition',function(){return{restrict:'A',controller:function($scope,$element,$attrs){var controlElement,optionsElement,maxOptionsHeight=200,callbackName='repositionDropdown'||$attrs.d4cDropdownPosition;this.setControlElement=function(element){controlElement=element;};this.setOptionsElement=function(element,maxHeight){optionsElement=element;maxOptionsHeight=maxHeight;};$scope[callbackName]=function(){var availableBottomSpace=$(document).height()-controlElement.offset().top-controlElement.height();var availableTopSpace=controlElement.offset().top;var optionsHeight=optionsElement.height();var neededSpace=Math.min(optionsHeight,maxOptionsHeight);if(availableBottomSpace<neededSpace&&availableTopSpace>=neededSpace){optionsElement.css({'bottom':controlElement.height()+'px'});return'top';}
return'bottom';};}};});mod.directive('d4cDropdownPositionControl',function(){return{restrict:'A',require:'^d4cDropdownPosition',link:function(scope,element,attrs,dropdownPositionCtrl){dropdownPositionCtrl.setControlElement(element);}};});mod.directive('d4cDropdownPositionOptions',function(){return{restrict:'A',require:'^d4cDropdownPosition',link:function(scope,element,attrs,dropdownPositionCtrl){var maxHeight=parseInt(attrs.d4cDropdownPositionOptionsHeight,10);dropdownPositionCtrl.setOptionsElement(element,maxHeight);}};});})();;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cApiConsole',function($http){return{restrict:'E',replace:true,scope:{api:'=',autocompleteFacet:'=',autoRequest:'@',service:'='},templateUrl:'/static/d4c/html/api-console.html',controller:function($scope){$scope.apiParams={};$scope.errors=null;$scope.results=null;$scope.runOnce=true;$scope.$watch('apiParams',function(){if($scope.apiParams.parameters&&($scope.autoRequest==='true'||$scope.runOnce)){$scope.runOnce=false;if(!$.isEmptyObject($scope.apiParams.parameters)||!$.isEmptyObject($scope.apiParams.urlParameters)){$scope.sendCall();}}},true);$scope.computeURL=function(){$scope.apiParams={parameters:{},urlParameters:{}};var baseURL=$scope.service.url;if($scope.service.urlParameters){var value;for(var key in $scope.api.urlParameters){value=$scope.api.urlParameters[key];if(value){$scope.apiParams.urlParameters[key]=value;}}
for(var i=0;i<$scope.service.urlParameters.length;i++){var urlParameter=$scope.service.urlParameters[i];value='';if($scope.api.urlParameters[urlParameter.name]){value=$scope.api.urlParameters[urlParameter.name];}
baseURL=baseURL.replace(urlParameter.name,value);}}
if($scope.service.parameters){for(var j=0;j<$scope.service.parameters.length;j++){var parameter=$scope.service.parameters[j];if(parameter.type==='hierarchical'&&$scope.api.parameters[parameter.name]){var object=$scope.api.parameters[parameter.name];for(var subkey in object){var name=parameter.name+'.'+subkey;$scope.apiParams.parameters[name]=object[subkey];}}else if($scope.api.parameters[parameter.name]){$scope.apiParams.parameters[parameter.name]=$scope.api.parameters[parameter.name];}}}
var queryString=$.param($scope.apiParams.parameters,true);if(queryString){return baseURL+'?'+queryString;}else{return baseURL;}};$scope.sendCall=function(){$http.get($scope.computeURL()).success(function(data){$scope.results=data;$scope.errors=null;}).error(function(data){$scope.results=null;$scope.errors=data.error;});};}};});}());;(function(){'use strict';angular.module('ui.keypress',[]).factory('keypressHelper',['$parse',function keypress($parse){var keysByCode={8:'backspace',9:'tab',13:'enter',27:'esc',32:'space',33:'pageup',34:'pagedown',35:'end',36:'home',37:'left',38:'up',39:'right',40:'down',45:'insert',46:'delete'};var capitaliseFirstLetter=function(string){return string.charAt(0).toUpperCase()+string.slice(1);};return function(mode,scope,elm,attrs){var params,combinations=[];params=scope.$eval(attrs['ui'+capitaliseFirstLetter(mode)]);angular.forEach(params,function(v,k){var combination,expression;expression=$parse(v);angular.forEach(k.split(' '),function(variation){combination={expression:expression,keys:{}};angular.forEach(variation.split('-'),function(value){combination.keys[value]=true;});combinations.push(combination);});});elm.bind(mode,function(event){var metaPressed=!!(event.metaKey&&!event.ctrlKey);var altPressed=!!event.altKey;var ctrlPressed=!!event.ctrlKey;var shiftPressed=!!event.shiftKey;var keyCode=event.keyCode;if(!shiftPressed&&keyCode>=97&&keyCode<=122){keyCode=keyCode-32;}
angular.forEach(combinations,function(combination){var mainKeyPressed=combination.keys[keysByCode[keyCode]]||combination.keys[String.fromCharCode(keyCode)];var metaRequired=!!combination.keys.meta;var altRequired=!!combination.keys.alt;var ctrlRequired=!!combination.keys.ctrl;var shiftRequired=!!combination.keys.shift;if(mainKeyPressed&&(metaRequired===metaPressed)&&(altRequired===altPressed)&&(ctrlRequired===ctrlPressed)&&(shiftRequired===shiftPressed)){scope.$apply(function(){combination.expression(scope,{'$event':event});});}});});};}]);angular.module('ui.keypress').directive('uiKeydown',['keypressHelper',function(keypressHelper){return{link:function(scope,elm,attrs){keypressHelper('keydown',scope,elm,attrs);}};}]);angular.module('ui.keypress').directive('uiKeypress',['keypressHelper',function(keypressHelper){return{link:function(scope,elm,attrs){keypressHelper('keypress',scope,elm,attrs);}};}]);angular.module('ui.keypress').directive('uiKeyup',['keypressHelper',function(keypressHelper){return{link:function(scope,elm,attrs){keypressHelper('keyup',scope,elm,attrs);}};}]);}());;(function(){'use strict';var app=angular.module('d4c.core');app.directive('d4cNotificationHandler',function(d4cNotificationService,translate,$timeout,gettextCatalog){return{restrict:'E',replace:true,template:''+'<div class="d4c-notification-handler" ng-show="notificationList.length">'+'    <div ng-repeat="notification in notificationList" '+'         class="d4c-notification-handler__notification d4c-notification-handler__notification--{{ notification.type }}">'+'        <div class="d4c-notification-handler__notification-header">'+'            <div class="d4c-notification-handler__notification-title"> '+'                <i class="fa" '+'                   ng-class="{\'fa-exclamation-circle\': notification.type != \'success\', \'fa-check\': notification.type == \'success\' }"></i> '+'                {{ notification.title }}'+'            </div>'+'            <i class="fa fa-close d4c-notification-handler__notification-close" '+'               ng-click="removeNotification(notification)"></i>'+'        </div>'+'        <div class="d4c-notification-handler__notification-message" '+'             >{{ notification.message }}</div>'+'        <pre class="d4c-notification-handler__notification-stacktrace" '+'             ng-if="notification.stacktrace" '+'             ng-bind="notification.stacktrace"></pre>'+'    </div>'+'</div>',scope:true,link:function(scope){var lastNotification=null;scope.notificationList=[];var checkNotificationList=function(){scope.notificationList=scope.notificationList.filter(function(notification){return!notification.handled;});};scope.$watchCollection('notificationList',checkNotificationList);scope.removeNotification=function(notification){scope.notificationList.splice(scope.notificationList.indexOf(notification),1);if(angular.equals(notification,lastNotification)){lastNotification=null;}};var formatNotification=function(notification){notification.errorcode=notification.errorcode||0;if(notification.errorcode===10001){notification.type='quota';notification.title=translate('Quota exceeded');notification.message=gettextCatalog.getString(notification.error,notification,"API error message");notification.message=format_string(notification.message,notification);}else if([10002,10003,10004,10005].indexOf(notification.errorcode)>-1){notification.type='quota';notification.title=translate('Too many requests');notification.message=translate('Unfortunately, you have exceeded a security quota limit. Please retry later, or contact domain administrator.');notification.message=gettextCatalog.getString(notification.error,notification,"API error message");notification.message=format_string(notification.message,notification);}else if(notification.errorcode===10010){notification.type='quota';notification.title=translate('Domain currently under maintenance');notification.message=translate('This domain is currently under maintenance, and is only available for exploration at the moment. Sorry for the inconvenience.');}else if(notification.error_key){notification.title=translate('Error');notification.message=gettextCatalog.getString(notification.raw_message,null,"API error message");notification.message=format_string(notification.message,notification.raw_params);}else{if(!notification.title){notification.title=notification.type=='success'?translate('Success'):translate('Error');}else{notification.title=translate(notification.title);}
if(notification.error){notification.message=translate(notification.error);}else if(!notification.message||notification.message.trim()[0]==='<'){notification.message=translate('Error while contacting the service.');}else{notification.message=translate(notification.message);}}
return notification;};var notificationHandler=function(notification){formatNotification(notification);if(!lastNotification||!angular.equals(notification,lastNotification)){scope.notificationList.push(notification);if(notification.type==='success'){$timeout(function(){notification.handled=true;checkNotificationList();},5000);}}
lastNotification=notification;};d4cNotificationService.registerForNotifications(notificationHandler);}};});}());;(function(){"use strict";var mod=angular.module('d4c.core');mod.directive('d4cFlashContainer',['FlashService',function(FlashService){return{restrict:'E',scope:true,template:''+'<div class="d4c-flash-container">'+'   <d4c-flash-message ng-repeat="flash in flashes | filter:filterType"'+'       is-dismissible="flash.isDismissible"'+'       on-dismiss="dismiss(flash)"'+'       type="flash.type"'+'       content="flash.content"></d4c-flash-message>'+'</div>',link:function($scope,element,attrs){var filterType=(attrs.type?attrs.type:'all');$scope.filterType=function(value){return(filterType==='all'||value.type===filterType);};$scope.flashes=FlashService.flashes;$scope.dismiss=function(flash){FlashService.dismiss(flash);};}};}]);mod.directive('d4cFlashMessage',function(){return{restrict:'E',scope:{'type':'=','content':'=','isDismissible':'=','onDismiss':'&?'},transclude:true,template:''+'<div class="d4c-flash-message {{ \'d4c-flash-message--\' + (type ? type : \'info\') }}">'+'   <p class="d4c-flash-message__content"></p>'+'   <i ng-if="isDismissible" class="fa fa-times" ng-click="dismiss()"></i>'+'</div>',link:function($scope,element,attrs,ctrl,transclude){transclude(function(clone){var contentContainer=element.find(".d4c-flash-message__content");if($scope.content){contentContainer.html($scope.content);}else{contentContainer.html(clone);}});$scope.dismiss=function(){if($scope.onDismiss){$scope.onDismiss();}
$scope.$destroy();element.remove();};}};});}());;(function(){"use strict";var mod=angular.module('d4c.core');mod.directive('d4cResourceDownloadConditions',['config','$window','$compile',function(config,$window,$compile){var overlayTemplate=''+'<div class="d4c-resource-download-conditions__overlay">'+'   <div class="d4c-resource-download-conditions__message">'+'       <span class="d4c-resource-download-conditions__text" translate>Before downloading this resource, you need to read and accept the <a href="/conditions/" target="_blank">terms and conditions</a>.</span>'+'       <div class="d4c-resource-download-conditions__buttons">'+'           <a href="#" class="js-button-accept d4c-resource-download-conditions__button d4c-button d4c-button--primary" translate>I accept</a>'+'           <a href="#" class="js-button-refuse d4c-resource-download-conditions__button d4c-button" translate>I don\'t accept</a>'+'       </div>'+'   </div>'+'</div>';var storageKey=config.DOMAIN_ID+'@resourceDownloadConditions';var storeAcceptance=function(){localStorage.setItem(storageKey,true);};var isAcceptanceStored=function(){return!!localStorage.getItem(storageKey);};return{restrict:'A',scope:{},link:function(scope,element,attrs){if(element[0].tagName.toLowerCase()!=='a'){console.warn('d4c-resource-download-conditions should be on a <a> tag');}
if(!config.RESOURCE_DOWNLOAD_CONDITIONS){return;}
if(isAcceptanceStored()){return;}
element.on('click',function(e){if(isAcceptanceStored()){return true;}
e.preventDefault();var overlay=$compile(overlayTemplate)(scope);angular.element($window.document.body).append(overlay);overlay.on('click',function(e){overlay.remove();});overlay.find('.d4c-resource-download-conditions__message').on('click',function(e){e.stopPropagation();});overlay.find('.js-button-accept').on('click',function(e){storeAcceptance();angular.element(e.currentTarget).attr('href',element.attr('href'));overlay.remove();});overlay.find('.js-button-refuse').on('click',function(e){overlay.remove();return false;});});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c.core');mod.directive('d4cConfirmClick',['$compile','translate','$timeout','$interpolate',function($compile,translate,$timeout,$interpolate){return{restrict:'A',controller:function($scope,$element,$attrs){var $confirm;var template=''+'<div class="d4c-confirm-click" >'+'    <div class="d4c-confirm-click__backdrop"></div>'+'    <div class="d4c-confirm-click__body" role="alertdialog" aria-labelledby="d4c-confirm-click-title">'+'        <div class="d4c-confirm-click__title">'+'            <i class="fa fa-exclamation-triangle" ng-class="iconStyle" aria-hidden="true"></i>'+'            <span id="d4c-confirm-click-title" ng-bind="title"></span>'+'        </div>'+'        <div class="d4c-confirm-click__message" ng-bind="message" id="d4c-confirm-click-description"></div>'+'        <div class="d4c-confirm-click__actions">'+'            <button class="d4c-confirm-click__action" '+'                    ng-class="cancelStyle"'+'                    ng-click="destroyConfirm()">'+'                <span translate>Cancel</span>'+'            </button>'+'            <button class="d4c-button d4c-confirm-click__action" ng-class="buttonStyle"'+'                    ng-click="applyAction()"'+'                    ng-bind="label"'+'                    autofocus></button>'+'        </div>'+'    </div>'+'</div>';var destroyConfirm=function(){$confirm.remove();$('body').css('overflow-y','visible');$element.focus();};var applyAction=function(){$scope.$applyAsync($attrs.d4cConfirmClickAction);destroyConfirm();};var parseAttribute=function(name,defaultValue){var value;if(angular.isDefined($attrs[name])){try{value=$interpolate($attrs[name])($scope);}catch(e){value=$attrs[name];}}
return value||defaultValue;};var buildConfirmScope=function(){var confirmScope=$scope.$new();confirmScope.title=parseAttribute('d4cConfirmClickTitle',translate('Please confirm'));confirmScope.message=parseAttribute('d4cConfirmClickMessage',translate('Are you sure you want to proceed with this action?'));confirmScope.label=parseAttribute('d4cConfirmClickButtonLabel',translate('OK'));confirmScope.applyAction=applyAction;confirmScope.destroyConfirm=destroyConfirm;confirmScope.type=parseAttribute('d4cConfirmClickType');if(confirmScope.type==='danger'){confirmScope.buttonStyle='d4c-button--danger';confirmScope.iconStyle='d4c-confirm-click__icon--danger';confirmScope.cancelStyle='d4c-confirm-click__cancel-button--danger';}else if(confirmScope.type==='neutral'){confirmScope.buttonStyle='';confirmScope.iconStyle='';confirmScope.cancelStyle='d4c-confirm-click__cancel-button';}else{confirmScope.buttonStyle='d4c-button--primary';confirmScope.cancelStyle='d4c-confirm-click__cancel-button';}
return confirmScope;};$element.on('click',function(){if(angular.isDefined($attrs.ngDisabled)&&$scope.$eval($attrs.ngDisabled)){return;}
$confirm=$compile(template)(buildConfirmScope());$('.d4c-content').append($confirm);$('body').css('overflow-y','hidden');$confirm.on('keyup',function(event){if(event.keyCode==27){destroyConfirm();}});$timeout(function(){$confirm.find('.d4c-confirm-click__action.d4c-button.d4c-button--primary').focus();});});}};}]);})();;(function(){'use strict';var version='1.2.1';var mod=angular.module('d4c-widgets',['infinite-scroll','ngSanitize','gettext']);mod.provider('D4CWidgetsConfig',function(){this.defaultConfig={D4CWidgetsVersion:version,defaultDomain:'',language:null,disqusShortname:null,customAPIHeaders:null,basemaps:[{"provider":"jawg.streets","label":"Jawg Streets","jawg_apikey":""}],mapGeobox:false,chartColors:null,mapPrependAttribution:null,basePath:null,websiteName:null,themes:{},defaultMapLocation:"12,48.85218,2.36996"};this.customConfig={};this.setConfig=function(customConfig){angular.extend(this.customConfig,customConfig);};this.$get=function(){return angular.extend({},this.defaultConfig,this.customConfig);};});mod.run(['gettextCatalog','D4CWidgetsConfig',function(gettextCatalog,D4CWidgetsConfig){if(!D4CWidgetsConfig.basePath){var scriptTags=document.getElementsByTagName('script');var d4cwidgetsRE=/[\/^]d4c-widgets(\.min)?\.js\??/;var i,src,matches,path;for(i=0;i<scriptTags.length;i++){src=scriptTags[i].src;matches=src.match(d4cwidgetsRE);if(matches){path=src.split(d4cwidgetsRE)[0];if(!path){D4CWidgetsConfig.basePath='/';}else if(path.substring(path.length-3)==='.js'){D4CWidgetsConfig.basePath='';}else{D4CWidgetsConfig.basePath=path+'/';}}}}}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cWidgetTooltip',['$rootScope','$compile',function($rootScope,$compile){return{restrict:'A',priority:100,transclude:true,controller:['$scope','$element','$attrs','$transclude',function($scope,$element,$attrs,$transclude){var template,displayedFields,fields,context,that=this;this.configure=function(options){template=options.defaultTemplate||'';displayedFields=options.displayedFields||[];fields=options.fields||[];context=options.context|| {};};this.render=function(record,scopeCustomAttributes,currentField){var compiledTemplate,newScope=$rootScope.$new(true);newScope.record=angular.copy(record);newScope.displayedFields=angular.copy(displayedFields);newScope.fields=angular.copy(fields);newScope.context=angular.copy(context);if(currentField){newScope.displayedFields=newScope.displayedFields.filter(function(field){return currentField!==field.name;});}
angular.merge(newScope,scopeCustomAttributes||{});if(!template){$transclude($rootScope.$new(true),function(clone,scope){if(clone.length>0){template=clone;}else{template=that.defaultTemplate;}});}
compiledTemplate=$compile(template);return compiledTemplate(newScope);};}]};}]);}());;(function(){'use strict';var checkCondition=function checkCondition(scope,condition_expr,value){try{return!!(scope.$eval(condition_expr,{y:value}));}catch(e){console.warn("Error while compiling condition with expr",condition_expr);}
return false;};var mod=angular.module('d4c-widgets');mod.directive('d4cAnalysis',['D4CAPI',function(D4CAPI){var parseCustomExpression=function(serie,parentserie_for_subseries){var regex=/([A-Z_-]*?)\((.*?)\)/g;var params2regex=/([A-Z_-]*?)\(([a-zA-Z0-9\._]+),\s?([0-9\.]+)\)/g;var aggregates_holder=parentserie_for_subseries||serie;var match;serie.compiled_expr=""+serie.expr;aggregates_holder.aggregates=[];var options={};while((match=regex.exec(serie.expr))){var extended_match=params2regex.exec(match[0]);if(extended_match&&extended_match.length===4){match=extended_match;}
if(match&&(match.length===3||match.length===4)){if(match[2].indexOf('serie')===0){var compiled="operators."+match[1].toLowerCase()+".apply(null, accumulation['"+match[2]+"']";if(match.length===4){compiled+=", "+match[3];}
compiled+=")";serie.compiled_expr=serie.compiled_expr.replace(match[0],compiled);aggregates_holder.aggregates.push(match[2]);}else{options['func']=match[1];options['expr']=match[2];if(match[3]){options['subsets']=match[3];}
serie.compiled_expr+=serie.compiled_expr.replace(match[0],'y');}}}
return options;};return{restrict:'A',priority:1001,controller:['$scope','$attrs',function($scope,$attrs){$scope[$attrs.d4cAnalysisContext].wait().then(function(){$scope.$watch($attrs.d4cAnalysisContext,function(nv){var variable=$attrs.d4cAnalysis||'results';var options=angular.extend({},nv.parameters,{'maxpoints':$attrs.d4cAnalysisMax||0});var aggregations={},series={};var xs=[];if($attrs.d4cAnalysisSort){options.sort=$attrs.d4cAnalysisSort;}
angular.forEach($attrs,function(value,attr){var serie_name,cumulative;if(attr.startsWith("d4cAnalysisSerie")){serie_name=attr.replace("d4cAnalysisSerie","");cumulative=false;if(serie_name.endsWith("Cumulative")){if(serie_name.replace("Cumulative","").length>0){serie_name=serie_name.replace("Cumulative","");cumulative=value;}else{}}
serie_name=serie_name.toLowerCase();if(!series[serie_name]){series[serie_name]={};}
if(cumulative){series[serie_name].cumulative=cumulative;}else{var serie={'expr':value};angular.extend(series[serie_name],parseCustomExpression(serie));}}else if(attr.startsWith("d4cAnalysisAggregation")){serie_name=attr.replace("d4cAnalysisAggregation","");serie_name=serie_name.toLowerCase();if(!aggregations[serie_name]){aggregations[serie_name]={};}
aggregations[serie_name].expr=serie_name;aggregations[serie_name].func=value;}else if(attr.startsWith("d4cAnalysisX")){xs.push(value);}});if(xs.length>0){options.x=xs;}
angular.forEach(series,function(serie,name){options["y."+name+".expr"]=serie.expr;options["y."+name+".func"]=serie.func;options["y."+name+".cumulative"]=serie.cumulative||"false";if(serie.func==='QUANTILES'){options["y."+name+".subsets"]=serie.subsets||"50";}
if(aggregations[name]){options['agg.'+name+'.expr']=aggregations[name].expr;options['agg.'+name+'.func']=aggregations[name].func;}});D4CAPI.records.analyze(nv,options).success(function(data){$scope[variable]={};if(angular.isArray(data)){$scope[variable]={'results':data};}else{$scope[variable]=data;}});},true);});}]};}]);mod.directive('d4cAnalysisSerie',[function(){return{restrict:'A',scope:true,controller:['$scope','$attrs',function($scope,$attrs){$scope.condition='';$scope.field='';$scope.$watch($attrs.d4cAnalysisSerieCondition,function(nv){if(!$attrs.d4cAnalysisSerieCondition){return;}
$scope.condition=$attrs.d4cAnalysisSerieCondition;},true);$scope.$watch($attrs.d4cAnalysisSerieName,function(nv){if(!$attrs.d4cAnalysisSerieName){return;}
$scope.name=$attrs.d4cAnalysisSerieName;},true);$scope.$watch($attrs.d4cAnalysisSerieSeparateOnX,function(nv){if(!$attrs.d4cAnalysisSerieSeparateOnX){return;}
$scope.separateOnX=$attrs.d4cAnalysisSerieSeparateOnX;},true);$scope.$watch($attrs.d4cAnalysisSerieMode,function(nv){if(!$attrs.d4cAnalysisSerieMode){return;}
$scope.mode=$attrs.d4cAnalysisSerieMode;},true);}],link:function(scope,element,attrs){scope.$watch(attrs.d4cAnalysisSerie,function(nv,ov){var analysis=nv,i,result,currentValue,longest_results={},currentXAxis;if(scope.separateOnX){longest_results={};}
scope.results={};if(analysis){result={};for(i=0;i<analysis.length;i++){currentValue=analysis[i][scope.name];if(scope.separateOnX){currentXAxis=analysis[i]['x'][scope.separateOnX];}else{currentXAxis="global";}
if(checkCondition(scope,scope.condition,currentValue)){if(!longest_results[currentXAxis]){longest_results[currentXAxis]=[];}
longest_results[currentXAxis].push(analysis[i]);}else{if(longest_results[currentXAxis]){if(!result[currentXAxis]||result[currentXAxis].length<longest_results[currentXAxis].length){result[currentXAxis]=longest_results[currentXAxis];}
longest_results[currentXAxis]=false;}}}
angular.forEach(longest_results,function(longest_result,x){if(!result[x]||result[x].length<longest_result.length){result[x]=longest_result;}});if(scope.mode=="reduce"&&scope.separateOnX){var keys=Object.keys(result);var biggest=[];for(i=0;i<keys.length;i++){if(result[keys[i]].length>biggest.length){biggest=result[keys[i]];}}
angular.copy({'global':biggest},scope.results);}else{angular.copy(result,scope.results);}}});}};}]);mod.directive('d4cSubaggregation',['ModuleLazyLoader',function(ModuleLazyLoader){var parseCustomExpression=function parseCustomExpression(serie,parentserie_for_subseries){var regex=/([A-Z_-]*?)\((.*?)\)/g;var params2regex=/([A-Z_-]*?)\(([a-zA-Z0-9\._]+),\s?(.+)\)/g;var aggregates_holder=parentserie_for_subseries||serie;var match;serie.compiled_expr=""+serie.expr;aggregates_holder.aggregates=[];var options={};while((match=regex.exec(serie.expr))){var extended_match=params2regex.exec(match[0]);if(extended_match&&extended_match.length===4){match=extended_match;}
if(match&&(match.length===3||match.length===4)){options['func']=match[1];options['expr']=match[2];if(match[3]){options['param']=match[3];}
var compiled="operators."+match[1].toLowerCase()+"(accumulation['"+match[2]+"']";if(match.length===4){compiled+=", "+match[3];}
compiled+=")";options['compiled_expr']=serie.compiled_expr.replace(match[0],compiled);options['needed_aggregates']=match[2];}}
return options;};var compileAggrValue=function compileAggrValue(scope,compiled_expr,accumulations,aggregates){var valueY;try{valueY=scope.$eval(compiled_expr,{operators:ss,accumulation:function(accumulations,needed_aggregates){var res={};angular.forEach(needed_aggregates,function(k){res[k]=accumulations[k];});return res;}(accumulations,aggregates),console:console});}catch(e){console.warn("Error while compiling aggregation value with expr",compiled_expr);}
return valueY;};return{restrict:'A',scope:true,controller:['$scope','$attrs',function($scope,$attrs){$scope.aggregations={};var cancel=$scope.$watch($attrs.d4cSubaggregation,function(nv){if(!nv){return;}
var aggregations={};angular.forEach($attrs,function(value,attr){var serie_name,cumulative;if(attr.startsWith("d4cSubaggregationSerie")){serie_name=attr.replace("d4cSubaggregationSerie","");serie_name=serie_name.toLowerCase();if(!aggregations[serie_name]){aggregations[serie_name]={};}
var aggregation={'expr':value};angular.extend(aggregations[serie_name],parseCustomExpression(aggregation));}});angular.copy(aggregations,$scope.aggregations);cancel();},true);}],link:function(scope,element,attrs){ModuleLazyLoader('simple-statistics').then(function(){scope.$watch(attrs.d4cSubaggregation,function(nv,ov){var values={},analysis=nv,i,result,longest_results={};scope.results=[];if(analysis){result={};angular.forEach(scope.aggregations,function(aggregation,name){values[aggregation.needed_aggregates]=[];});for(i=0;i<analysis.length;i++){angular.forEach(values,function(useless,name){if(typeof analysis[i][name]!=="undefined"){values[name].push(analysis[i][name]);}});}
angular.forEach(scope.aggregations,function(aggregation,name){result[name]=compileAggrValue(scope,aggregation.compiled_expr,values,[aggregation.needed_aggregates]);});scope.results.push(result);}},true);});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cLastDatasetsFeed',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,template:'<div class="d4cwidget d4cwidget-last-datasets-feed">'+'<ul class="d4cwidget-last-datasets-feed__datasets">'+'   <li class="no-data" ng-hide="datasets" translate>No data available yet</li>'+'   <li class="d4cwidget-last-datasets-feed__dataset" ng-repeat="dataset in datasets" ng-if="datasets">'+'       <d4c-theme-picto class="d4cwidget-last-datasets-feed__theme-picto" theme="{{dataset.metas.theme|firstValue}}"></d4c-theme-picto>'+'       <div class="d4cwidget-last-datasets-feed__dataset-details">'+'           <div class="d4cwidget-last-datasets-feed__dataset-details-title"><a ng-href="{{context.domainUrl}}/explore/dataset/{{dataset.datasetid}}/" target="_self">{{ dataset.metas.title }}</a></div>'+'           <div class="d4cwidget-last-datasets-feed__dataset-details-modified"><i class="fa fa-calendar" aria-hidden="true"></i> <span title="{{ dataset.metas.modified|moment:\'LLL\' }}"><span translate>Modified</span> {{ dataset.metas.modified|timesince }}</span></div>'+'       </div>'+'   </li>'+'</ul>'+'</div>',scope:{context:'=',max:'@'},controller:['$scope',function($scope){$scope.max=$scope.max||5;var refresh=function(){D4CAPI.datasets.search($scope.context,{'rows':$scope.max,'sort':'modified'}).success(function(data){$scope.datasets=data.datasets;});};$scope.$watch('context',function(){refresh();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMap',['URLSynchronizer','MapHelper','ModuleLazyLoader','D4CWidgetsConfig','MapLayerRenderer','translate','translatePlural','$q','$timeout','$location',function(URLSynchronizer,MapHelper,ModuleLazyLoader,D4CWidgetsConfig,MapLayerRenderer,translate,translatePlural,$q,$timeout,$location){return{restrict:'EA',scope:{context:'=',syncToUrl:'@',syncToObject:'=',location:'@',basemap:'@',staticMap:'@',noRefit:'@',autoResize:'@',autoGeolocation:'@',toolbarDrawing:'@',toolbarGeolocation:'@',toolbarFullscreen:'@',scrollWheelZoom:'@',minZoom:'@',maxZoom:'@',displayControl:'=?',displayControlSingleLayer:'=?',searchBox:'=?',displayLegend:'=?',mapConfig:'=?',dynamicConfig:'=?'},transclude:true,template:''+'<div class="d4cwidget d4cwidget-map">'+'    <div class="d4cwidget d4cwidget-map__map" ng-class="{\'d4cwidget-map__map--with-searchbox\': searchBox, \'d4cwidget-map__map--with-display-control\': displayControl}"></div>'+'    <div class="d4cwidget-overlay map d4cwidget-overlay--opaque" ng-show="initialLoading">'+'        <d4c-spinner></d4c-spinner>'+'    </div>'+'    <div class="d4cwidget-map__loading" ng-show="loading">'+'        <d4c-spinner></d4c-spinner>'+'    </div>'+'    <div class="d4c-message-box d4c-message-box--warning d4cwidget-map__limited-data-warning" ng-if="partialDataLayersArray.length > 0"><i class="fa fa-fw fa-warning"></i><span translate><a d4c-tooltip="{{ partialDataLayers }}" d4c-tooltip-direction="top">Some layers</a> show partial results for performance reasons. Try zooming in.</span></div>'+'    <d4c-map-display-control ng-if="displayControl && allContextsInitialized" single-layer="displayControlSingleLayer" map-config="mapConfig"></d4c-map-display-control>'+'    <d4c-map-search-box ng-if="searchBox"></d4c-map-search-box>'+'    <d4c-map-legend ng-if="displayLegend && allContextsInitialized" map-config="mapConfig"></d4c-map-legend>'+'    <div ng-transclude></div>'+'</div>',link:function(scope,element,attrs,ctrl){var mapElement=angular.element(element.children()[0]);if(attrs.id){mapElement.attr('id',attrs.id);}
if(attrs.style){mapElement.attr('style',attrs.style);}
if(attrs['class']){mapElement.addClass(attrs['class']);}
if(attrs.d4cAutoResize==='true'||attrs.d4cAutoResize===''){scope.autoResize='true';}
var isStatic=scope.staticMap&&scope.staticMap.toLowerCase()==='true';var noRefit=scope.noRefit&&scope.noRefit.toLowerCase()==='true';var toolbarDrawing=!(scope.toolbarDrawing&&scope.toolbarDrawing.toLowerCase()==='false');var toolbarGeolocation,toolbarFullscreen,autoGeolocation;if(angular.isUndefined(scope.toolbarGeolocation)){if(angular.isDefined(scope.mapConfig.toolbarGeolocation)){toolbarGeolocation=!!scope.mapConfig.toolbarGeolocation;}else{toolbarGeolocation=true;}}else{toolbarGeolocation=!(scope.toolbarGeolocation&&scope.toolbarGeolocation.toLowerCase()==='false');}
if(angular.isUndefined(scope.toolbarFullscreen)){if(angular.isDefined(scope.mapConfig.toolbarFullscreen)){toolbarFullscreen=!!scope.mapConfig.toolbarFullscreen;}else{toolbarFullscreen=true;}}else{toolbarFullscreen=!(scope.toolbarFullscreen&&scope.toolbarFullscreen.toLowerCase()==='false');}
if(angular.isUndefined(scope.autoGeolocation)){autoGeolocation=!!scope.mapConfig.autoGeolocation;}else{autoGeolocation=scope.autoGeolocation&&scope.autoGeolocation.toLowerCase()==='true';}
if(angular.isUndefined(scope.displayControl)){scope.displayControl=scope.mapConfig.layerSelection;}
if(angular.isUndefined(scope.displayLegend)){scope.displayLegend=true;}
if(angular.isUndefined(scope.displayControlSingleLayer)){scope.displayControlSingleLayer=scope.mapConfig.singleLayer;}
if(angular.isUndefined(scope.searchBox)){scope.searchBox=scope.mapConfig.searchBox;}
if(scope.context){var group=MapHelper.MapConfiguration.createLayerGroupConfiguration();var layer=MapHelper.MapConfiguration.createLayerConfiguration();group.layers.push(layer);scope.mapConfig.groups.push(group);layer.context=scope.context;scope.context.wait().then(function(nv){if(nv){if(scope.context.dataset.extra_metas&&scope.context.dataset.extra_metas.visualization){layer.tooltipDisabled=Boolean(scope.context.dataset.extra_metas.visualization.map_tooltip_disabled);}
MapHelper.MapConfiguration.setLayerDisplaySettingsFromDefault(layer);}});}
function resizeMap(){var mapElement=$('.d4cwidget-map__map');if(scope.autoResize==='true'&&mapElement.length>0){var height=Math.max(200,$(window).height()-mapElement.offset().top);mapElement.height(height);}
ctrl.resizeMapDisplayControl();}
if(scope.autoResize==='true'){$(window).on('resize',resizeMap);resizeMap();}
scope.$on('invalidateMapSize',function(){if(scope.map){scope.map.invalidateSize();}});scope.$on('mapFitBounds',function(e,bounds){scope.map.fitBounds(bounds);});scope.$on('toggleMapDisplayControl',function(event,data){var $leafletControlsElement=$('.leaflet-top.leaflet-right');if(data.expanded){$leafletControlsElement.removeClass('collapsed');}else{$leafletControlsElement.addClass('collapsed');}});scope.initialLoading=true;if(scope.syncToObject){scope.mapContext=scope.syncToObject;}else{scope.mapContext={};}
if(scope.syncToUrl==='true'){URLSynchronizer.addSynchronizedValue(scope,'mapContext.location','location',true);URLSynchronizer.addSynchronizedValue(scope,'mapContext.basemap','basemap');}
if(scope.location){scope.mapContext.location=scope.mapContext.location||scope.location;}else if(scope.mapConfig&&scope.mapConfig.mapPresets&&scope.mapConfig.mapPresets.location){scope.mapContext.location=scope.mapContext.location||scope.mapConfig.mapPresets.location;}
if(scope.basemap){scope.mapContext.basemap=scope.mapContext.basemap||scope.basemap;}else if(scope.mapConfig&&scope.mapConfig.mapPresets&&scope.mapConfig.mapPresets.basemap){scope.mapContext.basemap=scope.mapContext.basemap||scope.mapConfig.mapPresets.basemap;}
ModuleLazyLoader('leaflet').then(function(){var mapOptions={basemapsList:D4CWidgetsConfig.basemaps,worldCopyJump:true,basemap:scope.mapContext.basemap,dragging:!isStatic,keyboard:!isStatic,prependAttribution:D4CWidgetsConfig.mapPrependAttribution,appendAttribution:D4CWidgetsConfig.mapAppendAttribution,maxBounds:[[-90,-240],[90,240]],zoomControl:false};if(scope.syncToUrl==='true'&&'scrollWheelZoom'in $location.search()){mapOptions.scrollWheelZoom=$location.search()['scrollWheelZoom']!=='false';}else{mapOptions.scrollWheelZoom=scope.scrollWheelZoom!=='false';}
if(scope.minZoom){mapOptions.minZoom=scope.minZoom;}
if(scope.maxZoom){mapOptions.maxZoom=scope.maxZoom;}
if(isStatic){mapOptions.doubleClickZoom=false;mapOptions.scrollWheelZoom=false;}
resizeMap();var map=new L.D4CMap(element.children()[0].children[0],mapOptions);map.addControl(new L.Control.Scale());if(!isStatic){map.addControl(new L.Control.Zoom({position:'topright',zoomInTitle:translate('Zoom in'),zoomOutTitle:translate('Zoom out')}));}
if(toolbarFullscreen){try{if(window.self===window.top){map.addControl(new L.Control.D4CMapFullscreen({title:{'false':translate('View Fullscreen'),'true':translate('Exit Fullscreen')}}));}}catch(e){}}
if(D4CWidgetsConfig.mapGeobox&&!scope.searchBox&&!isStatic){var geocoder=L.Control.geocoder({placeholder:translate('Find a place...'),errorMessage:translate('Nothing found.'),geocoder:new L.Control.Geocoder.Nominatim({serviceUrl:"https://nominatim.openstreetmap.org/",geocodingQueryParams:{"accept-language":D4CWidgetsConfig.language||'en',"polygon_geojson":true}})});geocoder.markGeocode=function(result){map.fitBounds(result.bbox);if(result.properties.geojson){var highlight=L.geoJson(result.properties.geojson,{style:function(){return{opacity:0,fillOpacity:0.8,fillColor:'orange',className:'leaflet-geocoder-highlight'};}});map.addLayer(highlight);$timeout(function(){element.addClass('geocoder-highlight-on');},0);$timeout(function(){element.removeClass('geocoder-highlight-on');map.removeLayer(highlight);},2500);}};map.addControl(geocoder);}
if(toolbarGeolocation&&!isStatic){var geolocateControl=new L.Control.Locate({position:'topright',maxZoom:18,strings:{title:translate("Show me where I am"),popup:translate("You are within {distance} {unit} from this point"),outsideMapBoundsMsg:translate("You seem located outside the boundaries of the map")}});map.addControl(geolocateControl);}
scope.drawnItems=new L.FeatureGroup();map.addLayer(scope.drawnItems);if(toolbarDrawing&&!isStatic){L.drawLocal.draw.toolbar.buttons.circle=translate('Draw a circle to filter on');L.drawLocal.draw.toolbar.buttons.polygon=translate('Draw a polygon to filter on');L.drawLocal.draw.toolbar.buttons.rectangle=translate('Draw a rectangle to filter on');L.drawLocal.draw.toolbar.actions={title:translate('Cancel area filter'),text:translate('Cancel')};L.drawLocal.draw.toolbar.undo={title:translate('Delete last point'),text:translate('Delete last point')};L.drawLocal.edit.toolbar.buttons={edit:translate('Edit area filter.'),editDisabled:translate('No area filter to edit.'),remove:translate('Delete area filter.'),removeDisabled:translate('No area filter to delete.')};L.drawLocal.edit.toolbar.actions={save:{title:translate('Apply'),text:translate('Apply')},cancel:{title:translate('Cancel editing, discards all changes.'),text:translate('Cancel')}};L.drawLocal.draw.handlers={circle:{tooltip:{start:translate('Click and drag to draw circle')},radius:translate('Radius')},marker:{tooltip:{start:translate('Click map to place marker')}},polygon:{tooltip:{start:translate('Click to start drawing shape'),cont:translate('Click to continue drawing shape'),end:translate('Click first point to close this shape')}},polyline:{error:'<strong>'+translate('Error:')+'</strong> '+translate('shape edges cannot cross!'),tooltip:{start:translate('Click to start drawing line'),cont:translate('Click to continue drawing line'),end:translate('Click last point to finish line')}},rectangle:{tooltip:{start:translate('Click and drag to draw rectangle')}},simpleshape:{tooltip:{end:translate('Release mouse to finish drawing')}}};L.drawLocal.edit.handlers={edit:{tooltip:{text:translate('Drag handles to edit shape, then apply')+'<br>'+'<em>'+translate('Click cancel to undo changes')+'</em>'}},remove:{tooltip:{text:translate('Click on a shape to delete it, then apply')}}};var drawControl=new L.Control.Draw({edit:{featureGroup:scope.drawnItems},draw:{polyline:false,marker:false,circle:{showRadius:true,metric:true,feet:false}}});map.options.drawControlTooltips=true;map.addControl(drawControl);}
scope.map=map;var setInitialMapView=function(location){var deferred=$q.defer();if(location){var loc=MapHelper.getLocationStructure(location);scope.map.setView(loc.center,loc.zoom);waitForVisibleContexts().then(function(){refreshData(false);});deferred.resolve();if(autoGeolocation&&geolocateControl){geolocateControl.locate();}}else{waitForVisibleContexts().then(function(){MapHelper.retrieveBounds(MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig,{geoOnly:true,skipExcludedFromRefit:true})).then(function(bounds){if(bounds){scope.map.fitBounds(bounds);}else{var loc=MapHelper.getLocationStructure(D4CWidgetsConfig.defaultMapLocation);scope.map.setView(loc.center,loc.zoom);}
refreshData(false);deferred.resolve();if(autoGeolocation&&geolocateControl){geolocateControl.locate();}});});}
return deferred.promise;};setInitialMapView(scope.mapContext.location).then(function(){scope.initialLoading=false;onViewportMove(scope.map);if(!isStatic){waitForVisibleContexts().then(initDrawingTools);}
scope.map.on('moveend',function(e){if(scope.$applyAsync){scope.$applyAsync(function(){onViewportMove(e.target);});}else{$timeout(function(){onViewportMove(e.target);});}});scope.$watch('mapContext.location',function(nv,ov){if(nv!==ov){refreshData(false,true);}});scope.allContextsInitialized=false;waitForVisibleContexts().then(function(){scope.allContextsInitialized=true;});scope.$watch(function(){var pending=0;angular.forEach(scope.mapConfig.groups,function(groupConfig){angular.forEach(groupConfig.layers,function(layerConfig){if(layerConfig._loading){pending++;}});});return pending;},function(nv){scope.loading=!!nv;});scope.$watch(function(){var params=[],paramsNoRefit=[];angular.forEach(MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig),function(ctx){params.push([ctx.name,ctx.parameters]);});angular.forEach(MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig,{skipExcludedFromRefit:true}),function(ctx){paramsNoRefit.push([ctx.name,ctx.parameters]);});return[params,paramsNoRefit,MapHelper.MapConfiguration.getVisibleLayerIds(scope.mapConfig)];},function(nv,ov){if(nv!==ov){syncGeofilterToDrawing();refreshData(!angular.equals(nv[1],ov[1]));}},true);});var configWatcher;var startConfigWatcher=function(){configWatcher=scope.$watch(function(){var simplified=JSON.stringify(scope.mapConfig,function(key,value){if(typeof(value)==="function"){return undefined;}
if(key.substring(0,2)==='$$'){return undefined;}
if(key[0]==='_'){return undefined;}
if(key==='context'){return{datasetId:value.dataset.datasetid,parameters:value.parameters,};}
if(['mapPresets','singleLayer','toolbarGeolocation','toolbarFullscreen','autoGeolocation','layerSelection','searchBox','title','description','caption','captionTitle'].indexOf(key)>-1){return undefined;}
return value;});return simplified;},function(){refreshData();});};var stopConfigWatcher=function(){if(configWatcher){configWatcher();}};scope.$watch('dynamicConfig',function(nv,ov){if(angular.isDefined(nv)){if(nv){startConfigWatcher();}else{stopConfigWatcher();}}});if(D4CWidgetsConfig.basemaps.length>1){scope.map.on('baselayerchange',function(e){scope.$evalAsync('mapContext.basemap = "'+e.layer.basemapId+'"');angular.forEach(scope.mapConfig.groups,function(groupConfig){if(groupConfig.displayed){angular.forEach(groupConfig.layers,function(layerConfig){if(layerConfig.display==='tiles'&&layerConfig._rendered){layerConfig._rendered.setMinZoom(e.layer.options.minZoom);layerConfig._rendered.setMaxZoom(e.layer.options.maxZoom);}});}});});}
var onViewportMove=function(map){var size=map.getSize();if(size.x>0&&size.y>0){scope.mapContext.location=MapHelper.getLocationParameter(map.getCenter(),map.getZoom());}};var renderedLayers={};var previousMasterLayerGroup;var refreshData=function(fitView,locationChangedOnly){fitView=!noRefit&&fitView;var renderData=function(locationChangedOnly){var promises=[];var newlyRenderedLayers={};var masterLayerGroup=new L.LayerGroup();scope.partialDataLayers='';scope.partialDataLayersArray=[];angular.forEach(scope.mapConfig.groups,function(layerGroup){if(!layerGroup.displayed){angular.forEach(layerGroup.layers,function(layer){if(layer._currentRequestTimeout){layer._currentRequestTimeout.resolve();layer._loading=false;}
if(layer._rendered){scope.map.removeLayer(layer._rendered);layer._rendered=null;}});return;}
angular.forEach(layerGroup.layers,function(layer){if(layer.showZoomMin&&layer.showZoomMin>scope.map.getZoom()){return;}
if(layer.showZoomMax&&layer.showZoomMax<scope.map.getZoom()){return;}
if(layer.context.dataset===null){return;}
if(!locationChangedOnly||MapLayerRenderer.doesLayerRefreshOnLocationChange(layer)){var deferred=$q.defer();masterLayerGroup.addLayer(MapLayerRenderer.updateDataLayer(layer,scope.map,deferred));promises.push(deferred.promise);newlyRenderedLayers[layer._runtimeId]=layer;}});});Object.keys(renderedLayers).forEach(function(runtimeId){if(angular.isUndefined(newlyRenderedLayers[runtimeId])){var layer=renderedLayers[runtimeId];if(layer._currentRequestTimeout){layer._currentRequestTimeout.resolve();layer._loading=false;}
if(layer._rendered){scope.map.removeLayer(layer._rendered);layer._rendered=null;}}});renderedLayers=newlyRenderedLayers;$q.all(promises).then(function(){if(previousMasterLayerGroup){scope.map.removeLayer(previousMasterLayerGroup);}
scope.map.addLayer(masterLayerGroup);previousMasterLayerGroup=masterLayerGroup;angular.forEach(renderedLayers,function(layerGroup){if(layerGroup._incomplete){var layerTitle=layerGroup.title||layerGroup.context.dataset.metas.title;var maxTitleLength=50;if(layerTitle.length>maxTitleLength){layerTitle=layerTitle.substr(0,maxTitleLength-1)+'&hellip;';}
scope.partialDataLayersArray.push('&bull; '+layerTitle);scope.partialDataLayers=scope.partialDataTooltipMessage(scope.partialDataLayersArray);}});});};if(fitView){MapHelper.retrieveBounds(MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig,{geoOnly:true,skipExcludedFromRefit:true})).then(function(bounds){if(bounds&&bounds!==MapHelper.WORLD_BOUNDS){$timeout(function(){var before=scope.map.getBounds().toBBoxString();scope.map.fitBounds(bounds);var after=scope.map.getBounds().toBBoxString();if(before===after){refreshData(false,true);}},0);}else{renderData(locationChangedOnly);}});}else{renderData();}};scope.partialDataTooltipMessage=function(layerList){var layerCountLimit=5;if(layerList.length>layerCountLimit){var otherLayerCount=layerList.length-layerCountLimit;layerList.splice(0,layerCountLimit);var text=translatePlural(otherLayerCount,'... and {{ $count }} more layer','... and {{ $count }} more layers');layerList.push('<em>'+text+'</em>');}
return layerList.join("<br>");};scope.$on('mapRefresh',function(e,bounds){refreshData(false);});var initDrawingTools=function(){scope.map.on('draw:drawstart draw:editstart',function(){scope.map.isDrawing=true;});scope.map.on('draw:drawstop draw:editstop',function(){scope.map.isDrawing=false;});var setLayerInteractive=function(layer){layer._path.setAttribute('style','cursor: pointer; pointer-events: auto;');};var setLayerNonInteractive=function(layer){layer._path.setAttribute('style','cursor: auto; pointer-events: none;');};scope.map.on('draw:deletestart',function(){setLayerInteractive(scope.drawnItems.getLayers()[0]);});scope.map.on('draw:deleteend',function(){setLayerNonInteractive(scope.drawnItems.getLayers()[0]);});scope.map.on('draw:created',function(e){var layer=e.layer;if(scope.drawnItems.getLayers().length>0){scope.drawnItems.removeLayer(scope.drawnItems.getLayers()[0]);}
scope.drawnItems.addLayer(layer);applyDrawnLayer(layer,e.layerType);scope.$apply();});scope.map.on('draw:edited',function(e){var layer=e.layers.getLayers()[0];var type=getDrawnLayerType(layer);applyDrawnLayer(layer,type);scope.$apply();});scope.map.on('draw:deleted',function(){delete scope.mapConfig.drawnArea;scope.$apply();});var applyDrawnLayer=function(layer,type){if(type==='circle'){var distance=layer.getRadius();var center=layer.getLatLng();scope.mapConfig.drawnArea={'shape':'circle','coordinates':center.lat+','+center.lng+','+distance};}else{var geoJson=layer.toGeoJSON();var path=D4C.GeoFilter.getGeoJSONPolygonAsPolygonParameter(geoJson.geometry);scope.mapConfig.drawnArea={'shape':'polygon','coordinates':path};}};var getDrawnLayerType=function(layer){if(angular.isDefined(layer.getRadius)){return'circle';}else{return'polygon';}};var drawableStyle={color:'#2ca25f',fillOpacity:0.2,opacity:0.8,clickable:true};scope.$watch('mapConfig.drawnArea',function(nv){if(scope.drawnItems.getLayers().length>0){scope.drawnItems.removeLayer(scope.drawnItems.getLayers()[0]);}
var drawn;if(nv){if(nv.shape==='polygon'){var geojson=D4C.GeoFilter.getPolygonParameterAsGeoJSON(nv.coordinates);var coordinates=geojson.coordinates[0];coordinates.splice(geojson.coordinates[0].length-1,1);var i,coords,swap;for(i=0;i<coordinates.length;i++){coords=coordinates[i];swap=coords[0];coords[0]=coords[1];coords[1]=swap;}
if(coordinates.length===4&&coordinates[0][0]===coordinates[3][0]&&coordinates[1][0]===coordinates[2][0]&&coordinates[0][1]===coordinates[1][1]&&coordinates[2][1]===coordinates[3][1]){drawn=new L.Rectangle(coordinates,drawableStyle);}else{drawn=new L.Polygon(coordinates,drawableStyle);}}else if(nv.shape==='circle'){var parts=nv.coordinates.split(',');var lat=parts[0],lng=parts[1],radius=parts[2]||0;drawn=new L.Circle([lat,lng],radius,drawableStyle);}
if(drawn){scope.drawnItems.addLayer(drawn);setLayerNonInteractive(scope.drawnItems.getLayers()[0]);}}
angular.forEach(MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig,{geoOnly:true}),function(ctx){if(nv){if(nv.shape==='circle'){ctx.parameters['geofilter.distance']=nv.coordinates;delete ctx.parameters['geofilter.polygon'];}else if(nv.shape==='polygon'){ctx.parameters['geofilter.polygon']=nv.coordinates;delete ctx.parameters['geofilter.distance'];}}else{delete ctx.parameters['geofilter.polygon'];delete ctx.parameters['geofilter.distance'];}});},true);};});function waitForVisibleContexts(){var deferred=$q.defer();var contexts=MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig);var promises=contexts.map(function(context){return context.wait();});var resolvedPromises=function(promises){$q.all(promises).then(function(){syncGeofilterToDrawing();deferred.resolve();}).catch(function(){promises=promises.filter(function(promise){return promise.$$state.status!==2;});resolvedPromises(promises);});};resolvedPromises(promises);return deferred.promise;}
var syncGeofilterToDrawing=function(){var polygon,distance;angular.forEach(MapHelper.MapConfiguration.getActiveContextList(scope.mapConfig,{geoOnly:true}),function(context){if(angular.isUndefined(polygon)&&angular.isUndefined(polygon)){polygon=context.parameters['geofilter.polygon'];distance=context.parameters['geofilter.distance'];}else{if(polygon!==context.parameters['geofilter.polygon']){polygon=null;}
if(distance!==context.parameters['geofilter.distance']){distance=null;}}});if(polygon){scope.mapConfig.drawnArea={shape:'polygon',coordinates:polygon};}else if(distance){scope.mapConfig.drawnArea={shape:'circle',coordinates:distance};}else{scope.mapConfig.drawnArea={};}};},controller:['$scope',function($scope){if(angular.isUndefined($scope.mapConfig)){$scope.mapConfig={singleLayer:false,layerSelection:false,'groups':[]};}else{$scope.mapConfig.groups.forEach(function(group){group.layers.forEach(function(layer){layer.context.wait().then(function(){MapHelper.MapConfiguration.setLayerDisplaySettingsFromDefault(layer);});});});}
window.mapConfig=$scope.mapConfig;this.registerLayer=function(layer){var group=MapHelper.MapConfiguration.createLayerGroupConfiguration();group.layers.push(layer);$scope.mapConfig.groups.push(group);return group;};this.registerLayerGroup=function(layer){$scope.mapConfig.groups.push(layer);};this.getCurrentPosition=function(){return $scope.mapContext.location;};this.moveMap=function(coords,zoom){$scope.map.setView(coords,zoom);};this.getMap=function(obj){return $scope.map;};this.fitMapToShape=function(geoJson){var layer=L.geoJson(geoJson);$scope.map.fitBounds(layer.getBounds());};this.resetMapDataFilter=function(){var contexts=MapHelper.MapConfiguration.getContextList($scope.mapConfig);contexts.forEach(function(ctx){delete ctx.parameters['q.mapfilter'];});if(resetCallback){resetCallback();}};this.applyMapDataFilter=function(userQuery){var contexts=MapHelper.MapConfiguration.getContextList($scope.mapConfig);contexts.forEach(function(ctx){ctx.parameters['q.mapfilter']=userQuery;});};this.getActiveContexts=function(){return MapHelper.MapConfiguration.getActiveContextList($scope.mapConfig);};var resetCallback;this.registerResetCallback=function(callback){resetCallback=callback;};this.resizeMapDisplayControl=function(){$timeout(function(){var $mapElement=$('.d4cwidget-map');var $legendElement=$('.d4cwidget-map-legend');var $mapDisplayControlElement=$('.d4cwidget-map-display-control__groups');if($mapDisplayControlElement.length===1){$mapDisplayControlElement=$mapDisplayControlElement.first();if($legendElement.length>0){$legendElement=$legendElement.first();$mapDisplayControlElement.css('max-height','calc('+$mapElement.outerHeight()+'px - 2*10px - 26px - '+$legendElement.outerHeight()+'px)');}else{$mapDisplayControlElement.css('max-height','calc('+$mapElement.outerHeight()+'px - 10px - 26px)');}}});};var that=this;$scope.$watch(function(){var contexts=MapHelper.MapConfiguration.getContextList($scope.mapConfig);return contexts.reduce(function(empty,context){return empty&&!context.parameters['q.mapfilter'];},true);},function(nv,ov){if(nv&&!ov&&resetCallback){resetCallback();}},true);}]};}]);mod.directive('d4cMapLayerGroup',['MapHelper',function(MapHelper){return{restrict:'EA',scope:{"title":"@","description":"@","pictoColor":"@","pictoIcon":"@","displayed":"=?"},require:'^d4cMap',link:function(scope,element,attrs,mapCtrl){mapCtrl.registerLayerGroup(scope.group);},controller:['$scope',function($scope){$scope.group=MapHelper.MapConfiguration.createLayerGroupConfiguration();if(!angular.isDefined($scope.displayed)){$scope.displayed=true;}
angular.extend($scope.group,{"title":$scope.title,"description":$scope.description,"pictoColor":$scope.pictoColor,"pictoIcon":$scope.pictoIcon,"displayed":$scope.displayed});this.registerLayer=function(obj){$scope.group.layers.push(obj);return $scope.group;};}]};}]);mod.directive('d4cMapLayer',['MapHelper',function(MapHelper){return{restrict:'EA',scope:{context:'=',showIf:'=',showZoomMin:'@',showZoomMax:'@',color:'@',borderColor:'@',borderSize:'@',borderPattern:'@',borderOpacity:'@',opacity:'@',shapeOpacity:'@',pointOpacity:'@',lineWidth:'@',colorScale:'@',colorRanges:'@',colorCategories:'=',colorCategoriesOther:'@',colorNumericRanges:'=',colorNumericRangeMin:'=',colorGradient:'=',colorByField:'@',colorFunction:'@',radius:'@',size:'@',sizeMin:'@',sizeMax:'@',sizeFunction:'@',picto:'@',showMarker:'@',display:'@','function':'@',expression:'@',tooltipSort:'@',tooltipDisabled:'@?',hoverField:'@',refineOnClickContext:'=',joinContext:'=',localKey:'@',remoteKey:'@',caption:'=?',captionTitle:'@',captionPictoColor:"@",captionPictoIcon:"@",title:'@',description:'@',geoField:'@',excludeFromRefit:'=?',},template:function(tElement){var tpl='';tElement.contents().wrapAll('<div>');if(tElement.contents().length>0&&tElement.contents().html().trim().length>0){tElement.contents().wrapAll('<div>');tpl=tElement.children().html();}
return'<div tooltiptemplate="'+tpl.replace(/"/g,'&quot;')+'"></div>';},require:['?^d4cMapLayerGroup','^d4cMap'],link:function(scope,element,attrs,controllers){var layerGroupCtrl=controllers[0],mapCtrl=controllers[1];var tplHolder=angular.element(element.children()[0]);var customTemplate=tplHolder.attr('tooltiptemplate');var tooltipDisabled=angular.isDefined(scope.tooltipDisabled)&&scope.tooltipDisabled.toLowerCase()!=='false';var color;if(scope.color){color=scope.color;}else if(scope.colorScale){color={type:'scale',scale:scope.colorScale};}else if(scope.colorRanges){var tokens=scope.colorRanges.split(';');var ranges=tokens.filter(function(elt,idx){return idx%2===1;});var colors=tokens.filter(function(elt,idx){return idx%2===0;});color={type:'range',ranges:ranges,colors:colors,field:scope.colorByField};}else if(scope.colorCategories){if(!scope.colorByField){console.error('d4cMapLayer: using colorCategories requires specifying a field to use, using colorByField');}
color={type:'categories',field:scope.colorByField,categories:scope.colorCategories};if(scope.colorCategoriesOther){color.otherCategories=scope.colorCategoriesOther;}}else if(scope.colorGradient){color={type:'gradient',steps:scope.colorGradient};}else if(scope.colorNumericRanges){if(!scope.colorByField&&!scope['function']){console.error('d4cMapLayer: using colorNumericRanges requires specifying either a field to use (using colorByField) or a function');}
color={type:'choropleth',field:scope.colorByField,ranges:scope.colorNumericRanges};if(scope.colorNumericRangeMin){color.minValue=scope.colorNumericRangeMin;}}else if(scope.colorByField){color={type:'field',field:scope.colorByField,};}
var config={'color':color,'colorFunction':scope.colorFunction,'borderColor':scope.borderColor,'borderSize':scope.borderSize,'borderPattern':scope.borderPattern,'borderOpacity':scope.borderOpacity,'shapeOpacity':angular.isDefined(scope.shapeOpacity)&&scope.shapeOpacity||scope.opacity,'pointOpacity':angular.isDefined(scope.pointOpacity)&&scope.pointOpacity||scope.opacity,'lineWidth':scope.lineWidth,'picto':scope.picto,'display':scope.display,'function':scope['function'],'expression':scope.expression,'localKey':scope.localKey,'remoteKey':scope.remoteKey,'tooltipSort':scope.tooltipSort,'hoverField':scope.hoverField,'excludeFromRefit':scope.excludeFromRefit,'caption':!!scope.caption,'captionTitle':scope.captionTitle,'captionPictoIcon':scope.captionPictoIcon,'captionPictoColor':scope.captionPictoColor,'title':scope.title,'description':scope.description,'showZoomMin':scope.showZoomMin,'showZoomMax':scope.showZoomMax,'radius':scope.radius,'size':scope.size,'minSize':scope.sizeMin,'maxSize':scope.sizeMax,'sizeFunction':scope.sizeFunction,'geoField':scope.geoField,'tooltipDisabled':tooltipDisabled,};var layer=MapHelper.MapConfiguration.createLayerConfiguration(customTemplate,config);var layerGroup;if(layerGroupCtrl){layerGroup=layerGroupCtrl.registerLayer(layer);}else{layerGroup=mapCtrl.registerLayer(layer);}
if(attrs.showIf){scope.$watch('showIf',function(nv,ov){layerGroup.displayed=nv;});}
var unwatch=scope.$watch('context',function(nv){if(nv){layer.context=nv;nv.wait().then(function(){if(scope.showMarker){layer.marker=(scope.showMarker.toLowerCase()==='true');}
if(!angular.isDefined(scope.tooltipDisabled)){layer.tooltipDisabled=Boolean(scope.context.dataset.extra_metas.visualization.map_tooltip_disabled);}
MapHelper.MapConfiguration.setLayerDisplaySettingsFromDefault(layer);});unwatch();}});var unwatchJoinContext=scope.$watch('joinContext',function(nv){if(nv){layer.joinContext=nv;unwatchJoinContext();}});var unwatchRefineOnClick=scope.$watch('refineOnClickContext',function(nv){if(angular.isArray(nv)){var allDefined=true;angular.forEach(nv,function(ctx){allDefined=allDefined&&angular.isDefined(ctx);});if(!allDefined){return;}}else if(!nv){return;}
layer.refineOnClick=[];var contexts=angular.isArray(nv)&&nv||[nv];angular.forEach(contexts,function(ctx){var replaceRefine=false;var attrname='refineOnClick'+D4C.StringUtils.capitalize(ctx.name);if(angular.isDefined(attrs[attrname+'ReplaceRefine'])){if(attrs[attrname+'ReplaceRefine']!=='false'){replaceRefine=true;}}else if(angular.isDefined(attrs.refineOnClickReplaceRefine)){if(attrs.refineOnClickReplaceRefine!=='false'){replaceRefine=true;}}
layer.refineOnClick.push({context:ctx,mapField:attrs[attrname+'MapField']||attrs.refineOnClickMapField,contextField:attrs[attrname+'ContextField']||attrs.refineOnClickContextField,replaceRefine:replaceRefine});unwatchRefineOnClick();});});},controller:['$scope',function($scope){}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cFilterSummary',['d4cTimerangeParser','d4cTimescaleParser','d4cTimeboundParser','ValueDisplay','QueryParameters',function(d4cTimerangeParser,d4cTimescaleParser,d4cTimeboundParser,ValueDisplay,QueryParameters){return{restrict:'E',replace:true,template:''+'<ul class="d4cwidget d4cwidget-filter-summary">'+'    <li class="d4cwidget-filter-summary__active-filter" '+'        ng-repeat="refinement in refinements">'+'        <a class="d4cwidget-filter-summary__active-filter-link" '+'           ng-click="removeRefinement(refinement)">'+'            <span class="d4cwidget-filter-summary__active-filter-label">{{ refinement.label }}<span ng-if="refinement.contextsLabel && !hideContextsLabels"> ({{ refinement.contextsLabel }})</span></span>'+'            <span ng-if="!refinement.displayValue.type" '+'                  class="d4cwidget-filter-summary__active-filter-value"'+'                  ng-bind-html="refinement.displayValue"></span> '+'            <span ng-if="refinement.displayValue.type === \'visualization\'" '+'                  class="d4cwidget-filter-summary__active-filter-value" '+'                  ng-bind-html="refinement.displayValue.value"></span>'+'        </a>'+'    </li>'+'    <li class="d4cwidget-filter-summary__clear-all" ng-show="clearAllButton && refinements.length > 0">'+'        <d4c-clear-all-filters context="context" except="excludes"></d4c-clear-all-filters>'+'    </li>'+'</ul>',scope:{context:'=',exclude:'@',clearAllButton:'=?',hideContextsLabels:'=?'},controller:['$scope','$attrs','$filter','translate',function($scope,$attrs,$filter,translate){var timeParameters=['timerange','from_date','to_date'];if(Boolean($scope.clearAllButton)!==$scope.clearAllButton){$scope.clearAllButton=true;}
$scope.excludes=$scope.exclude?$scope.exclude.split(','):[];var isParameterActive=function(context,parameterName){return context&&context.parameters&&$scope.excludes.indexOf(parameterName)===-1&&context.parameters[parameterName]&&context.parameters[parameterName]!==undefined;};var getFacetGroupLabel=function(context,facetGroupName){if(context.type==='catalog'){if(facetGroupName==='features'){facetGroupName='view';}
return translate(D4C.StringUtils.capitalize(facetGroupName));}else{return context.dataset.getFieldLabel(facetGroupName);}};var getFirstGeoFieldLabel=function(context){for(var i=0;i<context.dataset.fields.length;i++){var field=context.dataset.fields[i];if(field.type==='geo_point_2d'||field.type==='geo_shape'){return field.label;}}
return'';};$scope.removeRefinement=function(refinement){angular.forEach(refinement.contexts,function(context){if(!refinement.value){delete context.parameters[refinement.parameter];}else{var valueList=context.parameters[refinement.parameter];if(!angular.isArray(valueList)){valueList=[valueList];}
for(var i=0;i<valueList.length;i++){if(valueList[i]===refinement.value){valueList.splice(i,1);if(valueList.length===0){delete context.parameters[refinement.parameter];}
return;}}}});};var refreshRefinements=function(contexts){var refinements=[];var addRefinement=function(context,label,value,parameter,displayValue){if(typeof displayValue==="undefined"){displayValue=D4C.StringUtils.escapeHTML(value);}
var inserted=false;angular.forEach(refinements,function(refinement){if(refinement.parameter===parameter&&refinement.label===label&&refinement.value===value){refinement.contexts.push(context);inserted=true;}});if(!inserted){refinements.push({label:label,value:value,displayValue:displayValue,parameter:parameter,contexts:[context]});}};var addTimeRefinement=function(context,parameter){var fromLabel='From';var toLabel='To';var getTimeLabels=function(timeField){if(document.querySelectorAll('[time-field="'+timeField.name+'"]').length>0){var timeWidgets=document.querySelectorAll('[time-field="'+timeField.name+'"]');var timerangeFound=false;angular.forEach(timeWidgets,function(timeWidget){if(!timerangeFound){if($(timeWidget).is('.d4cwidget-timerange')){timerangeFound=true;if(!angular.isUndefined($(timeWidget).attr('label-from'))){fromLabel=$(timeWidget).attr('label-from');}
if(!angular.isUndefined($(timeWidget).attr('label-to'))){toLabel=$(timeWidget).attr('label-to');}}}});}};var timeField;if(parameter.indexOf('.timerange')!==-1){var timerange=d4cTimerangeParser(context.parameters[parameter]);timeField=context.dataset.getField(timerange.field);getTimeLabels(timeField);var timerangeDisplayValue=translate(fromLabel+' {fromDate} '+' '+toLabel+' {toDate}');timerangeDisplayValue=format_string(timerangeDisplayValue,{fromDate:moment(timerange.from).format('LL'),toDate:moment(timerange.to).format('LL')});addRefinement(context,timeField.label,context.parameters[parameter],parameter,timerangeDisplayValue);}else if(parameter.indexOf('.from_date')!==-1){var fromDate=d4cTimeboundParser(context.parameters[parameter]);timeField=context.dataset.getField(fromDate.field);getTimeLabels(timeField);var fromDateDisplayValue=translate(fromLabel+' {fromDate}');fromDateDisplayValue=format_string(fromDateDisplayValue,{fromDate:moment(fromDate.date).format('LL')});addRefinement(context,timeField.label,context.parameters[parameter],parameter,fromDateDisplayValue);}else if(parameter.indexOf('.to_date')!==-1){var toDate=d4cTimeboundParser(context.parameters[parameter]);timeField=context.dataset.getField(toDate.field);getTimeLabels(timeField);var toDateDisplayValue=translate(toLabel+' {toDate}');toDateDisplayValue=format_string(toDateDisplayValue,{toDate:moment(toDate.date).format('LL')});addRefinement(context,timeField.label,context.parameters[parameter],parameter,toDateDisplayValue);}};angular.forEach(contexts,function(context){if(context&&context.parameters&&(context.type==='catalog'||context.dataset)){var isTimeQuery=false;if(isParameterActive(context,'q')){addRefinement(context,translate('Text search'),context.parameters['q'],'q');}
var drawnAreaParameters=['geofilter.distance','geofilter.polygon'];angular.forEach(drawnAreaParameters,function(parameter){if(isParameterActive(context,parameter)){addRefinement(context,getFirstGeoFieldLabel(context),context.parameters[parameter],parameter,translate('Drawn area on the map'));}});if(context.type==='catalog'&&isParameterActive(context,'q.geographic_area')){addRefinement(context,translate('Geographic area'),context.parameters['q.geographic_area'],'q.geographic_area',translate('Drawn area on the map'));}
if(isParameterActive(context,'q.timescale')){var timescale=d4cTimescaleParser(context.parameters['q.timescale']);addRefinement(context,context.dataset.getFieldLabel(timescale.field),context.parameters['q.timescale'],'q.timescale',timescale.scaleLabel);}
if(isParameterActive(context,'q.mapfilter')){addRefinement(context,translate('Map filter'),context.parameters['q.mapfilter'],'q.mapfilter');}
angular.forEach(context.parameters,function(value,parameter){var reservedQueryParameters=QueryParameters;var pattern=/q\.[^\s]*/;angular.forEach(timeParameters,function(timeParameter){if(parameter.indexOf(timeParameter)!==-1){isTimeQuery=true;}});var isTextQuery=(reservedQueryParameters.indexOf(parameter)===-1)&&parameter.match(pattern);if(!isTimeQuery&&isTextQuery&&isParameterActive(context,parameter)){addRefinement(context,translate('Text search'),value,parameter,D4C.StringUtils.escapeHTML(value));}else if(isTimeQuery&&isParameterActive(context,parameter)){addTimeRefinement(context,parameter);}});angular.forEach(context.parameters,function(values,parameter){if(parameter.substring(0,7)==='refine.'&&$scope.excludes.indexOf(parameter)===-1){var fieldName=parameter.substring(7);var label=getFacetGroupLabel(context,fieldName);if(!angular.isArray(values)){values=[values];}
angular.forEach(values,function(value){var displayValue;if(context.type==='catalog'&&fieldName==='language'){displayValue=ValueDisplay.format(value,'language');}else if(context.type==='catalog'&&fieldName==='features'){displayValue={};displayValue.type='visualization';displayValue.value=ValueDisplay.format(value,'visualization');}else{displayValue=D4C.StringUtils.escapeHTML(value);}
addRefinement(context,label,value,parameter,displayValue);});}});}});angular.forEach(refinements,function(refinement){if(refinement.contexts.length<contexts.length){refinement.contextsLabel=refinement.contexts.map(function(ctx){return $attrs[ctx.name+'Label']||ctx.name;}).join(', ');}});return refinements;};$scope.$watch('context',function(nv){$scope.refinements=refreshRefinements(angular.isArray(nv)?nv:[nv]);},true);}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMapDisplayControl',['translate',function(translate){return{restrict:'E',require:'^d4cMap',template:''+''+'<div class="d4cwidget d4cwidget-map-display-control"'+'     ng-class="{\'d4cwidget-map-display-control--expanded\': expanded}"  >'+'   <button class="d4cwidget-map-display-control__toggle"'+'           ng-if="expanded"'+'           d4c-tooltip="Collapse panel"'+'           translate="d4c-tooltip"'+'           d4c-tooltip-direction="left"'+'           ng-click="toggleDisplayControl()">'+'       <i class="fa fa-caret-right"></i>'+'   </button>'+'   <button class="d4cwidget-map-display-control__toggle"'+'           ng-if="!expanded"'+'           d4c-tooltip="Expand panel"'+'           translate="d4c-tooltip"'+'           d4c-tooltip-direction="left"'+'           ng-click="toggleDisplayControl()">'+'       <i class="fa fa-caret-left"></i>'+'   </button>'+'   <ul class="d4cwidget-map-display-control__groups">'+'       <li ng-repeat="group in mapConfig.groups" '+'           ng-click="mapConfig.groups.length > 1 && toggleGroup(group)" '+'           ng-class="{\'d4cwidget-map-display-control__group\': true, \'d4cwidget-map-display-control__group--disabled\': !group.displayed, \'d4cwidget-map-display-control__group--not-toggleable\': mapConfig.groups.length === 1}"'+'           ng-style="group.pictoColor && {\'border-left-color\':group.pictoColor} || group.layers.length === 1 && group.layers[0].captionPictoColor && {\'border-left-color\':group.layers[0].captionPictoColor}">'+'           <d4c-map-picto class="d4cwidget-map-display-control__picto"'+'                          ng-if="!group._hasUnknownDataset && (group.pictoIcon || (group.layers.length === 1 && group.layers[0].captionPictoIcon))"'+'                          name="{{ group.pictoIcon || group.layers[0].captionPictoIcon }}"'+'                          color="{{ group.pictoColor || group.layers[0].captionPictoColor }}">'+'           </d4c-map-picto>'+'           <i class="fa fa-exclamation-triangle d4cwidget-map-display-control__picto--error" '+'              ng-if="group._hasUnknownDataset"></i>'+'           <span class="d4cwidget-map-display-control__group-title" '+'                ng-class="{\'d4cwidget-map-display-control__group-title--error\' : group._hasUnknownDataset}"'+'                title="{{ getGroupTitle(group) }}" '+'                ng-bind="shortSummaryFilter(getGroupTitle(group), 50)"></span>'+'           <div class="d4cwidget-map-display-control__group-description"'+'                ng-class="{\'d4cwidget-map-display-control__group-description--error\' : group._hasUnknownDataset}"'+'                ng-if="getGroupDescription(group)" '+'                ng-bind-html="getGroupDescription(group)|prettyText|safenewlines"></div>'+'       </li>'+'   </ul>'+'</div>',scope:{mapConfig:'=',singleLayer:'='},link:function(scope,element,attrs,d4cMapCtrl){scope.resizeMapDisplayControl=d4cMapCtrl.resizeMapDisplayControl;},controller:['$scope','shortSummaryFilter',function($scope,shortSummaryFilter){$scope.expanded=true;$scope.$emit('toggleMapDisplayControl',{expanded:$scope.expanded});$scope.shortSummaryFilter=shortSummaryFilter;$scope.getGroupDescription=function(group){group._hasUnknownDataset=false;angular.forEach(group.layers,function(layer){if(layer.context.dataset===null&&layer.context.error){group._hasUnknownDataset=true;}});if(group._hasUnknownDataset&&group.layers.length===1){return translate('The dataset associated with this layer is unknown. Some data may not appear on the map.');}else if(group._hasUnknownDataset&&group.layers.length>1){return translate('One or more datasets associated with this group of layers are unknown. Some data may not appear on the map.');}else if(group.layers.length>1){return group.description;}else{return group.description||group.layers[0].description;}};$scope.getGroupTitle=function(group){return group.title||group.layers[0].title||group.layers[0].context.dataset.metas.title;};$scope.toggleDisplayControl=function(){$scope.expanded=!$scope.expanded;$scope.$emit('toggleMapDisplayControl',{expanded:$scope.expanded});};$scope.toggleGroup=function(group){if(!$scope.singleLayer){group.displayed=!group.displayed;}else{$scope.mapConfig.groups.forEach(function(group){group.displayed=false;});group.displayed=true;}
$scope.resizeMapDisplayControl();};$scope.$on('resizeMapDisplayControl',function(){$scope.resizeMapDisplayControl();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cCatalogContext',['D4CAPI','URLSynchronizer','$interpolate',function(D4CAPI,URLSynchronizer,$interpolate){return{restrict:'AE',scope:true,replace:true,controller:['$scope','$attrs',function($scope,$attrs){var contextNames=$attrs.context.split(',');for(var i=0;i<contextNames.length;i++){var contextName=contextNames[i].trim();var domain=$attrs[contextName+'Domain'];if(domain){domain=$interpolate(domain)($scope);}
var parameters=$scope.$eval($attrs[contextName+'Parameters'])||{};if($attrs[contextName+'Source']){parameters.source=$interpolate($attrs[contextName+'Source'])($scope);}
var apikey=$attrs[contextName+'Apikey'];if(apikey){apikey=$interpolate(apikey)($scope);}
$scope[contextName]={'name':contextName,'type':'catalog','domain':domain,'domainUrl':D4CAPI.getDomainURL(domain),'apikey':apikey,'parameters':parameters,'toggleRefine':function(facetName,path,replace){D4C.Context.toggleRefine(this,facetName,path,replace);},'getActiveFilters':function(excludes){excludes=excludes||[];if(this.parameters){var filters=Object.keys(this.parameters);var that=this;return filters.filter(function(filter){var queryPattern=/q\.[^\s]*/;return(filter=='q'&&that.parameters.q&&that.parameters.q.length>0)||filter=='q.timerange'||filter=='geofilter.polygon'||filter=='geofilter.distance'||filter.indexOf('refine.')===0||filter.match(queryPattern)||(filter=='q.geographic_area'&&that.parameters['q.geographic_area']&&that.parameters['q.geographic_area'].length>0);}).filter(function(filter){return excludes.indexOf(filter)===-1;});}else{return[];}},'clearActiveFilters':function(){var activeFilters=this.getActiveFilters();for(var i=0;i<activeFilters.length;i++){delete this.parameters[activeFilters[i]];}}};if($scope.$eval($attrs[contextName+'Urlsync'])){if(!angular.equals(parameters,{})){console.log('WARNING : Context '+contextName+' : There are specific parameters defined, but URL sync is enabled, so the parameters will be ignored.');}
URLSynchronizer.addSynchronizedObject($scope,contextName+'.parameters');}}}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('inject',function(){return{link:function($scope,$element,$attrs,controller,$transclude){var innerScope=$scope.$new();if(!$transclude){console.warn("inject directive used on an element with no transcluded directives",$element);return;}
$transclude(innerScope,function(clone){var testClone=clone.clone();testClone.contents().wrapAll('<div>');if(testClone.contents().length>0&&testClone.contents().html().trim().length>0){$element.empty();$element.append(clone);$element.on('$destroy',function(){innerScope.$destroy();});}});}};});mod.directive('d4cFullClick',function(){return{restrict:'A',link:function(scope,element,attrs){if(attrs.d4cFullClick){element.find('[d4c-main-click]').attr('href',attrs.d4cFullClick);}
element.click(function(evt){if(!$(evt.target).is('a,button,[ng-click]')&&($(evt.target).parents('a,button,[ng-click]').length===0)&&element.find('[d4c-main-click]').length){if(document.createEvent){var cloneEvent=document.createEvent('MouseEvents');var e=evt.originalEvent;cloneEvent.initMouseEvent(e.type,e.bubbles,e.cancelable,window,e.detail,e.screenX,e.screenY,e.clientX,e.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.button,e.relatedTarget);element.find('[d4c-main-click]')[0].dispatchEvent(cloneEvent);}else if(document.createEventObject){window.location=element.find('[d4c-main-click]')[0].href;}}});}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cResultEnumerator',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,transclude:true,scope:{context:'=',max:'@?',showHitsCounter:'@?',showPagination:'@?'},template:''+'<div class="d4cwidget d4cwidget-result-enumerator">'+'    <div d4c-results="items" d4c-results-context="context" d4c-results-max="{{maxHits}}" class="d4cwidget-result-enumerator__results">'+'        <div ng-if="loading"><d4c-spinner class="d4cwidget-spinner--large"></d4c-spinner></div>'+'        <div ng-if="!loading && !items.length" class="d4cwidget-result-enumerator__no-results-message" translate>No results</div>'+'        <div ng-if="!loading && items.length && hitsCounter" class="d4cwidget-result-enumerator__results-count">{{context.nhits}} <span translate>results</span></div>'+'        <div ng-repeat="item in items" inject class="d4cwidget-result-enumerator__item"></div>'+'    </div>'+'    <d4c-pagination-block ng-if="pagination" context="context" per-page="{{maxHits}}" container-identifier="{{localId}}"></d4c-pagination-block>'+'</div>',link:function(scope,element){scope.localId='d4cResultEnumerator-'+D4C.StringUtils.getRandomUUID();element.children()[0].id=scope.localId;},controller:['$scope',function($scope){$scope.maxHits=$scope.max||10;$scope.hitsCounter=(angular.isString($scope.showHitsCounter)&&$scope.showHitsCounter.toLowerCase()==='true');$scope.pagination=(angular.isString($scope.showPagination)&&$scope.showPagination.toLowerCase()==='true');}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var refineOnClickDirective=function(){return{restrict:'A',controller:function($scope,$element,$attrs){var refineConfigurations=[];this.refineOnRecord=function(record){angular.forEach(refineConfigurations,function(refineConf){refineConf.context.toggleRefine(refineConf.contextField,record.fields[refineConf.recordField],refineConf.replaceRefine);});};this.refineOnValue=function(value){angular.forEach(refineConfigurations,function(refineConf){refineConf.context.toggleRefine(refineConf.contextField,value,refineConf.replaceRefine);});};var unwatchRefineOnClick=$scope.$watch(function(){return $attrs.refineOnClickContext;},function(nv){var contextNames=nv.split(',');var contexts=[];var allContextDefined=true;angular.forEach(contextNames,function(contextName){var context=$scope[contextName];allContextDefined=allContextDefined&&angular.isDefined(context);contexts.push(context);});if(!allContextDefined){return;}
angular.forEach(contexts,function(context){var attributeName='refineOnClick'+D4C.StringUtils.capitalize(context.name);refineConfigurations.push({context:context,recordField:$attrs[attributeName+'RecordField']||$attrs['refineOnClickRecordField'],contextField:$attrs[attributeName+'ContextField']||$attrs['refineOnClickContextField'],replaceRefine:$attrs[attributeName+'ReplaceRefine']==='true'||$attrs['refineOnClickReplaceRefine']==='true'});unwatchRefineOnClick();});});}};};mod.directive('refineOnClick',refineOnClickDirective);mod.directive('refineOnClickContext',refineOnClickDirective);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cSearchbox',function(){return{restrict:'E',replace:true,template:''+'<div class="d4cwidget d4cwidget-searchbox">'+'<form method="GET" action="{{ actionUrl }}" ng-show="actionUrl">'+'<input class="d4cwidget-searchbox__box" name="q" type="text" placeholder="{{placeholder|translate}}">'+'</form>'+'</div>',scope:{placeholder:'@',context:'='},link:function(scope,element,attrs){if('autofocus'in attrs){$(element).find('input').focus();}},controller:['$scope','$sce',function($scope,$sce){$scope.actionUrl='/explore/';var unwatch=$scope.$watch('context',function(nv){if(nv){$scope.actionUrl=$sce.trustAsResourceUrl($scope.context.domainUrl+$scope.actionUrl);unwatch();}});}]};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cSocialButtons',['translate','$location','$window',function(translate,$location,$window){return{restrict:'E',scope:{buttons:'@?',title:'@?',url:'@?'},replace:true,template:''+'<div class="d4cwidget-social-buttons">'+'   <button ng-repeat-start="(name, button) in activeButtons"'+'           ng-hide="name === \'email\'"   '+'           type="button"'+'           class="d4cwidget-social-buttons__button"'+'           ng-click="openPopup(button)"'+'           aria-label="{{ button.aria }}">'+'       <i class="fa" '+'          ng-class="button.icon" '+'          aria-hidden="true"></i>'+'   </button>'+'   <a ng-repeat-end'+'      ng-show="name === \'email\'"'+'      class="d4cwidget-social-buttons__button"'+'      ng-href="{{ button.href }}" '+'      aria-label="{{ button.aria }}" >'+'       <i class="fa" '+'          ng-class="button.icon" '+'          aria-hidden="true"></i>'+'   </a> '+'</div>',link:function(scope){scope.openPopup=function(button){if(!button.popupWidth|| !button.popupHeight){return;}
var popupAttrs=format_string('menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height={height},width={width}',{width:button.popupWidth,height:button.popupHeight});$window.open(button.href,'',popupAttrs);};var buttons={twitter:{aria:translate('Share on Twitter'),hrefTemplate:'https://twitter.com/intent/tweet?text={title}&url={url}',icon:'fa-twitter',popupWidth:600,popupHeight:250},facebook:{aria:translate('Share on Facebook'),hrefTemplate:'https://www.facebook.com/sharer/sharer.php?u={url}',icon:'fa-facebook',popupWidth:600,popupHeight:600},linkedin:{aria:translate('Share on Linkedin'),hrefTemplate:'https://www.linkedin.com/shareArticle?url={url}&mini=true&title={title}&source={title}',icon:'fa-linkedin',popupWidth:600,popupHeight:600},email:{aria:translate('Share by email'),hrefTemplate:'mailto:?subject={title}&body={url}',icon:'fa-envelope'}};if(angular.isDefined(scope.buttons)){scope.activeButtons={};var names=D4C.ArrayUtils.fromCSVString(scope.buttons);angular.forEach(names,function(name){if(buttons[name]){scope.activeButtons[name]=buttons[name];}});}else{scope.activeButtons=buttons;}
var getAbsUrl=function(){return $window.encodeURIComponent(scope.url|| $location.absUrl());};var getTitle=function(){return $window.encodeURIComponent(scope.title||$window.document.title);};scope.$watch(getAbsUrl,function(url){angular.forEach(buttons,function(button){button.href=format_string(button.hrefTemplate,{url:url,title:getTitle()})});});}};}]);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cHubspotForm',function(){var alreadyCreated=[];return{restrict:'E',replace:true,template:'<div class="d4cwidget d4cwidget-hubspot-form" id="{{uniqueId}}"></div>',scope:{'portalId':'@','formId':'@'},link:function(scope,element,attrs){scope.uniqueId='hubspotform-'+Math.random().toString(36).substring(7);var onLoad=function(){if(alreadyCreated.indexOf(scope.uniqueId)===-1){alreadyCreated.push(scope.uniqueId);hbspt.forms.create({portalId:attrs.portalId,formId:attrs.formId,target:'#'+scope.uniqueId});}};if(angular.isUndefined(window.hbspt)){LazyLoad.js('//js.hsforms.net/forms/v2.js',onLoad);}else{onLoad();}}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cGauge',['$timeout',function($timeout){return{restrict:'E',replace:true,scope:{displayMode:'@',value:'=',max:'=?'},template:function(element,attrs){var displayMode=attrs.displayMode;if(['horizontal','bar'].indexOf(displayMode)==-1){displayMode='circle';}
var svg;if(displayMode=="bar"){svg=''+'<svg class="d4cwidget-gauge__svg">'+'    <line x1="0" y1="5px" x2="100%" y2="5px" class="d4cwidget-gauge__svg-background"/>'+'    <line x1="0" y1="5px" x2="100%" y2="5px" class="d4cwidget-gauge__svg-filler" />'+'</svg>';}else{svg=''+'<svg class="d4cwidget-gauge__svg" viewBox="0 0 100 100" >'+'    <circle cx="50" cy="50" r="45" '+'            class="d4cwidget-gauge__svg-background" '+'            vector-effect="non-scaling-stroke"/>'+'    <circle cx="50%" cy="50%" r="45%" '+'            class="d4cwidget-gauge__svg-filler"'+'            vector-effect="non-scaling-stroke"/> '+'</svg>';}
return''+'<div class="d4cwidget-gauge d4cwidget-gauge--'+displayMode+'">'+'    <div class="d4cwidget-gauge__value">{{ (value/max*100)|number:0 }}%</div>'+svg+'</div>';},link:function(scope,element){if(!angular.isDefined(scope.max)){scope.max=100;}
if(['circle','bar'].indexOf(scope.displayMode)==-1){scope.displayMode='circle';}
var fillerElement=element.find('.d4cwidget-gauge__svg-filler');var setupCircleChart=function(){var perimeter=Math.PI*element.width()*0.91;fillerElement.css({'stroke-dasharray':perimeter,'stroke-dashoffset':perimeter,'transition':'none'});$timeout(function(){fillerElement.css({'transition':'stroke-dashoffset 2.5s','stroke-dashoffset':perimeter*(1-scope.percentage/100)});});};var animateCircleChart=function(){$timeout(function(){var perimeter=Math.PI*element.width()*0.91;fillerElement.css({'stroke-dashoffset':perimeter*(1-scope.percentage/100)});});};var setupBarChart=function(){var length=element.width();fillerElement.css({'stroke-dasharray':length,'stroke-dashoffset':length,'transition':'none'});$timeout(function(){fillerElement.css({'transition':'stroke-dashoffset 2.5s','stroke-dashoffset':length*(1-scope.percentage/100)+'px'});});};var animateBarChart=function(){$timeout(function(){var length=element.width();fillerElement.css({'stroke-dashoffset':length*(1-scope.percentage/100)+'px'});});};var animationHelpers={'circle':{'setup':setupCircleChart,'animate':animateCircleChart},'bar':{'setup':setupBarChart,'animate':animateBarChart}};var updatePercentage=function(value){scope.percentage=value/scope.max*100;scope.percentage=Math.max(scope.percentage,0);scope.percentage=Math.min(scope.percentage,100);};updatePercentage(scope.value);animationHelpers[scope.displayMode].setup();scope.$watch('value',function(nv,ov){if(nv!=ov){updatePercentage(nv);animationHelpers[scope.displayMode].animate();}});$(window).on('resize',function(){animationHelpers[scope.displayMode].setup();});}};}]);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cFacetResults',['D4CAPI',function(D4CAPI){return{restrict:'A',scope:true,priority:1001,controller:['$scope','$attrs',function($scope,$attrs){$scope.$watch($attrs.d4cFacetResultsContext,function(nv){var query;var facetName=$attrs.d4cFacetResultsFacetName;var sort={};if($attrs.d4cFacetResultsSort){sort['facetsort.'+facetName]=$attrs.d4cFacetResultsSort;}
var options=angular.extend({},nv.parameters,{'rows':0,'facet':facetName},sort);var variable=$attrs.d4cFacetResults||'results';if(nv.type==='dataset'&&nv.dataset){query=D4CAPI.records.search(nv,options);}else if(nv.type==='catalog'){query=D4CAPI.datasets.search(nv,options);}else{return;}
query.success(function(data){if(data.facet_groups){var facetGroup=data.facet_groups.filter(function(g){return g.name===facetName;});if(facetGroup.length===0){$scope[variable]=[];}
$scope[variable]=facetGroup[0].facets;}else{$scope[variable]=[];}});},true);}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cPageRefresh',['$window','$interval',function($window,$interval){return{restrict:'AE',scope:{delay:'=',},link:function(scope,elem,$attrs){var delay=10000;var reloading=false;if(angular.isDefined($attrs['delay'])){if(!scope.delay||typeof scope.delay!=='number'||!isFinite(scope.delay)){console.warn('d4c-page-refresh: delay is not a valid integer: fallbacking to default value (10000ms)');}else if(scope.delay<10000){console.warn('d4c-page-refresh: delay is too small (10000ms minimum): fallbacking to default value (10000ms)');}else{delay=scope.delay;}}
$interval(function(){if(!reloading){reloading=true;$window.location.reload();}},delay);},};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cDatetime',function(){return{restrict:'A',controller:['$scope','$attrs','$q',function($scope,$attrs,$q){var variable=$attrs.d4cDatetime||'datetime';$scope.refreshDatetime=function(){$scope[variable]=moment().format();};$scope.refreshDatetime();}]};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cDatasetSchema',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,scope:{'context':'='},template:''+'<div class="d4cwidget-dataset-schema">'+'   <div class="d4cwidget-dataset-schema__field" '+'        ng-repeat="field in context.dataset.fields">'+'       <div class="d4cwidget-dataset-schema__field-label">{{ field.label }}</div>'+'       <div class="d4cwidget-dataset-schema__field-details">'+'           <div class="d4cwidget-dataset-schema__field-description-wrapper">'+'               <pre class="d4cwidget-dataset-schema__field-description"'+'                    ng-show="field.description">{{ field.description }}</pre>'+'               <p class="d4cwidget-dataset-schema__field-description d4cwidget-dataset-schema__field-description--empty"'+'                  ng-hide="field.description" translate>No description available for this field.</p>'+'           </div>'+'               <table class="d4cwidget-dataset-schema__field-properties">'+'                   <tr class="d4cwidget-dataset-schema__field-name">'+'                       <td class="d4cwidget-dataset-schema__field-properties-key">'+'                           <span translate>Name (identifier)</span>'+'                       </td>'+'                       <td class="d4cwidget-dataset-schema__field-properties-value">'+'                           <pre class="d4cwidget-dataset-schema__field-name-value">{{ field.name }}</pre>'+'                       </td>'+'                   </tr>'+'                   <tr class="d4cwidget-dataset-schema__field-type">'+'                       <td class="d4cwidget-dataset-schema__field-properties-key">'+'                           <span translate>Type</span>'+'                       </td>'+'                       <td class="d4cwidget-dataset-schema__field-properties-value">'+'                           <pre class="d4cwidget-dataset-schema__field-type-value">{{ field.type | translate }}</pre>'+'                       </td>'+'                   </tr>'+'                   <tr class="d4cwidget-dataset-schema__field-type"'+'                       ng-repeat="annotation in field.annotations|filter:{name: \'unit\'}:true">'+'                       <td class="d4cwidget-dataset-schema__field-properties-key">'+'                           <span translate>Unit</span>'+'                       </td>'+'                       <td class="d4cwidget-dataset-schema__field-properties-value">'+'                           <pre class="d4cwidget-dataset-schema__field-type-value">{{ annotation.args[0] }}</pre>'+'                       </td>'+'                   </tr>'+'                   <tr class="d4cwidget-dataset-schema__field-sample">'+'                       <td class="d4cwidget-dataset-schema__field-properties-key">'+'                           <span translate>Sample</span>'+'                       </td>'+'                       <td class="d4cwidget-dataset-schema__field-properties-value">'+'                           <pre class="d4cwidget-dataset-schema__field-sample-value">{{ sample.fields[field.name] }}</pre>'+'                       </td>'+'                   </tr>'+'               </table>'+'       </div>'+'   </div>'+'</div>',link:function(scope){scope.sample={};scope.context.wait().then(function(){var options={rows:1};if(scope.context.parameters.source){options.source=scope.context.parameters.source;}
if(scope.context.dataset.data_visible){D4CAPI.records.search(scope.context,options).success(function(data){scope.sample=data.records[0];});}});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive("d4cAnalyze",function(URLSynchronizer,$location,DebugLogger){return{restrict:'E',template:''+'<div class="records-analyze">'+'    <div ng-if="fakeMultiChartContext.datasets" no-controls="noControls" advanced-chart-controls chart-context="chartContext" context="fakeMultiChartContext" urlsynchronize></div>'+'    <div ng-if="fakeMultiChartContext.datasets" d4c-highcharts-chart colors="colors" context="fakeMultiChartContext" parameters="chartContext.dataChart"></div>'+'</div>',scope:{context:'=',autoResize:'@',noControls:'=?'},replace:true,controller:["$scope",function($scope){$scope.noControls=!!$scope.noControls;$scope.fakeMultiChartContext={datasets:false};$scope.chartContext={};$scope.context.wait().then(function(){$scope.fakeMultiChartContext.datasets={};$scope.fakeMultiChartContext.datasets[$scope.context.dataset.datasetid]=$scope.context;});}]};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var include_geojson_definitions=function(json_schema){var geojson_definitions={"geoJSON":{"title":"Geo JSON object","description":"Schema for a Geo JSON object","type":"object","required":["type"],"properties":{"crs":{"$ref":"#/definitions/crs"},"bbox":{"$ref":"#/definitions/bbox"}},"oneOf":[{"$ref":"#/definitions/geometry"},{"$ref":"#/definitions/geometryCollection"},{"$ref":"#/definitions/feature"},{"$ref":"#/definitions/featureCollection"}]},"bbox":{"description":"A bounding box as defined by GeoJSON","type":"array","items":{"type":"number"}},"crs":{"title":"crs","description":"a Coordinate Reference System object","type":["object","null"],"required":["type","properties"],"properties":{"type":{"type":"string"},"properties":{"type":"object"}},"additionalProperties":false,"oneOf":[{"$ref":"#/definitions/namedCrs"},{"$ref":"#/definitions/linkedCrs"}]},"namedCrs":{"properties":{"type":{"enum":["name"]},"properties":{"required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string"}}}}},"linkedObject":{"type":"object","required":["href"],"properties":{"href":{"type":"string","format":"uri"},"type":{"type":"string","description":"Suggested values: proj4, ogjwkt, esriwkt"}}},"linkedCrs":{"properties":{"type":{"enum":["link"]},"properties":{"$ref":"#/definitions/linkedObject"}}},"geometryCollection":{"title":"GeometryCollection","description":"A collection of geometry objects","required":["geometries"],"properties":{"type":{"enum":["GeometryCollection"]},"geometries":{"type":"array","items":{"$ref":"http://json-schema.org/geojson/geometry.json#"}}}},"feature":{"title":"Feature","description":"A Geo JSON feature object","required":["geometry","properties"],"properties":{"type":{"enum":["Feature"]},"geometry":{"oneOf":[{"type":"null"},{"$ref":"#/definitions/geometry"}]},"properties":{"type":["object","null"]},"id":{}}},"featureCollection":{"title":"FeatureCollection","description":"A Geo JSON feature collection","required":["features"],"properties":{"type":{"enum":["FeatureCollection"]},"features":{"type":"array","items":{"$ref":"#/definitions/feature"}}}},"geometry":{"title":"geometry","description":"One geometry as defined by GeoJSON","type":"object","required":["type","coordinates"],"oneOf":[{"title":"Point","properties":{"type":{"enum":["Point"]},"coordinates":{"$ref":"#/definitions/position"}}},{"title":"MultiPoint","properties":{"type":{"enum":["MultiPoint"]},"coordinates":{"$ref":"#/definitions/positionArray"}}},{"title":"LineString","properties":{"type":{"enum":["LineString"]},"coordinates":{"$ref":"#/definitions/lineString"}}},{"title":"MultiLineString","properties":{"type":{"enum":["MultiLineString"]},"coordinates":{"type":"array","items":{"$ref":"#/definitions/lineString"}}}},{"title":"Polygon","properties":{"type":{"enum":["Polygon"]},"coordinates":{"$ref":"#/definitions/polygon"}}},{"title":"MultiPolygon","properties":{"type":{"enum":["MultiPolygon"]},"coordinates":{"type":"array","items":{"$ref":"#/definitions/polygon"}}}}],"position":{"description":"A single position","type":"array","minItems":2,"items":[{"type":"number"},{"type":"number"}],"additionalItems":false},"positionArray":{"description":"An array of positions","type":"array","items":{"$ref":"#/definitions/position"}},"lineString":{"description":"An array of two or more positions","allOf":[{"$ref":"#/definitions/positionArray"},{"minItems":2}]},"linearRing":{"description":"An array of four positions where the first equals the last","allOf":[{"$ref":"#/definitions/positionArray"},{"minItems":4}]},"polygon":{"description":"An array of linear rings","type":"array","items":{"$ref":"#/definitions/linearRing"}}}};for(var def in geojson_definitions){if(geojson_definitions.hasOwnProperty(def)){json_schema.definitions[def]=geojson_definitions[def];}}};mod.directive('d4cDatasetJsonSchema',function(){return{restrict:'E',replace:true,scope:{'context':'='},template:''+'<div>'+'   <div contenteditable="true" '+'        d4c-json-formatter="json_schema"'+'        class="d4cwidget-dataset-json-schema"></div>'+'</div>',link:function(scope){scope.json_schema={};var build_json_schema=function(){var dataset=scope.context.dataset;var json_schema={title:dataset.datasetid,type:"object",oneOf:[{$ref:'#/definitions/'+dataset.datasetid}],definitions:{}};json_schema.definitions[dataset.datasetid]={properties:{records:{type:"array",items:{$ref:'#/definitions/'+dataset.datasetid+'_records'}}}};var fields={};var type_templates={text:{type:'string'},date:{type:'string',format:'date'},datetime:{type:'string',format:'date-time'},int:{type:'integer'},double:{type:'number'},geo_point_2d:{type:'array',minItems:2,maxItems:2,items:{type:'number'}},geo_shape:{type:'object',"oneOf":[{"$ref":"#/definitions/geometry"}]}};for(var i in dataset.fields){var field=dataset.fields[i];if(field.type in type_templates){fields[field.name]=angular.copy(type_templates[field.type]);}else{fields[field.name]={type:'string'};}
if(field.type==='geo_point_2d'||field.type==='geo_shape'){include_geojson_definitions(json_schema);}
fields[field.name].title=field.label;fields[field.name].description=field.description?field.description:'';angular.forEach(field.annotations,function(annotation){if(annotation.name==='unit'&&annotation.args&&annotation.args.length>0){fields[field.name].unit=annotation.args[0];}});}
json_schema.definitions[dataset.datasetid+'_records']={properties:{fields:{type:'object',properties:fields}}};return json_schema;};scope.context.wait().then(function(){scope.json_schema=build_json_schema();});}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMapTooltip',['$compile','$templateCache',function($compile,$templateCache){return{restrict:'E',transclude:true,template:''+'<div class="d4cwidget-map-tooltip">'+'   <d4c-spinner class="d4cwidget-map-tooltip__spinner" ng-hide="records.length > 0"></d4c-spinner>'+'   <div class="ng-leaflet-tooltip-cloak d4cwidget-map-tooltip__limited-results-warning" ng-show="records && records.length == RECORD_LIMIT" translate>(limited to the first {{RECORD_LIMIT}} records)</div>'+'   <div ng-repeat="record in records" ng-if="$index == selectedIndex" class="d4cwidget-map-tooltip__record">'+'       <div ng-if="!template" ng-include src="\'default-tooltip\'"></div>'+'       <div ng-if="template" ng-include src="\'custom-tooltip-\'+context.dataset.datasetid"></div>'+'   </div>'+'   <nav role="navigation" ng-show="records.length > 1" class="d4cwidget-map-tooltip__scroll-control ng-leaflet-tooltip-cloak">'+'       <button class="d4cwidget-map-tooltip__scroll-left" ng-click="moveIndex(-1)">'+'           <i class=" fa fa-chevron-left"  aria-hidden="true"></i>'+'       </button>'+'       <div class="d4cwidget-map-tooltip__scroll-amount" ng-bind="(selectedIndex+1)+\' / \'+records.length"></div>'+'       <button class="d4cwidget-map-tooltip__scroll-right" ng-click="moveIndex(1)">'+'          <i class="fa fa-chevron-right"></i>'+'       </button>'+'   </nav>'+'</div>',scope:{shape:'=',context:'=',recordid:'=',map:'=',template:'@',gridData:'=',geoDigest:'@',tooltipSort:'@'},replace:true,link:function(scope,element,attrs){scope.ctx=scope.context;var destroyPopup=function(e){if(e.popup._content===element[0]){if(scope.selectedShapeLayer){scope.map.removeLayer(scope.selectedShapeLayer);}
scope.map.off('popupclose',destroyPopup);scope.$destroy();}};scope.map.on('popupclose',destroyPopup);scope.unCloak=function(){jQuery('.ng-leaflet-tooltip-cloak',element).removeClass('ng-leaflet-tooltip-cloak');};if(attrs.template&&attrs.template!==''){$templateCache.put('custom-tooltip-'+scope.context.dataset.datasetid,attrs.template);}else{$templateCache.put('default-tooltip','<div class="infoPaneLayout">'+'<h2 class="d4cwidget-map-tooltip__header" ng-show="!!getTitle(record)">'+'   <span ng-bind="getTitle(record) | shortSummary: 100"></span> '+'</h2>'+'<dl class="d4cwidget-map-tooltip__record-values">'+'    <dt ng-repeat-start="field in context.dataset.fields|fieldsForVisualization:\'map\'|fieldsFilter:context.dataset.extra_metas.visualization.map_tooltip_fields" '+'        ng-show="record.fields[field.name]|isDefined"'+'        class="d4cwidget-map-tooltip__field-name">'+'        {{ field.label }}'+'    </dt>'+'    <dd ng-repeat-end '+'        ng-switch="field.type" '+'        ng-show="record.fields[field.name]|isDefined"'+'        class="d4cwidget-map-tooltip__field-value">'+'        <span ng-switch-when="geo_point_2d">'+'            <d4c-geotooltip width="300" height="300" coords="record.fields[field.name]">{{ record.fields|formatFieldValue:field:context }}</d4c-geotooltip>'+'        </span>'+'        <span ng-switch-when="geo_shape">'+'            <d4c-geotooltip width="300" height="300" geojson="record.fields[field.name]">{{ record.fields|formatFieldValue:field:context }}</d4c-geotooltip>'+'        </span>'+'        <span ng-switch-when="file">'+'            <div ng-if="!context.dataset.isFieldAnnotated(field, \'has_thumbnails\')" ng-bind-html="record.fields|formatFieldValue:field:context"></div>'+'            <div ng-if="context.dataset.isFieldAnnotated(field, \'has_thumbnails\')" ng-bind-html="record.fields[field.name]|displayImageValue:context.dataset.datasetid" style="text-align: center;"></div>'+'        </span>'+'        <span ng-switch-default title="{{record.fields|formatFieldValue:field:context}}" ng-bind-html="record.fields|formatFieldValue:field|imagify|videoify|prettyText|nofollow"></span>'+'    </dd>'+'</dl>'+'</div>');}},controller:['$scope','$filter','D4CAPI',function($scope,$filter,D4CAPI){$scope.RECORD_LIMIT=100;$scope.records=[];$scope.selectedIndex=0;var tooltipSort=$scope.tooltipSort;if(!tooltipSort&&$scope.context.dataset.getExtraMeta('visualization','map_tooltip_sort_field')){tooltipSort=($scope.context.dataset.getExtraMeta('visualization','map_tooltip_sort_direction')||'')+$scope.context.dataset.getExtraMeta('visualization','map_tooltip_sort_field');}
$scope.moveIndex=function(amount){var newIndex=($scope.selectedIndex+amount)%$scope.records.length;if(newIndex<0){newIndex=$scope.records.length+newIndex;}
$scope.selectedIndex=newIndex;};var refresh=function(){var options={format:'json',rows:$scope.RECORD_LIMIT};var shapeType=null;if($scope.shape){shapeType=$scope.shape.type;}
if($scope.recordid&&shapeType!=='Point'){options.q="recordid:'"+$scope.recordid+"'";}else if($scope.geoDigest){options.geo_digest=$scope.geoDigest;}else if($scope.gridData){if($scope.gridData['d4c:geo_grid']!==null){options.geo_grid=$scope.gridData['d4c:geo_grid'];}else{options.geo_digest=$scope.gridData['d4c:geo_digest'];}}else if($scope.shape){D4C.GeoFilter.addGeoFilterFromSpatialObject(options,$scope.shape);}
var queryOptions={};angular.extend(queryOptions,$scope.context.parameters,options);if(tooltipSort){queryOptions.sort=tooltipSort;D4CAPI.records.search($scope.context,queryOptions).success(function(data){handleResults(data.records);});}else{D4CAPI.records.download($scope.context,queryOptions).success(handleResults);}
function handleResults(data){if(data.length>0){$scope.selectedIndex=0;$scope.records=data;$scope.unCloak();var shapeFields=$scope.context.dataset.getFieldsForType('geo_shape');var shapeField;if(shapeFields.length){shapeField=shapeFields[0].name;}
if(shapeField&&$scope.gridData&&($scope.gridData['d4c:geo_type']==='Polygon'||$scope.gridData['d4c:geo_type']==='LineString'||$scope.gridData['d4c:geo_type']==='MultiPolygon'||$scope.gridData['d4c:geo_type']==='MultiLineString')){var record=data[0];if(record.fields[shapeField]){var geojson=record.fields[shapeField];if(geojson.type!=='Point'){$scope.selectedShapeLayer=L.geoJson(geojson,{fill:false,color:'#CC0000',opacity:1,dashArray:[5],weight:2});$scope.map.addLayer($scope.selectedShapeLayer);}}}}else{$scope.map.closePopup();}}};$scope.$watch('context.parameters',function(){refresh();},true);$scope.$apply();$scope.getTitle=function(record){if($scope.context.dataset.extra_metas&&$scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.map_tooltip_title){var titleField=$scope.context.dataset.extra_metas.visualization.map_tooltip_title;if(angular.isDefined(record.fields[titleField])&&record.fields[titleField]!==''){return record.fields[titleField];}}
return null;};$scope.fields=angular.copy($scope.context.dataset.fields);}]};}]);}());;(function(){'use strict';angular.module('d4c-widgets').directive('d4cGeotooltip',['$timeout','ModuleLazyLoader','D4CWidgetsConfig',function($timeout,ModuleLazyLoader,D4CWidgetsConfig){var container=angular.element('<div id="d4cwidget-geotooltip" class="d4cwidget" style="opacity: 0; transition: opacity 200ms ease-out; position: fixed; z-index: 40000; visibility: hidden;"></div>');var map=null,layerGroup=null;var displayTooltip=function(tippedElement,width,height,coords,geoJson,record){var resized=false,geoJsonLayer;if(width!==container.css('width')||height!==container.css('height')){resized=true;}
container.css('width',width);container.css('height',height);var availableBottomSpace=jQuery(window).height()-(tippedElement.offset().top-jQuery(document).scrollTop());if(container.height()<availableBottomSpace){container.css('top',tippedElement.height()+tippedElement.offset().top-jQuery(document).scrollTop()+5+'px');}else{container.css('top',tippedElement.offset().top-jQuery(document).scrollTop()-5-container.height()+'px');}
var availableRightSpace=jQuery(window).width()-(tippedElement.offset().left-jQuery(document).scrollLeft());if(container.width()<availableRightSpace){container.css('left',tippedElement.offset().left-jQuery(document).scrollLeft()+'px');}else{container.css('left',tippedElement.offset().left-jQuery(document).scrollLeft()-container.width()+'px');}
tippedElement.after(container);if(map===null){map=new L.D4CMap(container[0],{zoomControl:false,basemapsList:[D4CWidgetsConfig.basemaps[0]],maxZoom:16});}else if(resized){map.invalidateSize();}
if(layerGroup!==null){map.removeLayer(layerGroup);}
layerGroup=L.layerGroup();var bounds=new L.LatLngBounds();if(coords){if(angular.isString(coords)){coords=coords.split(',');}
var point=new L.LatLng(coords[0],coords[1]);var pointLayer=L.marker(point);layerGroup.addLayer(pointLayer);bounds.extend(point);}
if(geoJson){if(angular.isString(geoJson)){geoJson=angular.fromJson(geoJson);}
geoJsonLayer=L.geoJson(geoJson);layerGroup.addLayer(geoJsonLayer);bounds.extend(geoJsonLayer.getBounds());}
if(record&&angular.isDefined(record.geometry)){geoJsonLayer=L.geoJson(record.geometry);layerGroup.addLayer(geoJsonLayer);bounds.extend(geoJsonLayer.getBounds());}
layerGroup.addTo(map);map.fitBounds(bounds,{reset:true});container.css('opacity','1');container.css('visibility','visible');};var hideTooltip=function(){container.css('opacity','0');$timeout(function(){container.css('visibility','hidden');},200);};return{template:'<span ng-transclude style="border-bottom: 1px dotted #000000; cursor: help;" class="geotooltip"></span>',replace:true,restrict:'E',transclude:true,scope:{'coords':'=','width':'@','height':'@','delay':'@','geojson':'=','record':'='},link:function(scope,element,attrs){ModuleLazyLoader('leaflet').then(function(){var tooltipWidth=(attrs.width||200)+'px';var tooltipHeight=(attrs.height||200)+'px';var tooltipPop=null;var delay=attrs.delay||500;element.bind('mouseenter',function(){if(delay===0){displayTooltip(element,tooltipWidth,tooltipHeight,scope.coords,scope.geojson,scope.record);}else{tooltipPop=$timeout(function(){displayTooltip(element,tooltipWidth,tooltipHeight,scope.coords,scope.geojson,scope.record);tooltipPop=null;},delay);}});element.bind('click',function(){displayTooltip(element,tooltipWidth,tooltipHeight,scope.coords,scope.geojson,scope.record);if(tooltipPop!==null){$timeout.cancel(tooltipPop);tooltipPop=null;}});element.bind('mouseleave',function(){hideTooltip();if(tooltipPop!==null){$timeout.cancel(tooltipPop);tooltipPop=null;}});});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTagCloud',['D4CAPI','$location',function(D4CAPI,$location){function median(facets){var half=Math.floor(facets.length/2);if(facets.length%2)return facets[half].count;else return(facets[half-1].count+facets[half].count)/2.0;}
function aggregateArrays(facets,median){var array1=$.grep(facets,function(value){return value.count>=median;});var array2=$.grep(facets,function(value){return value.count<=median;});var obj=[{count:array1.length,min:array1[array1.length-1].count,max:array1[0].count},{count:array2.length,min:array2[array2.length-1].count,max:array2[0].count}];obj[0].delta=obj[0].max-obj[0].min;obj[1].delta=obj[1].max-obj[1].min;return obj;}
function getFacet(facet,median,aggregateArrays,domainUrl){var delta=(facet.count>=median?aggregateArrays[0].delta:aggregateArrays[1].delta)/2;var weight;if(facet.count>=2*delta){weight=1;}else if(facet.count>=delta&&facet.count<2*delta){weight=2;}else{weight=3;}
weight=facet.count>=median?weight:weight+3;facet={count:facet.count,name:facet.name,opacity:((((7-weight)+4)/10)+0.05).toFixed(2),size:((7-weight)/3).toFixed(1),weight:weight};facet.size=weight!==6?facet.size:parseFloat(facet.size)+0.3;return facet;}
function isContextRefined(context,facetName,tagName){var refines=context.parameters['refine.'+facetName];return(angular.isDefined(refines)&&(angular.isArray(refines)&&refines.indexOf(tagName)>-1||refines===tagName));}
function shuffle(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}
return array;}
return{restrict:'E',replace:true,template:''+'<div class="d4cwidget d4cwidget-tag-cloud">'+'    <ul class="d4cwidget-tag-cloud__tag-list">'+'        <li class="d4cwidget-tag-cloud__no-data-label" ng-hide="tags" translate>No data available yet</li>'+'        <li ng-repeat="tag in tags" '+'            class="d4cwidget-tag-cloud__tag" '+'            ng-class="{\'d4cwidget-tag-cloud__tag--selected\': tag.selected}"'+'            ng-style="{\'font-size\': tag.size + \'em\', \'opacity\': tag.opacity}">'+'            <a ng-click="refine(tag.name)" href="">'+'                {{ tag.name }}'+'            </a>'+'        </li>'+'    </ul>'+'</div>',scope:{context:'=',facetName:'@',max:'@?',redirectTo:'@?',contextToRefine:'=?'},controller:['$scope',function($scope){$scope.refine=function(tagName){if($scope.redirectTo){var refine_param='refine.'+$scope.facetName+'='+tagName;var join=$scope.redirectTo.indexOf('?')>-1?'&':'?';window.location=$scope.redirectTo+join+refine_param;}else if($scope.contextToRefine){$scope.contextToRefine.toggleRefine($scope.facetName,tagName);}else{$scope.context.toggleRefine($scope.facetName,tagName);}};var refresh=function(){var query;var queryParams={'rows':0,'facet':$scope.facetName};if($scope.context.type==='catalog'){query=D4CAPI.datasets.search($scope.context,queryParams);}else{queryParams=$.extend({},$scope.context.parameters,queryParams);query=D4CAPI.records.search($scope.context,queryParams);}
query.success(function(data){if(data.facet_groups){$scope.tags=data.facet_groups[0].facets;if($scope.max){$scope.tags=$scope.tags.slice(0,$scope.max);}
var m=median($scope.tags);for(var i=0;i<$scope.tags.length;i++){$scope.tags[i]=getFacet($scope.tags[i],m,aggregateArrays($scope.tags,m),$scope.context.domainUrl);$scope.tags[i].selected=isContextRefined($scope.contextToRefine?$scope.contextToRefine:$scope.context,$scope.facetName,$scope.tags[i].name);}
$scope.tags=shuffle($scope.tags);}});};$scope.$watch('context',function(nv,ov){if($scope.context.type==='catalog'||$scope.context.type==='dataset'&&$scope.context.dataset){refresh();}},true);}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cPicto',['SVGInliner','$http','$document',function(SVGInliner,$http,$document){return{restrict:'E',replace:true,scope:{url:'=',color:'=',classes:'='},template:'<div class="d4cwidget d4cwidget-picto {{ classes }}"></div>',link:function(scope,element){var svgContainer;scope.$watch('[url, color]',function(nv){if(nv[0]){if(Modernizr&&!Modernizr.svg){return;}
if(svgContainer){element.empty();}
svgContainer=SVGInliner.getElement(scope.url,scope.color);if(!scope.color){svgContainer.addClass('d4c-svginliner__svg-container--colorless');}
element.append(svgContainer);}},true);}};}]);mod.directive('d4cThemePicto',['D4CWidgetsConfig','$compile',function(D4CWidgetsConfig,$compile){return{restrict:'E',replace:true,scope:{theme:'@'},template:'',link:function(scope,element){scope.originalClasses=element.attr('class').replace('ng-isolate-scope','').trim();var template='<d4c-picto url="themeConfig.url" aria-label="Theme of this dataset: {{ theme|firstValue }}" translate="aria-label" color="themeConfig.color" classes="originalClasses + \' d4cwidget-theme-picto theme-\' + (getTheme()|themeSlug) "></d4c-picto>';var themeConfig=null;var defaultPicto=false;if(D4CWidgetsConfig.themes[scope.theme]&&D4CWidgetsConfig.themes[scope.theme].url){scope.themeConfig=D4CWidgetsConfig.themes[scope.theme];}else{scope.themeConfig=D4CWidgetsConfig.themes['default'];defaultPicto=true;}
scope.getTheme=function(){if(defaultPicto){return'default';}else{return scope.theme;}};if(scope.themeConfig){element.replaceWith(angular.element($compile(template)(scope)));}}};}]);mod.directive('d4cMapPicto',['D4CWidgetsConfig','PictoHelper','$compile',function(D4CWidgetsConfig,PictoHelper,$compile){return{restrict:'E',replace:true,scope:{name:'@',color:'@'},template:'',link:function(scope,element){scope.originalClasses=element.attr('class').replace('ng-isolate-scope','').trim();var template='<d4c-picto url="pictoUrl" color="color" classes="originalClasses + \' d4cwidget-map-picto\'"></d4c-picto>';scope.$watch('[name, color]',function(){scope.pictoUrl=PictoHelper.mapPictoToURL(scope.name);if(scope.pictoUrl){element.replaceWith(angular.element($compile(template)(scope)));}},true);}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cRecordImage',function(){return{restrict:'E',replace:true,template:''+'<div class="d4cwidget d4cwidget-record-image">'+'   <img class="d4cwidget-record-image__image" ng-style="{ \'background-image\': prefetchBackground}" ng-if="imageUrl" ng-src="{{ imageUrl }}">'+'   <div class="d4cwidget-record-image__image d4cwidget-record-image__image--placeholder" ng-if="placeholder">'+'</div>',scope:{record:'=',field:'@',domainUrl:'@?'},link:function(scope){scope.imageUrl=null;var render=function(){var image=scope.record.fields[scope.field];if(image.url){scope.imageUrl=image.url;scope.placeholder=false;}else if(image.placeholder){scope.imageUrl=null;scope.placeholder=true;}else{scope.imageUrl=D4C.Record.getImageUrl(scope.record,scope.field,scope.domainUrl);scope.placeholder=false;}
if(image.color_summary){scope.prefetchBackground="linear-gradient(to bottom, "+image.color_summary.join(",")+")";}};scope.$watch('[record, field]',function(nv,ov){render();},true);}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMediaGallery',['$timeout','$q','D4CAPI',function($timeout,$q,D4CAPI){var detailsTemplate,defaultDetailsTemplate=""+'<div>'+'<div class="d4c-media-gallery__tooltip__image-container" width="{{ image.realwidth }}px" height="{{ image.realheight }}px">'+'   <img class="d4c-media-gallery__tooltip__image" ng-src="{{ image.thumbnail_url }}">'+'</div>'+'<div class="d4c-media-gallery__tooltip__fields">'+'<h2 ng-if="getRecordTitle(record)">'+'   {{ getRecordTitle(record) }}'+'</h2>'+'<dl>'+'   <dt ng-repeat-start="field in displayedFields"'+'           ng-show="record.fields[field.name]|isDefined"'+'           class="d4c-dataset-images__infopane-field-name">'+'       {{ field.label }}'+'   </dt>'+'   <dd ng-repeat-end ng-switch="field.type"'+'           ng-show="record.fields[field.name]|isDefined">'+'       <span ng-switch-when="geo_point_2d">'+'           <d4c-geotooltip width="300" height="300"'+'                   coords="record.fields[field.name]">{{ record.fields|formatFieldValue:field:context }}</d4c-geotooltip>'+'       </span>'+'       <span ng-switch-when="geo_shape">'+'            <d4c-geotooltip width="300" height="300"'+'                   geojson="record.fields[field.name]">{{ record.fields|formatFieldValue:field:context }}</d4c-geotooltip>'+'        </span>'+'        <span ng-switch-when="double">{{ record.fields|formatFieldValue:field:context }}</span>'+'        <span ng-switch-when="int">{{ record.fields|formatFieldValue:field:context }}</span>'+'        <span ng-switch-when="date">{{ record.fields|formatFieldValue:field:context }}</span>'+'        <span ng-switch-when="datetime">{{ record.fields|formatFieldValue:field:context }}</span>'+'        <span ng-switch-when="file">'+'            <div ng-bind-html="record.fields|formatFieldValue:field:context"></div>'+'        </span>'+'       <span ng-switch-default ng-bind-html="record.fields[field.name]|prettyText|nofollow|safenewlines"></span>'+'   </dd>'+'</dl>'+'<a href="{{ image.download_url }}"'+'       target="_self"'+'       d4c-resource-download-conditions'+'       aria-label="Download {{ getRecordTitle(image.record) }} - {{ image.index + 1 }} out of {{ images.length }}"'+'       translate="aria-label"'+'       class="d4c-button">'+'   <i class="fa fa-download" aria-hidden="true"></i>'+'   <span translate>Download image</span>'+'</a>'+'</div>'+'</div>';return{restrict:'E',scope:{context:'=',displayedFields:'@',imageFields:'@?'},replace:true,template:''+'<div class="d4cwidget d4cwidget-media-gallery">'+'   <div class="d4c-aria-instructions" translate>Use left and right arrow to navigate the images, up and down arrows to open close the image inspector</div>'+'   <div class="d4cwidget-media-gallery__container" >'+'       <div style="vertical-align: top;" '+'            class="d4cwidget-images__internal-table" '+'            infinite-scroll="loadMore()" '+'            infinite-scroll-distance="1" '+'            infinite-scroll-disabled="fetching">'+'           <div class="d4cwidget-media-gallery__media-line" '+'                ng-repeat="line in lines track by $index">'+'               <div ng-class="{\'d4cwidget-media-gallery__media-container--selected\': image.selected}" '+'                    class="d4cwidget-media-gallery__media-container" '+'                    style="vertical-align: top; display: inline-block" '+'                    ng-repeat="image in line.images track by $index" '+'                    ng-click="onClick($event, image, line)"'+'                    ng-style="{width: image.width, height: image.height, marginTop: image.marginTop, marginBottom: image.marginBottom, marginRight: image.marginRight, marginLeft: image.marginLeft }"'+'                    data-index="{{ image.index + 1 }}">'+'                       <d4c-record-image record="image.record" '+'                                         ng-keydown="onKeyDown($event, image, line)"'+'                                         role="button"'+'                                         tabindex="0"'+'                                         aria-label="{{ getRecordTitle(image.record) }} - {{ image.index + 1 }} out of {{ images.length }}"'+'                                         translate="aria-label"'+'                                         field="{{ image.fieldname }}" '+'                                         domain-url="{{context.domainUrl}}"></d4c-record-image>'+'                       <div ng-if="getRecordTitle(image.record)" '+'                            class="d4cwidget-media-gallery__media-container__title-container">{{ getRecordTitle(image.record) }}</div>'+'                       <d4c-spinner ng-show="image.fetching" '+'                                    class="d4c-media-gallery__image-spinner-overlay"></d4c-spinner>'+'               </div>'+'           </div>'+'       </div>'+'       <d4c-spinner ng-if="!init && fetching"></d4c-spinner>'+'   </div>'+'   <div class="d4cwidget-media-gallery__details"></div>'+'   <div class="d4cwidget-overlay" ng-if="done && !records"><span class="d4cwidget-overlay__message" translate>No results</span></div>'+'   <div class="d4cwidget-overlay" ng-if="fetching && !records"><d4c-spinner></d4c-spinner></div>'+'</div>',require:['d4cMediaGallery','?d4cWidgetTooltip','?d4cAutoResize','?refineOnClick'],controller:['$scope','$element','$window','DebugLogger','$filter',function($scope,$element,$window,DebugLogger,$filter){$scope.page=0;$scope.resultsPerPage=40;$scope.fetching=true;$scope.staticSearchOptions={rows:$scope.resultsPerPage};$scope.records=[];$scope.images=[];$scope.done=false;$scope.init=true;$scope.nextImage=0;if(typeof($scope.imageFields)=="undefined"){$scope.imageFields=[];}
var currentRequestsTimeouts=[];var refreshRecords=function(){$scope.fetching=true;var options={},start;if($scope.init){start=0;if(currentRequestsTimeouts.length){currentRequestsTimeouts.forEach(function(t){t.resolve();});currentRequestsTimeouts.splice(0,currentRequestsTimeouts.length);}}else{$scope.page++;start=$scope.page*$scope.resultsPerPage;}
angular.extend(options,$scope.staticSearchOptions,$scope.context.parameters,{start:start});var fetchedFields=$scope.imageFields||[];if($scope.context.dataset.extra_metas&&$scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.image_title){fetchedFields=fetchedFields.concat($scope.context.dataset.extra_metas.visualization.image_title);}
if(fetchedFields.length>0){angular.extend(options,{fields:fetchedFields.join(',')});}
var timeout=$q.defer();currentRequestsTimeouts.push(timeout);if(angular.isDefined(options.q)){options.q=[options.q];}else{options.q=[];}
var restriction_query=[];angular.forEach($scope.imageFields,function(field){restriction_query.push('NOT #null('+field+')');});options.q.push(restriction_query.join(" OR "));D4CAPI.records.search($scope.context,options,timeout.promise).success(function(data,status,headers,config){$scope.records=$scope.records.concat(data.records);var i,j,url,image,placeholder;for(i=0;i<data.records.length;i++){for(j=0;j<$scope.imageFields.length;j++){if(data.records[i].fields[$scope.imageFields[j]]){image=data.records[i].fields[$scope.imageFields[j]];if(image.url){url=image.url;placeholder=false;}else if(image.placeholder){url=null;placeholder=true;}else{url=$scope.context.domainUrl+'/explore/dataset/'+data.records[i].datasetid+'/files/'+image.id+'/300/';placeholder=false;}
$scope.images.push({'record':data.records[i],'fieldname':$scope.imageFields[j],'thumbnail_url':url,'download_url':url.replace('/300/','/download/'),'id':image.id,'index':$scope.images.length,'placeholder':placeholder,'realwidth':image.width,'realheight':image.height,'allFieldsInitialized':false,'fetching':false});}}}
$scope.renderImages();$scope.error='';$scope.fetching=false;$scope.done=($scope.page+1)*$scope.resultsPerPage>=data.nhits;$scope.init=false;currentRequestsTimeouts.splice(currentRequestsTimeouts.indexOf(timeout),1);}).error(function(data,status,headers,config){if(data){$scope.error=data.error;}
currentRequestsTimeouts.splice(currentRequestsTimeouts.indexOf(timeout),1);$scope.fetching=false;});};this.getDefaultsFromContext=function(){var dataset=$scope.context.dataset,validatedImageFields=[],i,j;if($scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.image_tooltip_html_enabled&&$scope.context.dataset.extra_metas.visualization.image_tooltip_html){detailsTemplate='<div>'+$scope.context.dataset.extra_metas.visualization.image_tooltip_html+'</div>';}else{detailsTemplate=defaultDetailsTemplate;}
$scope.detailsTemplate=detailsTemplate;if($scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.media_gallery_fields){$scope.imageFields=$scope.context.dataset.extra_metas.visualization.media_gallery_fields;}else{for(i=0;i<dataset.fields.length;i++){if(dataset.fields[i].type=="file"){for(j=0;j<dataset.fields[i].annotations.length;j++){if(dataset.fields[i].annotations[j].name=="has_thumbnails"&&($scope.imageFields.length===0||$scope.imageFields.indexOf(dataset.fields[i].name)>-1)){validatedImageFields.push(dataset.fields[i].name);}}}}
$scope.imageFields=validatedImageFields;}
refreshRecords();};this.watchContext=function(){$scope.$watch('context.parameters',function(nv,ov){if(nv!==ov){$scope.done=false;$scope.lines.splice(0,$scope.lines.length);$scope.images.splice(0,$scope.images.length);$scope.records.splice(0,$scope.records.length);$scope.nextImage=0;$scope.init=true;$scope.page=0;$scope.layout.resetImages();refreshRecords();}},true);};$scope.loadMore=function(){if(!$scope.fetching&&!$scope.done&&$scope.staticSearchOptions){refreshRecords();}};$scope.detailsDisplayed=false;$scope.getRecordTitle=function(record){if($scope.context.dataset.extra_metas&&$scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.image_title){var titleField=$scope.context.dataset.extra_metas.visualization.image_title;var field=$scope.context.dataset.getField(titleField);if(angular.isDefined(record.fields[titleField])&&record.fields[titleField]!==''&&field.type!=='file'){return $filter('formatFieldValue')(record.fields,field,$scope.context);}else{return record.fields[titleField].filename;}}
return null;};}],link:function(scope,element,attrs,ctrl){var controller=ctrl[0],customTooltipCtrl=ctrl[1],autoResizeCtrl=ctrl[2],refineOnClickCtrl=ctrl[3];if(autoResizeCtrl){autoResizeCtrl.onResize=function(){scope.lines.splice(0,scope.lines.length);scope.layout.reset();scope.layout.render(scope.lines,element.children()[1].getBoundingClientRect().width,scope.images.length);};}
if(angular.isString(scope.displayedFields)){scope.displayedFields=scope.displayedFields.split(',');}
scope.context.wait().then(function(){controller.getDefaultsFromContext();controller.watchContext();if(customTooltipCtrl!==null){var displayed_fields;if(scope.displayedFields){displayed_fields=scope.context.dataset.fields.filter(function(field){return scope.displayedFields.indexOf(field.name)!==-1;});}else if(scope.context.dataset.extra_metas.visualization&&scope.context.dataset.extra_metas.visualization.image_fields){displayed_fields=scope.context.dataset.fields.filter(function(field){return scope.context.dataset.extra_metas.visualization.image_fields.indexOf(field.name)!==-1;});}else{displayed_fields=scope.context.dataset.fields;}
customTooltipCtrl.configure({'defaultTemplate':scope.detailsTemplate,'displayedFields':displayed_fields,'fields':scope.context.dataset.fields,'context':scope.context});}});var detailsContainer=element.find(".d4cwidget-media-gallery__details");scope.max_height=400;var detailsScope,displayedImage;detailsContainer=detailsContainer.remove();scope.onClick=function($event,image,line){var loadPromise;if(image.allFieldsInitialized){loadPromise=$q.resolve();}else{var options=angular.copy(scope.context.parameters);jQuery.extend(options,{q:['recordid='+image.record.recordid]});image.fetching=true;loadPromise=D4CAPI.records.search(scope.context,options,$q.defer()).success(function(data,status,headers,config){image.record=data.records[0];image.allFieldsInitialized=true;image.fetching=false;});}
loadPromise.then(function(){if(refineOnClickCtrl!==null){refineOnClickCtrl.refineOnRecord(image.record);}else if(customTooltipCtrl!==null){if(detailsScope){detailsScope.$destroy();}
if(displayedImage){displayedImage.selected=false;}
if(displayedImage===image){displayedImage=null;detailsContainer=detailsContainer.remove();return;}else{displayedImage=image;}
image.selected=true;var renderHtml=customTooltipCtrl.render(image.record,{'image':angular.copy(image),'getRecordTitle':scope.getRecordTitle,'images':scope.images,'ctx':scope.context},image.fieldname);detailsContainer=detailsContainer.remove();detailsContainer.html(renderHtml);detailsContainer.insertAfter(angular.element($event.currentTarget).parents('.d4cwidget-media-gallery__media-line'));}});};scope.onKeyDown=function($event,image,line){if($event.keyCode===13||$event.keyCode===38||$event.keyCode===40){scope.onClick($event,image,line);if($event.keyCode===38||$event.keyCode===40){$event.preventDefault();}}
if($event.keyCode===37||$event.keyCode===39){var currentIndex=$event.target.parentNode.dataset.index;var nextIndex=$event.keyCode===37?--currentIndex:++currentIndex;nextIndex=Math.min(Math.max(nextIndex,1),scope.images.length);element.find('.d4cwidget-media-gallery__media-container[data-index='+nextIndex+'] .d4cwidget-record-image').focus();}};scope.lines=[];scope.layout=buildLayout();scope.layout.resetImages();scope.renderImages=function(){var i,image;for(i=scope.nextImage;i<scope.images.length;i++){image=scope.images[i];scope.layout.addImage(image,scope.images.length);}
scope.nextImage=i;scope.layout.render(scope.lines,element.children()[1].getBoundingClientRect().width,scope.images.length);};}};}]);var buildLayout=function(){var ratioSum=0,MAX_HEIGHT=250,MARGIN=1,previousLineOffset=0,images=[],lastRenderedImage=-1,rendering=false;return{reset:function(){ratioSum=0;previousLineOffset=0;lastRenderedImage=-1;},resetImages:function(){images.splice(0,images.length);this.reset();},addImage:function addImage(image){var localImage=angular.copy(image);images.push(localImage);},render:function(lines,containerWidth,imagesCount){if(rendering){return;}
rendering=true;var i,image;if(lines.length===0){lines.push({'images':[],'height':MAX_HEIGHT,'offset':0,'max_height':0});}
for(i=lastRenderedImage+1;i<images.length;i++){image=images[i];var ratio=image.realwidth/image.realheight;var currentLine=lines[lines.length-1];currentLine.images.push(image);currentLine.max_height=Math.min(MAX_HEIGHT,Math.max(currentLine.max_height,image.realheight));ratioSum+=ratio;currentLine.height=Math.min(Math.floor((containerWidth-MARGIN*(currentLine.images.length-1))/ratioSum),currentLine.max_height);if(currentLine.height<currentLine.max_height||image.index===imagesCount-1){var lineWidth=0;$.each(currentLine.images,function(index,image){image.height=currentLine.height;image.width=Math.floor(image.realwidth*image.height/image.realheight);image.marginTop=image.marginBottom=image.marginRight=image.marginLeft=MARGIN+"px";lineWidth+=image.width+2*MARGIN;});currentLine.offset=previousLineOffset+currentLine.max_height;while(lineWidth>containerWidth){angular.forEach(currentLine.images,function(image,index){if(lineWidth>containerWidth){image.width-=1;lineWidth-=1;}});}}
if(currentLine.height<currentLine.max_height){previousLineOffset+=currentLine.height;lines.push({'images':[],'height':MAX_HEIGHT,'offset':0,'max_height':0});ratioSum=0;}
lastRenderedImage+=1;}
rendering=false;}};};}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTwitterTimeline',function(){return{restrict:'E',replace:true,template:'<div class="d4cwidget"></div>',scope:{'widgetId':'@'},link:function(scope,element,attrs){var html=''+'<a class="twitter-timeline" '+'   href="https://twitter.com/twitterapi" '+'   data-widget-id="'+attrs.widgetId+'"';if(attrs.height){html+='   height="'+attrs.height+'"';}
if(attrs.width){html+='   width="'+attrs.width+'"';}
html+='   >Tweets</a>'+'<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>';element.append(html);}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cRangeInput',['$timeout','translate','$compile',function($timeout,translate,$compile){return{restrict:'E',replace:true,scope:{ngModel:'=',min:'=',max:'=',step:'=',selectableMin:'=',minValuePosition:'=?',maxValuePosition:'=?',editableValue:'=',iconMin:'@',iconMax:'@',iconMinTitle:'@?',iconMaxTitle:'@?',ariaLabelText:'@'},require:'ngModel',link:function(scope,element,attrs,ngModelCtrl){var template='<div class="d4c-range-input">'+'    <i class="d4c-range-input__icon d4c-range-input__icon--min" ng-if="iconMin" title="{{ iconMinTitle }}" ng-class="iconMin"></i>'+'    <input type="range"'+'           min="{{ actualMin }}"'+'           max="{{ max }}"'+'           step="{{ step }}"'+'           class="d4c-range-input__range-input"'+'           ng-change="onRangeChange()"'+'           ng-model-options="{ debounce: 0 }"'+'           ng-model="values.internalRange"'+'           aria-label="{{rangeLabel}}"'+'           title="{{ values.internalRange }}">'+'    <i class="d4c-range-input__icon d4c-range-input__icon--max" ng-if="iconMax" title="{{ iconMaxTitle }}" ng-class="iconMax"></i>'+'    <input class="d4c-range-input__value-input" '+'          ng-change="onValueChange()" '+'          ng-if="editableValue" '+'          type="number" '+'          ng-model="values.internalValue"'+'          ng-model-options="{ debounce: 0 }"'+'          ng-blur="onValueBlur()"'+'          min="{{ actualMin }}" '+'          max="{{ max }}" '+'          step="{{ step }}"'+'          aria-label="{{inputLabel}}">'+'</div>';var newElement=angular.element(template);element.replaceWith(newElement);$compile(newElement)(scope);var inputElement=element.find('.d4c-range-input__input');scope.values={};if(angular.isDefined(scope.selectableMin)){scope.actualMin=scope.selectableMin;}else{scope.actualMin=scope.min;}
scope.rangeLabel=format_string(translate('{label} slider'),{label:scope.ariaLabelText});scope.inputLabel=format_string(translate('{label} input'),{label:scope.ariaLabelText});var isValueInvalid=function(){return isNaN(scope.values.internalValue)||scope.values.internalValue<scope.actualMin||scope.values.internalValue>scope.max;};scope.onRangeChange=function(){var num=parseFloat(scope.values.internalRange,10);scope.values.internalValue=num;ngModelCtrl.$setViewValue(num);};scope.onValueChange=function(){if(isValueInvalid()){return;}
scope.values.internalRange=scope.values.internalValue.toString();ngModelCtrl.$setViewValue(scope.values.internalValue);};scope.onValueBlur=function(){if(isValueInvalid()){scope.onRangeChange();}};ngModelCtrl.$render=function(){scope.values.internalValue=ngModelCtrl.$modelValue;scope.values.internalRange=ngModelCtrl.$modelValue.toString();};scope.$watch('selectableMin',function(newValue,oldValue){if(newValue!==oldValue){inputElement.css({width:((scope.max-newValue)/(scope.max-scope.min)*100)+'%'});scope.actualMin=newValue;if(newValue>=scope.ngModel){scope.ngModel=newValue;}}});scope.$watch('minValuePosition',function(newValue,oldValue){if(newValue!==oldValue){if(newValue>=scope.ngModel){scope.ngModel=newValue;}}});scope.$watch('maxValuePosition',function(newValue,oldValue){if(newValue!==oldValue){if(newValue<=scope.ngModel){scope.ngModel=newValue;}}});$timeout(function(){element.find('.d4c-range-input__range-input').val(scope.values.internalRange);});}};}]);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cCalendar',['D4CAPI','ModuleLazyLoader','D4CWidgetsConfig','$compile','URLSynchronizer',function(D4CAPI,ModuleLazyLoader,D4CWidgetsConfig,$compile,URLSynchronizer){return{restrict:'E',scope:{context:'=',startField:'@?',endField:'@?',titleField:'@?',tooltipFields:'@?',eventColor:'@?',calendarView:'@?',availableCalendarViews:'@?',syncToUrl:'@'},require:'?refineOnClick',replace:true,template:''+'<div class="d4cwidget-calendar">'+'    <div class="d4cwidget-calendar__fullcalendar"></div>'+'    <div class="d4cwidget-calendar__tooltip"></div>'+'    <div class="d4cwidget-calendar__loading-backdrop">'+'        <d4c-spinner class="d4cwidget-calendar__loading-wheel"></d4c-spinner>'+'    </div>'+'</div>',controller:function($scope){if($scope.syncToUrl!=='false'){URLSynchronizer.addSynchronizedValue($scope,'calendarView','calendarview');}},link:function(scope,element,attrs,refineOnClickCtrl){var updateCalendarView=function(){var currentView=scope.fullcalendar.fullCalendar('getView');if(currentView.name!=scope.calendarView){scope.calendarView=currentView.name;}};var setupCalendar=function(){var visualization_metas={};if(scope.context.dataset&&scope.context.dataset.extra_metas&&scope.context.dataset.extra_metas.visualization){visualization_metas=scope.context.dataset.extra_metas.visualization;}
if(!angular.isDefined(scope.startField)){scope.startField=visualization_metas.calendar_event_start;}
if(!angular.isDefined(scope.endField)){scope.endField=visualization_metas.calendar_event_end;}
if(!angular.isDefined(scope.titleField)){scope.titleField=visualization_metas.calendar_event_title;}
if(!angular.isDefined(scope.eventColor)){if(visualization_metas.calendar_event_color){scope.eventColor=visualization_metas.calendar_event_color;}else{scope.eventColor='#C32D1C';}}
if(!angular.isDefined(scope.availableCalendarViews)){if(visualization_metas.calendar_available_views){scope.availableCalendarViews=visualization_metas.calendar_available_views.split(/\s*,\s*/);}else{scope.availableCalendarViews=['month','agendaWeek','agendaDay'];}}else{scope.availableCalendarViews=scope.availableCalendarViews.split(/\s*,\s*/);}
if(!angular.isDefined(scope.calendarView)){if(visualization_metas.calendar_default_view&&scope.availableCalendarViews.indexOf(visualization_metas.calendar_default_view)>-1){scope.calendarView=visualization_metas.calendar_default_view;}else{scope.calendarView=scope.availableCalendarViews[0];}}else if(scope.availableCalendarViews.indexOf(scope.calendarView)===-1){scope.calendarView=scope.availableCalendarViews[0];}
if(angular.isDefined(scope.tooltipFields)){var tooltipFields=[];angular.forEach(scope.tooltipFields.split(','),function(fieldName){tooltipFields.push(fieldName.trim());});scope.tooltipFields=tooltipFields;}else if(visualization_metas.calendar_tooltip_fields){scope.tooltipFields=visualization_metas.calendar_tooltip_fields;}else{scope.tooltipFields=[];}
scope.tooltip=$(element).children('.d4cwidget-calendar__tooltip').first().qtip({content:{text:'',button:true},position:{my:'bottom center',at:'top center',target:'mouse',viewport:$('.d4cwidget-calendar__fullcalendar'),adjust:{mouse:false,scroll:false}},show:false,hide:false,style:{classes:'d4cwidget-calendar__tooltip d4cwidget-calendar__tooltip--increase-precedence'}}).qtip('api');$(document).on('click',function(event){if(!$(event.target).parents('.fc-event').length&&!$(event.target).parents('.d4cwidget-calendar__tooltip').length){hideTooltip();}});scope.fullcalendar=$(element).children('.d4cwidget-calendar__fullcalendar').first();scope.fullcalendar.fullCalendar({lazyFetching:false,header:{left:$(element).css('direction')==='rtl'?'nextYear,next,prev,prevYear, today':'prevYear,prev,next,nextYear, today',center:'title',right:scope.availableCalendarViews.join(',')},lang:D4CWidgetsConfig.language,loading:toggleLoadingWheel,editable:true,eventLimit:true,events:calendarDataSource,eventDataTransform:buildEventFromRecord,eventColor:scope.eventColor,defaultView:scope.calendarView,eventClick:function(data,event){if(refineOnClickCtrl){refineOnClickCtrl.refineOnRecord(data.record);}
hideTooltip();scope.tooltip.set({'content.text':data.buildTooltipContent(),'position.target':[event.pageX,event.pageY]}).reposition(event).show(event);}});};var hideTooltip=function(){$('.d4cwidget-calendar__tooltip').hide();};var updateCalendar=function(){scope.fullcalendar.fullCalendar('refetchEvents');};var toggleLoadingWheel=function(isLoading){if(isLoading){$('.d4cwidget-calendar__loading-backdrop').show();}else{$('.d4cwidget-calendar__loading-backdrop').hide();}};var calendarDataSource=function(start,end,timezone,callback){updateCalendarView();D4CAPI.records.search(scope.context,getSearchOptions(start,end)).success(function(data){callback(data.records);});};var buildEventFromRecord=function(record){var end;if(scope.context.dataset.getField(scope.endField).type==="date"){end=moment(record.fields[scope.endField]).add(1,"day").format('YYYY-MM-DD');}else{end=record.fields[scope.endField];}
return{title:record.fields[scope.titleField],start:record.fields[scope.startField],end:end,buildTooltipContent:eventTooltipContentBuilder(record),editable:false,record:record};};var eventTooltipContentBuilder=function(record){var buildTooltipContent=function(){var newScope=scope.$new(true);newScope.record=record;newScope.dataset=scope.context.dataset;newScope.ctx=scope.context;var content;if(scope.context.dataset.extra_metas.visualization.calendar_tooltip_html_enabled&&scope.context.dataset.extra_metas.visualization.calendar_tooltip_html){content=$compile('<div>'+scope.context.dataset.extra_metas.visualization.calendar_tooltip_html+'</div>')(newScope);}else{newScope.titleField=scope.titleField;newScope.tooltipFields=scope.tooltipFields;content=$compile('<d4c-calendar-tooltip></d4c-calendar-tooltip>')(newScope);}
newScope.$apply();return content;};return buildTooltipContent;};var getSearchOptions=function(start,end){var options={dataset:scope.context.dataset.datasetid,rows:1000};options=$.extend(options,scope.context.parameters);var boundsQuery=[scope.startField+'<'+end.format('YYYY-MM-DD'),scope.endField+'>='+start.format('YYYY-MM-DD')].join(' AND ');options=$.extend(options,{'q.calendar_bounds':boundsQuery});return options;};ModuleLazyLoader('fullcalendar','qtip').then(function(){scope.context.wait().then(function(){setupCalendar();scope.$watch('context.parameters',function(nv,ov){if(nv!==ov){updateCalendar();}},true);});});}};}]);mod.directive('d4cCalendarTooltip',function(){return{restrict:'E',template:''+'<h2 class="d4cwidget-calendar__tooltip-title">{{ record.fields[titleField] }}</h2>'+'<dl class="d4cwidget-calendar__tooltip-fields">'+'    <dt ng-repeat-start="field in dataset.fields|fieldsForVisualization:\'calendar\'|fieldsFilter:tooltipFields"'+'        ng-show="record.fields[field.name]|isDefined"'+'        class="d4cwidget-calendar__tooltip-field-name">'+'        {{ field.label }}'+'    </dt>'+'    <dd ng-repeat-end ng-switch="field.type" ng-show="record.fields[field.name]|isDefined">'+'        <debug data="record.fields[field.name]"></debug>'+'        <span ng-switch-when="geo_point_2d">'+'            <d4c-geotooltip width="300" height="300" coords="record.fields[field.name]">'+'                {{ record.fields|formatFieldValue:field:ctx }}'+'            </d4c-geotooltip>'+'        </span>'+'        <span ng-switch-when="geo_shape">'+'            <d4c-geotooltip width="300" height="300" geojson="record.fields[field.name]">'+'                {{ record.fields|formatFieldValue:field:ctx }}'+'            </d4c-geotooltip>'+'        </span>'+'        <span ng-switch-when="file">'+'            <div ng-if="!dataset.isFieldAnnotated(field, \'has_thumbnails\')"'+'                 ng-bind-html="record.fields|formatFieldValue:field:ctx"></div>'+'            <div ng-if="dataset.isFieldAnnotated(field, \'has_thumbnails\')"'+'                 ng-bind-html="record.fields[field.name]|displayImageValue:dataset.datasetid"'+'                 style="text-align: center;"></div>'+'        </span>'+'        <span ng-switch-default '+'              title="{{record.fields|formatFieldValue:field:ctx}}" '+'              ng-bind-html="record.fields|formatFieldValue:field:ctx|imagify|videoify|prettyText|nofollow">'+'        </span>'+'    </dd>'+'</dl>'};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cToggleModel',function(){var enable=function(obj,key,value){if(obj[key]){if(angular.isArray(obj[key])){if(obj[key].indexOf(value)<0){obj[key].push(value);}}else{if(!angular.equals(obj[key],value)){obj[key]=[obj[key],value];}}}else{obj[key]=value;}};var disable=function(obj,key,value){if(obj[key]){if(angular.isArray(obj[key])){if(obj[key].indexOf(value)>=0){if(obj[key].length===1){delete obj[key];}else{obj[key].splice(obj[key].indexOf(value),1);}}}else{if(angular.equals(obj[key],value)){delete obj[key];}}}};var convertModelToArray=function(obj,key){if(typeof obj[key]==='string'){obj[key]=obj[key].split(',');}};var convertModelToStorageFormat=function(obj,key,storeAs){if(storeAs=='csv'&&angular.isArray(obj[key])){obj[key]=obj[key].join(',');}};return{restrict:'A',scope:{d4cToggleModel:'=',d4cToggleKey:'@',d4cToggleValue:'@',d4cStoreAs:'@?'},link:function(scope,element,attrs){if(!angular.isDefined(scope.d4cStoreAs)||['array','csv'].indexOf(scope.d4cStoreAs)==-1){scope.d4cStoreAs='array';}
element.on('change',function(e){var checked=e.currentTarget.checked;if(checked){scope.$apply(function(){convertModelToArray(scope.d4cToggleModel,scope.d4cToggleKey);enable(scope.d4cToggleModel,scope.d4cToggleKey,scope.d4cToggleValue);convertModelToStorageFormat(scope.d4cToggleModel,scope.d4cToggleKey,scope.d4cStoreAs);});}else{scope.$apply(function(){convertModelToArray(scope.d4cToggleModel,scope.d4cToggleKey);disable(scope.d4cToggleModel,scope.d4cToggleKey,scope.d4cToggleValue);convertModelToStorageFormat(scope.d4cToggleModel,scope.d4cToggleKey,scope.d4cStoreAs);});}});scope.$watch('d4cToggleModel[d4cToggleKey]',function(nv){if(nv){if((angular.isArray(nv)&&nv.indexOf(scope.d4cToggleValue)>=0)||(!angular.isArray(nv)&&nv.split(',').indexOf(scope.d4cToggleValue)>=0)){element.prop('checked',true);}else if(angular.equals(nv,scope.d4cToggleValue)){element.prop('checked',true);}else{element.prop('checked',false);}}else{element.prop('checked',false);}},true);}};});}());;(function(){"use strict";var mod=angular.module('d4c-widgets');var getScrollParent=function(element,$window){var $scrollParent;$scrollParent=element.parents().filter(function(){return/(auto|scroll)/.test($.css(this,'overflow')+$.css(this,'overflow-y'));}).eq(0);if($scrollParent.length===0){$scrollParent=angular.element($window);}
return $scrollParent;};mod.directive('d4cInfiniteScrollResults',function(){return{template:''+'<div class="{{listClass}} d4cwidget-infinite-scroll-results" infinite-scroll="loadMore()" infinite-scroll-distance="2" infinite-scroll-disabled="fetching">'+'   <div class="{{resultClass}}" ng-repeat="item in results" inject>'+'   </div>'+'   <div class="d4cwidget-infinite-scroll-results__message-container">'+'       <d4c-spinner class="d4cwidget-infinite-scroll-results__spinner" ng-if="fetching"></d4c-spinner>'+'       <div class="d4cwidget-infinite-scroll-results__no-more-results-message" ng-if="!fetching && results.length > 0">{{ noMoreResultsMessage }}</div>'+'       <div class="d4cwidget-infinite-scroll-results__no-results-message ng-cloak" ng-if="!fetching && results.length == 0 && context.getActiveFilters().length > 0"">{{ noResultsMessage }}</div>'+'       <div class="d4cwidget-infinite-scroll-results__no-results-message ng-cloak" ng-if="!fetching && results.length == 0 && context.getActiveFilters().length == 0" ng-bind-html="noDataMessage"></div>'+'   </div>'+'</div>',scope:{context:'=',resultClass:'@',listClass:'@',noMoreResultsMessage:'@',noResultsMessage:'@',noDataMessage:'@',scrollTopWhenRefresh:'='},transclude:true,controller:['$scope','$window','$q','D4CAPI','$element',function($scope,$window,$q,D4CAPI,$element){var page=0;var noMoreResults=false;$scope.fetching=false;$scope.results=[];var initialRequest=$q.defer();var $scrollParent=getScrollParent($element,$window);var fetchResults=function(init){if(noMoreResults){return;}
if(init){page=0;}else{page+=1;}
var start=page*10;var func;$scope.fetching=true;if($scope.context.type==='catalog'){D4CAPI.datasets.search($scope.context,{rows:10,start:start,extrametas:true,interopmetas:true}).success(function(data){noMoreResults=data.datasets.length===0;renderResults(data.datasets,init);});}else{var params=angular.extend({},$scope.context.parameters,{rows:10,start:start});D4CAPI.records.search($scope.context,params).success(function(data){noMoreResults=data.records.length===0;renderResults(data.records,init);initialRequest.resolve();});}};var renderResults=function(results,init){if(init){$scope.results=[];}
$scope.results=$scope.results.concat(results);$scope.fetching=false;if(init&&$scope.scrollTopWhenRefresh){$scrollParent[0].scrollTo(0,0);}
if(init){$scrollParent.trigger('scroll');}
try{window.dispatchEvent(new Event('resize'));}catch(error){$(window).trigger('resize');}};$scope.loadMore=function(){if($scope.context.type==='dataset'){initialRequest.promise.then(function(){fetchResults(false);});}else{fetchResults(false);}};$scope.$watch('context.parameters',function(nv,ov){if(nv!==ov){noMoreResults=false;fetchResults(true);}},true);if($scope.context.type==='dataset'){$scope.context.wait().then(function(){fetchResults(true);});}else{fetchResults(true);}}]};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cGeoSearch',['ModuleLazyLoader','D4CWidgetsConfig','MapHelper',function(ModuleLazyLoader,D4CWidgetsConfig,MapHelper){return{restrict:'E',replace:true,template:''+'<div class="d4cwidget d4cwidget-geo-search">'+'    <div class="d4cwidget-geo-search__map"></div>'+'</div>',scope:{context:'='},link:function(scope,element){var currentPolygonParameter;var polygonParameterRE=/.*polygon\(geographic_area,"(.*)"\).*/;var refineContexts=function(layer){var geoJson=layer.toGeoJSON();currentPolygonParameter=D4C.GeoFilter.getGeoJSONPolygonAsPolygonParameter(geoJson.geometry);var contexts=angular.isArray(scope.context)?scope.context:[scope.context];angular.forEach(contexts,function(context){context.parameters['q.geographic_area']='#polygon(geographic_area,"'+currentPolygonParameter+'")';});scope.$apply();};ModuleLazyLoader('leaflet').then(function(){var map=new L.D4CMap(element.find('.d4cwidget-geo-search__map')[0],{scrollWheelZoom:false,basemapsList:[D4CWidgetsConfig.basemaps[0]],disableAttribution:true,maxBounds:[[-90,-180],[90,180]]});var drawnItems=new L.FeatureGroup();map.addLayer(drawnItems);var drawControl=new L.Control.Draw({edit:{featureGroup:drawnItems,edit:false,remove:false},draw:{polyline:false,marker:false,polygon:false,circle:false}});map.addControl(drawControl);if(angular.isDefined(D4CWidgetsConfig.defaultMapLocation)){var loc=MapHelper.getLocationStructure(D4CWidgetsConfig.defaultMapLocation);map.setView(loc.center,loc.zoom);}else{map.setView([0,0],0);}
var clearLayers=function(){if(drawnItems.getLayers().length>0){drawnItems.removeLayer(drawnItems.getLayers()[0]);}};map.on('draw:drawstart',function(){clearLayers();});map.on('draw:created',function(event){var layer=event.layer;drawnItems.addLayer(layer);refineContexts(layer);});scope.$watch('context',function(nv){var polygonParameter=false;var contexts=angular.isArray(nv)?nv:[nv];angular.forEach(contexts,function(context){if(!polygonParameter&&context.parameters&&context.parameters['q.geographic_area']){var matches=polygonParameterRE.exec(context.parameters['q.geographic_area']);if(matches.length>0){polygonParameter=matches[1];}}});if(polygonParameter!==currentPolygonParameter){clearLayers();if(polygonParameter){var layer=L.geoJson(D4C.GeoFilter.getPolygonParameterAsGeoJSON(polygonParameter));drawnItems.addLayer(layer);}
currentPolygonParameter=polygonParameter;}},true);});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cFacets',['$compile','translate','$q',function($compile,translate,$q){var buildFacetTagsHTML=function(scope,element,facets){var html='';angular.forEach(facets,function(facet){html+='<d4c-facet '+'name="'+facet.name+'" '+'title="'+(facet.title&&facet.title.replace(/"/g,'&quot;')||facet.name)+'" '+'sort="'+(facet.sort||'')+'" '+'disjunctive="'+(facet.disjunctive||'')+'" '+'timerange-filter="'+(facet.timerangeFilter||'')+'" '+'hide-if-single-category="'+(facet.hideIfSingleCategory?'true':'false')+'" '+'hide-category-if="'+(facet.hideCategoryIf||'')+'"'+'value-formatter="'+(facet.valueFormatter||'')+'"'+'context="'+(scope.context.name||'')+'"'+'>'+(facet.template||'')+'</d4c-facet>';});var tags=angular.element(html);element.append(tags);$compile(tags)(scope);};return{restrict:'E',replace:true,scope:{context:'=',facetsConfig:'='},compile:function(tElement){var childrenCount=tElement.children().length;return function(scope,element){var unwatchContext,delayedInit;delayedInit=function(){var unwatchContext=scope.$watch('context',function(){if(scope.context){if(scope.context.type==='dataset'){scope.context.wait().then(function(){scope.init();});}else{scope.init();}
unwatchContext();}});};if(scope.facetsConfig){buildFacetTagsHTML(scope,element,scope.facetsConfig);delayedInit();}else if(childrenCount===0){var facets;unwatchContext=scope.$watch('context',function(){if(scope.context){unwatchContext();if(scope.context.type==='catalog'){facets=[{name:'modified',title:translate('Modified'),valueFormatter:'date'},{name:'publisher',title:translate('Publisher')},{name:'keyword',title:translate('Keyword')},{name:'theme',title:translate('Theme')}];buildFacetTagsHTML(scope,element,facets);scope.init();}else{scope.context.wait().then(function(){facets=angular.copy(scope.context.dataset.getFacets());angular.forEach(facets,function(f){f.title=f.label;delete f.label;angular.forEach(f.annotations,function(annotation){if(annotation.name==='facetsort'&&annotation.args.length>0){f.sort=annotation.args[0];}
if(annotation.name==='disjunctive'){f.disjunctive=true;}
if(annotation.name==='timerangeFilter'){f.timerangeFilter=true;}});if(f.type=='datetime'||f.type=='date'){f.valueFormatter='date';}});buildFacetTagsHTML(scope,element,facets);scope.init();});}}},true);}else{delayedInit();}};},controller:['$scope','D4CAPI',function($scope,D4CAPI){var facetsMapping={};$scope.facets=[];$scope.init=function(){$scope.$watch(function(){var params=angular.copy($scope.context.parameters);if(params.sort){delete params.sort;}
if(params.start){delete params.start;}
if(params.tab){delete params.tab;}
if(params.dataChart){delete params.dataChart;}
if($scope.context.type==='dataset'){return[params,$scope.context.dataset];}else{return params;}},function(){if($scope.context.type==='catalog'||$scope.context.dataset){if(angular.isDefined($scope.context.parameters.start)){delete $scope.context.parameters.start;}
$scope.refreshData();}},true);};$scope.refreshData=function(){var params=angular.extend({},$scope.context.parameters,{rows:0,facet:$scope.facets.map(function(facetInfo){return facetInfo.name;})});$scope.facets.map(function(facetInfo){if(facetInfo.sort&&facetInfo.sort.length&&facetInfo.sort[0]!=='['){params['facetsort.'+facetInfo.name]=facetInfo.sort;}});var req;if($scope.context.type==='dataset'){req=D4CAPI.records.search($scope.context,params);}else{req=D4CAPI.datasets.search($scope.context,params);}
req.success(function(data){$scope.context.nhits=data.nhits;var categories,facetItem,addedCategories;angular.forEach($scope.facets,function(facet){facet.categories.splice(0,facet.categories.length);});if(data.facet_groups){angular.forEach(data.facet_groups,function(facetGroup){facetItem=$scope.facets.filter(function(f){return f.name===facetGroup.name;});if(facetItem.length>0){categories=facetItem[0].categories;addedCategories=[];if(facetItem[0].sort&&facetItem[0].sort.length&&facetItem[0].sort[0]==='['){var explicitOrder=$scope.$eval(facetItem[0].sort);angular.forEach(explicitOrder,function(value){var j,cat;for(j=0;j<facetGroup.facets.length;j++){cat=facetGroup.facets[j];if(cat.path===value){addedCategories.push(cat);facetGroup.facets.splice(j,1);break;}}});Array.prototype.push.apply(addedCategories,facetGroup.facets);}else{addedCategories=facetGroup.facets;}
Array.prototype.push.apply(categories,addedCategories);}});}});};this.registerFacet=function(name,sort,secondaryContexts,facetAttrs){var categories=[];$scope.facets.push({'name':name,'categories':categories,'sort':sort});facetsMapping[name]=[];if(secondaryContexts){secondaryContexts=angular.isArray(secondaryContexts)?secondaryContexts:[secondaryContexts];angular.forEach(secondaryContexts,function(context){var contextFacetName=facetAttrs[context.name+'FacetName'];facetsMapping[name].push({context:context,facetName:contextFacetName?contextFacetName:name});var checkMappingType=function(originalContext,secondaryContext){angular.forEach(originalContext.dataset.fields,function(originalField){angular.forEach(secondaryContext.dataset.fields,function(secondaryField){if(originalField.name===name&&secondaryField.name===contextFacetName&&originalField.type!=secondaryField.type){console.warn('Error: mapping '+
originalContext.name+'\'s '+'"'+originalField.name+'" (type '+originalField.type+') on '+
secondaryContext.name+'\'s '+'"'+secondaryField.name+'" (type '+secondaryField.type+').');}});});};if(context.type==='dataset'){$q.all([$scope.context.wait(),context.wait()]).then(function(){checkMappingType($scope.context,context);});}else{checkMappingType($scope.context,context);}});}
return categories;};this.setDisjunctive=function(name){$scope.context.parameters['disjunctive.'+name]=true;};this.toggleRefinement=function(facetName,path){$scope.context.toggleRefine(facetName,path);angular.forEach(facetsMapping[facetName],function(mapping){mapping.context.toggleRefine(mapping.facetName,path);});};this.context=$scope.context;}]};}]);mod.directive('d4cFacet',function(){return{restrict:'E',replace:true,scope:{name:'@',title:'@',visibleItems:'@',hideIfSingleCategory:'@',hideCategoryIf:'@',sort:'@',disjunctive:'=',timerangeFilter:'=',valueSearch:'@',valueFormatter:'@',refineAlso:'=?',context:'='},template:function(tElement){tElement.data('facet-template',tElement.html().trim());return''+'<div ng-class="{\'d4cwidget\': true, \'d4cwidget-facet\': true, \'d4cwidget-facet--disjunctive\': disjunctive}">'+'    <h3 class="d4cwidget-facet__facet-title" '+'        ng-if="title && categories.length && visible()">'+'        {{ title }}'+'    </h3>'+'    <div class="d4cwidget-facet__date-range" '+'         ng-if="timerangeFilter && categories.length && visible()">'+'        <d4c-timerange context="context" time-field="{{ name }}" display-time="false" suffix="{{ name }}"></d4c-timerange>'+'    </div>'+'    <d4c-facet-category-list ng-if="visible()" '+'                             facet-name="{{ name }}" '+'                             value-search="{{ valueSearch }}" '+'                             hide-category-if="{{ hideCategoryIf }}" '+'                             categories="categories" '+'                             template="{{ customTemplate }}" '+'                             value-formatter="{{valueFormatter}}"></d4c-facet-category-list>'+'</div>';},require:'^d4cFacets',link:function(scope,element,attrs,facetsCtrl){if(angular.isUndefined(facetsCtrl)){console.log('ERROR : d4cFacet must be used within an d4cFacets tag.');}
scope.categories=facetsCtrl.registerFacet(scope.name,scope.sort,scope.refineAlso,attrs);scope.facetsCtrl=facetsCtrl;if(scope.disjunctive){facetsCtrl.setDisjunctive(scope.name);}
scope.context=scope.context||facetsCtrl.context;},controller:['$scope','$element',function($scope,$element){$scope.visibleItemsNumber=$scope.visibleItems||6;this.toggleRefinement=function(path){$scope.facetsCtrl.toggleRefinement($scope.name,path);};this.getVisibleItemsNumber=function(){return $scope.visibleItemsNumber;};$scope.visible=function(){return!(angular.isString($scope.hideIfSingleCategory)&&$scope.hideIfSingleCategory.toLowerCase()==='true'&&$scope.categories.length===1&&$scope.categories[0].state!=='refined');};$scope.customTemplate=$element.data('facet-template');}]};});mod.directive('d4cFacetCategoryList',function(){return{restrict:'E',replace:true,scope:{categories:'=',template:'@',facetName:'@',hideCategoryIf:'@',valueSearch:'@',valueFormatter:'@',context:'='},require:'^d4cFacet',template:''+'<ul class="d4cwidget-facet__category-list">'+'   <li class="d4cwidget-facet__value-search" ng-show="valueSearchEnabled">'+'       <input class="d4cwidget-facet__value-search-input" ng-model="valueFilter" aria-label="Search in {{facetName}}" translate="aria-label">'+'       <i ng-show="!!valueFilter" class="d4cwidget-facet__value-search-cancel fa fa-times" ng-click="valueFilter=\'\'"></i>'+'   </li>'+'   <li ng-repeat="category in categories|filter:searchValue(valueFilter)" class="d4cwidget-facet__category-container">'+'       <d4c-facet-category ng-if="!categoryIsHidden(category)" facet-name="{{ facetName }}" category="category" template="{{template}}" value-formatter="{{valueFormatter}}" ng-show="visible($index)"></d4c-facet-category>'+'   </li>'+'   <li ng-if="!suggestMode && visibleItems < (filterInvisibleCategories(categories)|filter:searchValue(valueFilter)).length" '+'       class="d4cwidget-facet__expansion-control">'+'       <a ng-hide="expanded" href="#" ng-click="toggle($event)" class="d4cwidget-facet__expansion-control-link">'+'           <i class="fa fa-angle-right" aria-hidden="true"></i>'+'           <span translate>More</span>'+'       </a>'+'       <a ng-show="expanded" href="#" ng-click="toggle($event)" class="d4cwidget-facet__expansion-control-link">'+'           <i class="fa fa-angle-right" aria-hidden="true"></i>'+'           <span translate>Less</span>'+'       </a>'+'   </li>'+'</ul>',link:function(scope,element,attrs,facetCtrl){scope.expanded=false;scope.visibleItems=facetCtrl.getVisibleItemsNumber();scope.visible=function(index){return scope.expanded||index<scope.visibleItems;};scope.toggle=function(event){event.preventDefault();scope.expanded=!scope.expanded;};scope.categoryIsHidden=function(category){if(scope.suggestMode&&scope.valueFilter===''){return true;}
if(!scope.hideCategoryIf){return false;}
var testScope=scope.$new(false);testScope.category=category;return testScope.$eval(scope.hideCategoryIf);};scope.filterInvisibleCategories=function(categories){return categories.filter(function(category){return!scope.categoryIsHidden(category);});};},controller:['$scope','$filter',function($scope,$filter){$scope.valueFilter='';$scope.valueSearchEnabled=false;$scope.suggestMode=false;if(angular.isString($scope.valueSearch)){if($scope.valueSearch.toLowerCase()==='true'){$scope.valueSearchEnabled=true;}else if($scope.valueSearch.toLowerCase()==='suggest'){$scope.valueSearchEnabled=true;$scope.suggestMode=true;}}
$scope.searchValue=function(search){if(!search){return function(){return true;};}
search=$filter('normalize')(search).toLowerCase();return function(searchedCategory){var categoryName=$filter('normalize')(searchedCategory.name).toLowerCase();return categoryName.indexOf(search)>-1;};};this.emptySearch=function(){$scope.valueFilter='';};}]};});mod.directive('d4cFacetCategory',['$compile',function($compile){return{restrict:'E',replace:true,require:['^d4cFacet','^?d4cFacetCategoryList'],scope:{category:'=',facetName:'@',template:'@',valueFormatter:'@'},template:'<div class="d4cwidget d4cwidget-facet-category"></div>',link:function(scope,element,attrs,ctrls){var facetCtrl=ctrls[0];var categoryList=ctrls[1];scope.toggleRefinement=function($event,path){$event.preventDefault();facetCtrl.toggleRefinement(path);categoryList.emptySearch();};var defaultTemplate=''+'<span class="d4cwidget-facet__category-count">{{ category.count|number }}</span> '+'<span class="d4cwidget-facet__category-name" ng-bind-html="formatCategory(category.name, category.path)"></span>';var template=scope.template|| defaultTemplate;template=''+'<a class="d4cwidget-facet__category" '+'   href="#" '+'   ng-click="toggleRefinement($event, category.path)" '+'   ng-class="{\'d4cwidget-facet__category--refined\': category.state === \'refined\'}" '+'   title="{{ category.name }}">'+template+'</a>';element.append($compile(template)(scope));if(scope.category.facets){var sublist=angular.element('<d4c-facet-category-list categories="category.facets" template="{{template}}" value-formatter="{{valueFormatter}}"></d4c-facet-category-list>');element.find('a').after(sublist);$compile(sublist)(scope);}},controller:['$scope','ValueDisplay',function($scope,ValueDisplay){$scope.formatCategory=function(value){value=D4C.StringUtils.escapeHTML(value);if($scope.valueFormatter){return ValueDisplay.format(value,$scope.valueFormatter,$scope.category.path);}else{return value;}};}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMostPopularDatasets',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,template:'<div class="d4cwidget d4cwidget-most-popular-datasets">'+'<ul class="d4cwidget-most-popular-datasets__datasets">'+'   <li class="no-data" ng-hide="datasets" translate>No data available yet</li>'+'   <li class="d4cwidget-most-popular-datasets__dataset" ng-repeat="dataset in datasets" ng-if="datasets">'+'       <d4c-theme-picto class="d4cwidget-most-popular-datasets__theme-picto" theme="{{dataset.metas.theme|firstValue}}"></d4c-theme-picto>'+'       <div class="d4cwidget-most-popular-datasets__dataset-details">'+'           <div class="d4cwidget-most-popular-datasets__dataset-details-title"><a ng-href="{{context.domainUrl}}/explore/dataset/{{dataset.datasetid}}/" target="_self">{{ dataset.metas.title }}</a></div>'+'           <div class="d4cwidget-most-popular-datasets__dataset-details-count"><i class="fa fa-download" aria-hidden="true"></i> <span translate translate-n="dataset.extra_metas.explore.download_count" translate-plural="{{$count}} downloads">{{$count}} download</span></div>'+'       </div>'+'   </li>'+'</ul>'+'</div>',scope:{context:'=',max:'@'},controller:['$scope',function($scope){$scope.max=$scope.max||5;var refresh=function(){D4CAPI.datasets.search($scope.context,{'rows':$scope.max,'sort':'explore.download_count','extrametas':true}).success(function(data){$scope.datasets=data.datasets;});};$scope.$watch('context',function(){refresh();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cPlumeAirQuality',function(){return{restrict:'E',replace:true,template:'<div class="d4cwidget"></div>',scope:{'city':'@','lang':'@'},link:function(scope,element,attrs){var html=''+'<a id="plumelabs-wjs-cfg" data-w="320" data-h="200" data-city="'+attrs.city+'" data-lng="'+(attrs.lang||'en_us')+'" data-type="l">Air Quality</a>'+'<script>window.plmlbs=function(e,t,s){var l,m=e.getElementsByTagName(t)[0],n=window.plmlbs||{},a=/^http:/.test(e.location)?"http":"https";return e.getElementById(s)?n:(l=e.createElement(t),l.id=s,l.src=a+"://static.plumelabs.com/embed/embed.js",m.parentNode.insertBefore(l,m),n)}(document,"script","plumelabs-wjs");</script>';element.append(html);}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cGist',function(){return{restrict:'E',replace:true,template:'<div class="d4cwidget"></div>',scope:{'username':'@','id':'@'},link:function(scope,element,attrs){$.ajax({url:'https://gist.github.com/'+attrs.username+'/'+attrs.id+'.json',dataType:'jsonp',timeout:1000,success:function(data){$(document.head).append('<link href="'+data.stylesheet+'" rel="stylesheet">');element.append(data.div);}});}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cClearAllFilters',function(){return{restrict:'E',replace:true,scope:{context:'=',except:'='},template:''+'<a class="d4cwidget-clear-all-filters" href="" ng-click="clearAll()">'+'    <i class="fa fa-ban" aria-hidden="true"></i> '+'    <span translate>Clear all</span>'+'</a>',controller:['$scope',function($scope){$scope.clearAll=function(){var excepts=$scope.except?$scope.except:[];var contexts=$scope.context;if(!angular.isArray($scope.context)){contexts=[$scope.context];}
angular.forEach(contexts,function(context){angular.forEach(context.getActiveFilters(excepts),function(k){delete context.parameters[k];});});return false;};}]};});})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTable',function(){return{restrict:'E',scope:{context:'=',displayedFields:'@',sort:'@',datasetFeedback:'@'},replace:true,transclude:true,require:['?d4cAutoResize','?autoResize'],template:'<div class="records records-table d4cwidget d4cwidget-table">'+' <div class="d4cwidget-table__header" ng-show="records.length">'+'     <table class="d4cwidget-table__internal-table">'+'         <thead class="d4cwidget-table__internal-header-table-header">'+'         <tr>'+'             <th class="d4cwidget-table__header-cell d4cwidget-table__header-cell--spinner"><div class="d4cwidget-table__cell-container"><d4c-spinner ng-show="fetching" class="d4cwidget-spinner--large"></d4c-spinner></div></th>'+'             <th class="d4cwidget-table__header-cell" ng-repeat="field in context.dataset.fields|fieldsForVisualization:\'table\'|fieldsFilter:displayedFieldsArray"'+'                 title="{{ field.description || field.label }}"'+'                 ng-click="toggleSort(field)"'+'                 >'+'                 <div class="d4cwidget-table__header-cell-container">'+'                     <div class="d4cwidget-table__label" ng-bind="field.label"></div>'+'                     <div ng-class="{\'d4cwidget-table__sort-icons\': true, \'d4cwidget-table__sort-icons--active\': field.name == context.parameters.sort || \'-\'+field.name == context.parameters.sort}" ng-show="isFieldSortable(field)" title="sort" translate="title">'+'                         <button class="d4cwidget-table__sort-icon" aria-label="Sort column {{ field.label }} in ascending order" tabindex="0" translate="aria-label">'+'                            <i class="fa fa-chevron-up d4cwidget-table__sort-icons__up"  ng-class="{\'d4cwidget-table__sort-icons__up--active\': isDescendingSorted(field)}" aria-hidden="true"></i>'+'                         </button>'+'                         <button class="d4cwidget-table__sort-icon" aria-label="Sort column {{ field.label }} in descending order" tabindex="0" translate="aria-label">'+'                            <i class="fa fa-chevron-down d4cwidget-table__sort-icons__down"  ng-class="{\'d4cwidget-table__sort-icons__down--active\': isAscendingSorted(field)}" aria-hidden="true"></i>'+'                         </button>'+'                     </div>'+'                 </div>'+'             </th>'+'         </tr>'+'         </thead>'+'     </table>'+' </div>'+' <div class="d4cwidget-table__records">'+'     <table class="d4cwidget-table__internal-table" infinite-scroll="loadMore()" infinite-scroll-distance="1" infinite-scroll-disabled="fetching">'+'         <thead class="d4cwidget-table__internal-table-header">'+'             <tr>'+'                 <th class="d4cwidget-table__header-cell d4cwidget-table__header-cell--spinner"><div class="d4cwidget-table__cell-container"><d4c-spinner ng-show="fetching" class="d4cwidget-spinner--large"></d4c-spinner></div></th>'+'                 <th class="d4cwidget-table__header-cell" ng-repeat="field in context.dataset.fields|fieldsForVisualization:\'table\'|fieldsFilter:displayedFieldsArray"'+'                     title="{{ field.name }}">'+'                     <div class="d4cwidget-table__cell-container">'+'                         <span ng-bind="field.label"></span>'+'                         <div class="d4cwidget-table__sort-icons" ng-show="isFieldSortable(field)" title="sort" translate="title">'+'                             <button class="d4cwidget-table__sort-icon" aria-label="Sort column {{ field.label }} in ascending order" tabindex="0" translate="aria-label">'+'                                <i class="fa fa-chevron-up d4cwidget-table__sort-icons__up" aria-hidden="true"></i>'+'                             </button>'+'                             <button class="d4cwidget-table__sort-icon" aria-label="Sort column {{ field.label }} in descending order" tabindex="0" translate="aria-label">'+'                                <i class="fa fa-chevron-down d4cwidget-table__sort-icons__down" aria-hidden="true"></i>'+'                             </button>'+'                         </div>'+'                     </div>'+'                 </th>'+'             </tr>'+'         </thead>'+'         <tbody class="d4cwidget-table__records-tbody">'+'         </tbody>'+'     </table>'+' </div>'+' <div ng-if="displayDatasetFeedback" class="table-feedback-new"><a d4c-dataset-feedback d4c-dataset-feedback-dataset="context.dataset"><i class="fa fa-comment" aria-hidden="true"></i> <span translate>Suggest a new record</span></a></div>'+' <div class="d4cwidget-overlay" ng-hide="fetching || records"><span class="d4cwidget-overlay__message" translate>No results</span></div>'+' <div class="d4cwidget-overlay" ng-hide="(!fetching || records) && !working"><d4c-spinner></d4c-spinner></div>'+'</div>',controller:['$scope','$element','$timeout','$document','$window','D4CAPI','DebugLogger','$filter','$http','$compile','$transclude','$q',function($scope,$element,$timeout,$document,$window,D4CAPI,DebugLogger,$filter,$http,$compile,$transclude,$q){$scope.displayedFieldsArray=null;$scope.displayDatasetFeedback=false;$scope.page=0;$scope.resultsPerPage=40;$scope.fetching=false;$scope.records=[];$scope.working=true;$scope.layout=[];$scope.done=false;var datasetFields,recordsHeader=$element.find('.d4cwidget-table__header'),recordsArea=$element.find('.d4cwidget-table__records'),recordsBody=$element.find('.d4cwidget-table__records-tbody');var lastStartIndex=0,lastEndIndex=0;var extraRecords=100;var startIndex=0,endIndex=0;var id=Math.random().toString(36).substring(7);var tableId='table-'+id;var styleSheetId='stylesheet-'+id;var currentRequestsTimeouts=[];var $infiniteScrollElement;var lastLoadedPage=null;var pagesWaitingHandling={};var refreshRecords=function(init){$scope.fetching=true;var options={},start;if(init){$scope.done=false;$scope.page=0;$scope.records=[];start=0;if(currentRequestsTimeouts.length){currentRequestsTimeouts.forEach(function(t){t.resolve();});currentRequestsTimeouts.splice(0,currentRequestsTimeouts.length);}
pagesWaitingHandling={};lastLoadedPage=null;}else{$scope.page++;start=$scope.page*$scope.resultsPerPage;}
jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters,{start:start});if($scope.displayedFieldsArray&&$scope.context.dataset.fields.length>$scope.displayedFieldsArray.length){jQuery.extend(options,{fields:$scope.displayedFieldsArray.join(',')});}
if(options.sort){var sortedFieldName=options.sort.replace('-','');if(!$scope.context.dataset.getField(sortedFieldName)){delete options.sort;}}
var timeout=$q.defer();currentRequestsTimeouts.push(timeout);function handleResponse(data,page){if(!data.records.length){$scope.working=false;}
$scope.records=init?data.records:$scope.records.concat(data.records);$scope.nhits=data.nhits;$scope.error='';$scope.fetching=false;$scope.done=($scope.page+1)*$scope.resultsPerPage>=data.nhits;currentRequestsTimeouts.splice(currentRequestsTimeouts.indexOf(timeout),1);lastLoadedPage=page;$timeout(function(){restoreScrollLeft();if(angular.isDefined(pagesWaitingHandling[page+1])){var pageInfo=pagesWaitingHandling[page+1];delete pagesWaitingHandling[page+1];pageInfo.callback(pageInfo.data,page+1);}});}
D4CAPI.records.search($scope.context,options,timeout.promise).success(function(data){var responsePage=data.parameters.start/data.parameters.rows;if(lastLoadedPage===null&&responsePage===0||angular.isNumber(lastLoadedPage)&&responsePage===lastLoadedPage+1){handleResponse(data,responsePage);}else{pagesWaitingHandling[responsePage]={'callback':handleResponse,'data':data};}}).error(function(data){if(data){$scope.error=data.error;}
currentRequestsTimeouts.splice(currentRequestsTimeouts.indexOf(timeout),1);$scope.fetching=false;});};$scope.loadMore=function(){if(!$scope.fetching&&!$scope.done&&$scope.staticSearchOptions){refreshRecords(false);}};$scope.isFieldSortable=function(field){return D4C.DatasetUtils.isFieldSortable(field);};$scope.isAscendingSorted=function(field){if(field.type==='text'){return field.name===$scope.context.parameters.sort;}else{return'-'+field.name===$scope.context.parameters.sort;}};$scope.isDescendingSorted=function(field){if(field.type==='text'){return'-'+field.name===$scope.context.parameters.sort;}else{return field.name===$scope.context.parameters.sort;}};$scope.toggleSort=function(field){if($scope.isFieldSortable(field)){if($scope.context.parameters.sort===field.name){$scope.context.parameters.sort='-'+field.name;return;}
if($scope.context.parameters.sort==='-'+field.name){$scope.context.parameters.sort=field.name;return;}
$scope.context.parameters.sort=field.type==='text'?field.name:'-'+field.name;}else{delete $scope.context.parameters.sort;}};var customTemplate=false;$transclude(function(clone){clone.contents().wrapAll('<div>');customTemplate=clone.contents().length>0&&clone.contents().html().trim().length>0;});var renderOneRecord=function(index,records,position){var tr,td,record=records[index];tr=document.createElement('tr');tr.className='d4cwidget-table__internal-table-row record-'+index;if(position==='end'){var beforePlaceholder=$element.find('.js-placeholder-bottom')[0];beforePlaceholder.parentNode.insertBefore(tr,beforePlaceholder);}else{var afterPlaceholder=$element.find('.js-placeholder-top')[0];afterPlaceholder.parentNode.insertBefore(tr,afterPlaceholder.nextSibling);}
td=document.createElement('td');td.className='d4cwidget-table__cell';var div=document.createElement('div');div.className='d4cwidget-table__cell-container';if($scope.displayDatasetFeedback){var feedbackButton='<i class="fa fa-comment table-feedback-icon" aria-hidden="true" d4c-dataset-feedback d4c-dataset-feedback-record="record" d4c-dataset-feedback-dataset="dataset" d4c-tooltip="Suggest changes for this record" translate="d4c-tooltip"></i>';var localScope=$scope.$new(true);localScope.record=record;localScope.dataset=$scope.context.dataset;div.appendChild($compile(feedbackButton)(localScope)[0]);}
div.appendChild(document.createTextNode(index+1));td.appendChild(div);tr.appendChild(td);for(var j=0;j<datasetFields.length;j++){var field=datasetFields[j];var fieldValue=$filter('formatFieldValue')(record.fields,field,$scope.context);td=document.createElement('td');td.className='d4cwidget-table__cell';tr.appendChild(td);div=document.createElement('div');div.className='d4cwidget-table__cell-container';if(field.type==="int"||field.type==="double"){div.className+=' d4cwidget-table__cell-container__right-aligned';}
td.appendChild(div);var newScope,node;if(customTemplate){newScope=$scope.$new(true);newScope.record=record;newScope.currentField=field.name;newScope.currentValue=record.fields[field.name];newScope.currentFormattedValue=fieldValue;node=$compile('<div inject></div>',$transclude)(newScope)[0];}else{newScope=$scope.$new(false);newScope.recordFields=record.fields[field.name];if(field&&field.type==='geo_point_2d'){newScope.fieldValue=fieldValue;node=$compile('<d4c-geotooltip width="300" height="300" coords="recordFields">'+fieldValue+'</d4c-geotooltip>')(newScope)[0];div.dir='ltr';}else if(field&&field.type==='geo_shape'){newScope.fieldValue=$filter('truncate')(fieldValue);node=$compile('<d4c-geotooltip width="300" height="300" geojson="recordFields">'+fieldValue+'</d4c-geotooltip>')(newScope)[0];div.dir='ltr';}else if(field&&field.type==='file'){var html=$filter('nofollow')($filter('prettyText')(fieldValue)).toString();html=html.replace(/<a /,'<a d4c-resource-download-conditions ');if(!html){node=document.createElement('span');}else{node=$compile(html)(newScope)[0];node.title=record.fields[field.name]?record.fields[field.name].filename:'';}
div.dir='ltr';}else{node=document.createElement('span');node.title=fieldValue;node.innerHTML=$filter('nofollow')($filter('prettyText')(fieldValue));if(field&&field.type==='text'){div.dir=$scope.context.dataset.metas.language==='ar'?'rtl':'ltr';}}}
div.appendChild(node);}
return tr;};var deleteOneRecord=function(index){var record=$element[0].getElementsByClassName('record-'+index)[0];if(record){record.parentNode.removeChild(record);}};var getRowRecordNumber=function(rowTr){var num;angular.forEach(rowTr.classList,function(className){if(className.startsWith('record-')){num=parseInt(className.substr(7),10);}});return num;};var displayRecords=function(){var offsetHeight=recordsArea[0].offsetHeight;var scrollTop=recordsArea[0].scrollTop;var recordHeight=recordsBody.find('tr').eq(1).height();var placeholderTop=$element.find('.js-placeholder-top')[0];var placeholderBot=$element.find('.js-placeholder-bottom')[0];if(recordHeight){startIndex=Math.max(Math.floor((scrollTop-(extraRecords*recordHeight))/recordHeight),0);endIndex=Math.min(Math.ceil((scrollTop+offsetHeight+(extraRecords*recordHeight))/recordHeight),$scope.records.length);}else{startIndex=0;endIndex=$scope.records.length;}
startIndex=startIndex&&startIndex%2?startIndex+1:startIndex;var scrollDown=startIndex-lastStartIndex>0||endIndex-lastEndIndex>0;if(startIndex===lastStartIndex&&endIndex===lastEndIndex){return;}
var tr,trInDom,visible,count,i,newHeight;if(!placeholderTop){tr=document.createElement('tr');tr.className='js-placeholder-top';tr.style.height='0px';recordsBody[0].appendChild(tr);placeholderTop=$element.find('.js-placeholder-top')[0];}
if(!placeholderBot){tr=document.createElement('tr');tr.className='js-placeholder-bottom';tr.style.height='0px';recordsBody[0].appendChild(tr);placeholderBot=$element.find('.js-placeholder-bottom')[0];}
if(!$scope.layout.length&&$scope.records.length){var numberRecordsToRender=Math.min($scope.records.length,$scope.resultsPerPage);for(i=0;i<numberRecordsToRender;i++){renderOneRecord(i,$scope.records,'end');}}
else{if(scrollDown){for(i=0;i<startIndex;i++){deleteOneRecord(i);}
placeholderTop.style.height=startIndex*recordHeight+'px';trInDom=$element[0].getElementsByTagName('tbody')[0].getElementsByTagName('tr');visible=trInDom.length>2;var lastRecordNumber=visible?getRowRecordNumber(trInDom[trInDom.length-2]):startIndex;count=0;for(i=lastRecordNumber+1;i<endIndex;i++){renderOneRecord(i,$scope.records,'end');count++;}
newHeight=visible?$(placeholderBot).height()-count*recordHeight:($scope.records.length-endIndex)*recordHeight;newHeight=newHeight>0?newHeight:0;placeholderBot.style.height=newHeight+'px';}else{count=0;for(i=endIndex+1;i<$scope.records.length;i++){deleteOneRecord(i);count++;}
var deltaRecords=($scope.records.length-(endIndex+1));deltaRecords=deltaRecords>=0?deltaRecords:0;placeholderBot.style.height=deltaRecords*recordHeight+'px';trInDom=$element[0].getElementsByTagName('tbody')[0].getElementsByTagName('tr');visible=trInDom.length>2;var firstRecordNumber=visible?getRowRecordNumber(trInDom[1]):endIndex;count=0;for(i=firstRecordNumber-1;i>=startIndex;i--){renderOneRecord(i,$scope.records,'begin');count++;}
newHeight=visible?$(placeholderTop).height()-count*recordHeight:startIndex*recordHeight;newHeight=newHeight>0?newHeight:0;placeholderTop.style.height=newHeight+'px';}}
lastStartIndex=startIndex;lastEndIndex=endIndex;};$scope.$watchCollection('records',function(newValue,oldValue){if(newValue!==oldValue){displayRecords();$scope.computeLayout();if(!$infiniteScrollElement){$infiniteScrollElement=$element.find('[infinite-scroll]');}
if($element.height()>$infiniteScrollElement.height()){$scope.loadMore();}}});$scope.context.wait().then(function(){if($scope.displayedFields){$scope.displayedFieldsArray=D4C.ArrayUtils.fromCSVString($scope.displayedFields);}else{if($scope.context.dataset.extra_metas&&$scope.context.dataset.extra_metas.visualization&&angular.isArray($scope.context.dataset.extra_metas.visualization.table_fields)&&$scope.context.dataset.extra_metas.visualization.table_fields.length>0){$scope.displayedFieldsArray=$scope.context.dataset.extra_metas.visualization.table_fields;}else{$scope.displayedFieldsArray=null;}}
if(!$scope.context.parameters.sort&&$scope.context.dataset.extra_metas&&$scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.table_default_sort_field){var sortField=$scope.context.dataset.extra_metas.visualization.table_default_sort_field;if($scope.context.dataset.extra_metas.visualization.table_default_sort_direction==='-'){sortField='-'+sortField;}
$scope.context.parameters.sort=sortField;}
$scope.displayDatasetFeedback=$scope.datasetFeedback==='true'&&$scope.context.dataset.getExtraMeta('explore','feedback_enabled');$scope.staticSearchOptions={rows:$scope.resultsPerPage};DebugLogger.log('table -> dataset watch -> refresh records');var fieldsForVisualization=$filter('fieldsForVisualization')($scope.context.dataset.fields,'table');datasetFields=$filter('fieldsFilter')(fieldsForVisualization,$scope.displayedFieldsArray);refreshRecords(true);$scope.$watch('context.parameters',function(){DebugLogger.log('table -> searchOptions watch -> refresh records');$scope.layout=[];$scope.working=true;rememberScrollLeft();recordsBody.empty();refreshRecords(true);},true);});var isRtl=($element.css('direction')==='rtl');var rtlScrollType=$.support.rtlScrollType;var synchronizeHeaderPosition;if(!isRtl){synchronizeHeaderPosition=function(){recordsHeader.css({left:-recordsArea.scrollLeft()});};}else if(rtlScrollType==='reverse'){synchronizeHeaderPosition=function(){recordsHeader.css({left:recordsArea.scrollLeft()});};}else if(rtlScrollType==='default'){synchronizeHeaderPosition=function(){var maxScrollLeft=recordsArea[0].scrollWidth-recordsArea[0].clientWidth;recordsHeader.css({left:maxScrollLeft-recordsArea.scrollLeft()});};}else if(rtlScrollType==='negative'){synchronizeHeaderPosition=function(){recordsHeader.css({left:-recordsArea.scrollLeft()});};}
var lastScrollLeft;var rememberScrollLeft=function(){if(!endIndex){return;}
lastScrollLeft=recordsArea.scrollLeft();};var restoreScrollLeft=function(){if(!lastScrollLeft){return;}
recordsArea.scrollLeft(lastScrollLeft);lastScrollLeft=undefined;};var lastRecordDisplayed=0;recordsArea.on('scroll',function(){synchronizeHeaderPosition();var recordDisplayed=Math.max(Math.floor((recordsArea[0].scrollTop)/recordsBody.find('tr').eq(1).height()),0);if(Math.abs(recordDisplayed-lastRecordDisplayed)<extraRecords&&recordDisplayed>startIndex){return;}
lastRecordDisplayed=recordDisplayed;displayRecords();});var computeStyle=function(tableId,disableMaxWidth){var styles='';for(var i=0;i<$scope.layout.length;i++){var j=i+1;var maxWidth=disableMaxWidth?'max-width: none; ':'';styles+='#'+tableId+' .d4cwidget-table__header tr th:nth-child('+j+') > div, '+'#'+tableId+' .d4cwidget-table__records tr td:nth-child('+j+') > div '+'{ width: '+$scope.layout[i]+'px; '+maxWidth+'} ';}
return styles;};$scope.computeLayout=function(){var elementHeight;if(!$scope.layout.length&&$scope.records.length){if(!$element.attr('id')){$element.attr('id',tableId);}
if($element.hasClass('d4cwidget-table--embedded')){elementHeight=$(window).height()-$element.offset().top;$element.height(elementHeight);}else{elementHeight=$element.height();}
var bodyOffset=0;if($scope.displayDatasetFeedback){bodyOffset=$element.find('.table-feedback-new').height()+5;}
recordsArea.height(elementHeight-25-bodyOffset);var node=document.getElementById(styleSheetId);if(node&&node.parentNode){node.parentNode.removeChild(node);}
$element.find('.d4cwidget-table__internal-header-table-header').hide().attr('role','representation');$element.find('.d4cwidget-table__internal-table-header').show().removeAttr('role');var totalWidth=0;angular.forEach($element.find('.d4cwidget-table__internal-table-header .d4cwidget-table__cell-container'),function(thDiv,i){$scope.layout[i]=$(thDiv).width()+8;totalWidth+=$scope.layout[i];});$scope.layout[0]=30;var css=document.createElement('style');var styles=computeStyle(tableId,false);css.id=styleSheetId;css.type='text/css';if(css.styleSheet){css.styleSheet.cssText=styles;}else{css.appendChild(document.createTextNode(styles));}
$element[0].appendChild(css);$element.find('.d4cwidget-table__internal-table-header').hide().attr('role','representation');$element.find('.d4cwidget-table__internal-header-table-header').show().removeAttr('role');}
if($scope.layout.length){$scope.working=false;}};}],link:function(scope,element,attrs,ctrls){var autoResizeCtrl=ctrls[0]||ctrls[1];if(angular.isDefined(autoResizeCtrl)&&autoResizeCtrl!==null){autoResizeCtrl.onResize=function(){scope.layout=[];scope.computeLayout();};}}};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cSpinner',['D4CWidgetsConfig',function(D4CWidgetsConfig){return{restrict:'E',replace:true,template:function(element,attrs){var spinner;if(Modernizr&&Modernizr.cssanimations&&Modernizr.svg){spinner=''+'<img src="'+D4CWidgetsConfig.basePath+'src/img/spinner.gif" '+'     class="d4cwidget-spinner d4cwidget-spinner--gif"/>';}else{spinner=''+'<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg" version="1.1"'+'     class="d4cwidget-spinner d4cwidget-spinner--svg">'+'    <rect x="0" y="0" width="30" height="30" class="d4cwidget-spinner__cell-11"></rect>'+'    <rect x="35" y="0" width="30" height="30" class="d4cwidget-spinner__cell-12"></rect>'+'    <rect x="70" y="0" width="30" height="30" class="d4cwidget-spinner__cell-13"></rect>'+'    <rect x="0" y="35" width="30" height="30" class="d4cwidget-spinner__cell-21"></rect>'+'    <rect x="35" y="35" width="30" height="30" class="d4cwidget-spinner__cell-22"></rect>'+'    <rect x="70" y="35" width="30" height="30" class="d4cwidget-spinner__cell-23"></rect>'+'    <rect x="0" y="70" width="30" height="30" class="d4cwidget-spinner__cell-31"></rect>'+'    <rect x="35" y="70" width="30" height="30" class="d4cwidget-spinner__cell-32"></rect>'+'    <rect x="70" y="70" width="30" height="30" class="d4cwidget-spinner__cell-33"></rect>'+'</svg>';}
if('withBackdrop'in attrs){spinner='<div class="d4cwidget-spinner__backdrop">'+spinner+'</div>';}
return spinner;}};}]);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cResults',['D4CAPI',function(D4CAPI){return{restrict:'A',scope:true,priority:1001,controller:['$scope','$attrs',function($scope,$attrs){var loadResults=function(context){var options=angular.extend({},context.parameters,{'rows':$attrs.d4cResultsMax});var variable=$attrs.d4cResults||'results';$scope.loading=true;if(context.type==='catalog'){angular.extend(options,{extrametas:'true',interopmetas:'true'});D4CAPI.datasets.search(context,options).success(function(data){$scope[variable]=data.datasets;context.nhits=data.nhits;$scope.loading=false;}).error(function(){$scope.loading=false;});}else if(context.type==='dataset'&&context.dataset){D4CAPI.records.search(context,options).success(function(data){$scope[variable]=data.records;context.nhits=data.nhits;$scope.loading=false;}).error(function(){$scope.loading=false;});}};var firstLoad=true;$scope.$watch($attrs.d4cResultsContext,function(nv,ov){if(!!(nv.type==='catalog'||(nv.type==='dataset'&&nv.dataset))&&(!angular.equals(nv.parameters,ov.parameters)||firstLoad)){firstLoad=false;loadResults(nv);}},true);}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMapLegacy',['ModuleLazyLoader',function(ModuleLazyLoader){var ICON_CIRCLE='<?xml version="1.0" encoding="UTF-8" standalone="no"?>'+'<svg width="19px" height="19px" viewBox="0 0 19 19" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">'+'    <path d="M18,9.50004182 C18,14.1944851 14.1944015,18.0000836 9.49995818,18.0000836 C4.80551469,18.0000836 0.99991635,14.1944851 0.99991635,9.50004182 C0.99991635,4.80559834 4.80551469,1 9.49995818,1 C14.1944015,1 18,4.80559834 18,9.50004182 L18,9.50004182 Z" id="path8568" fill="#000000"></path>'+'    <rect style="opacity: 0" x="0" y="0" width="19" height="19"></rect>'+'</svg>';return{restrict:'E',scope:{context:'=',embedMode:'@',autoResize:'@',mapContext:'=?',location:'@',basemap:'@',isStatic:'@',showFilters:'@',itemClickContext:'=',colorBy:'@',colorByField:'@',colorByContext:'=',colorByAggregationKey:'@',colorByKey:'@',colorByExpression:'@',colorByFunction:'@',colorByRanges:'@',colorByRangesColors:'@'},replace:true,template:function(tElement){tElement.contents().wrapAll('<div>');if(tElement.contents().length>0&&tElement.contents().html().trim().length>0){tElement.contents().wrapAll('<div>');tElement.data('tooltip-template',tElement.children().html());}
return'<div class="d4cwidget d4cwidget-map">'+'<div class="d4cwidget-map__map"></div>'+'<div class="d4cwidget-overlay map d4cwidget-overlay--opaque" ng-show="pendingRequests.length && initialLoading"><d4c-spinner></d4c-spinner></div>'+'</div>';},link:function(scope,element){if(angular.isUndefined(scope.mapContext)){scope.mapContext={};if(scope.location){scope.mapContext.location=scope.location;}
if(scope.basemap){scope.mapContext.basemap=scope.basemap;}}
function resizeMap(){if($('.d4cwidget-map__map').length>0){$('.d4cwidget-map__map').height(Math.max(200,$(window).height()-$('.d4cwidget-map__map').offset().top));}}
if(scope.autoResize==='true'){$(window).on('resize',resizeMap);resizeMap();}
ModuleLazyLoader('leaflet').then(function(){L.Control.FilterByView=L.Control.extend({options:{position:'topright'},onAdd:function(map){var className='leaflet-control-filterview',classNames=className+' leaflet-bar leaflet-control',container=L.DomUtil.create('div',classNames);var link=L.DomUtil.create('a','leaflet-bar-part',container);link.href='#';if(scope.mapViewFilter){container.className=classNames+' active';}
L.DomEvent.on(link,'click',L.DomEvent.stopPropagation).on(link,'click',L.DomEvent.preventDefault).on(link,'click',function(){scope.$apply(function(scope){scope.mapViewFilter=!scope.mapViewFilter;});if(scope.mapViewFilter){container.className=classNames+' active';}else{container.className=classNames;}
return false;}).on(link,'dblclick',L.DomEvent.stopPropagation);scope.$watch('mapViewFilter',function(newValue,oldValue){if(newValue===oldValue)return;if(newValue){container.className=classNames+' active';}else{container.className=classNames;}});return container;}});scope.initMap=function(dataset,embedMode,basemapsList,translate,geobox,basemap,staticMap,prependAttribution,language){var mapOptions={basemapsList:basemapsList,worldCopyJump:true,minZoom:2,basemap:basemap,dragging:!staticMap,zoomControl:!staticMap,prependAttribution:prependAttribution};if(staticMap){mapOptions.doubleClickZoom=false;mapOptions.scrollWheelZoom=false;}
var map=new L.D4CMap(element.children()[0],mapOptions);map.addControl(new L.Control.Scale());if(geobox&&!staticMap){var geocoder=L.Control.geocoder({placeholder:translate('Find a place...'),errorMessage:translate('Nothing found.'),geocoder:new L.Control.Geocoder.Nominatim({serviceUrl:"https://nominatim.openstreetmap.org/",geocodingQueryParams:{"accept-language":language||'en',"polygon_geojson":true}})});geocoder.markGeocode=function(result){map.fitBounds(result.bbox);if(result.properties.geojson){var highlight=L.geoJson(result.properties.geojson,{style:function(){return{opacity:0,fillOpacity:0.8,fillColor:'orange',className:'leaflet-geocoder-highlight'};}});map.addLayer(highlight);$timeout(function(){element.addClass('geocoder-highlight-on');},0);$timeout(function(){element.removeClass('geocoder-highlight-on');map.removeLayer(highlight);},2500);}};map.addControl(geocoder);}
if(embedMode!=='true'){if(scope.showFilters==='true'){map.addControl(new L.Control.FilterByView());}}
if(!staticMap){map.addControl(new L.Control.Locate({maxZoom:18}));}
map.on('popupclose',function(e){jQuery(e.popup.getContent()).trigger('popupclose');});scope.map=map;};});},controller:['$scope','$http','$compile','$q','$filter','$element','translate','D4CAPI','DebugLogger','D4CWidgetsConfig','$attrs',function($scope,$http,$compile,$q,$filter,$element,translate,D4CAPI,DebugLogger,D4CWidgetsConfig,$attrs){DebugLogger.log('init map');$scope.pendingRequests=$http.pendingRequests;$scope.initialLoading=true;if($scope.itemClickMapField&&!$scope.itemClickContextField||!$scope.itemClickMapField&&$scope.itemClickContextField){console.log('ERROR: You need to configure both item-click-context-field and item-click-map-field.');}
var shapeField=null;var createMarker=null;var colorAggregation;var locationParameterFunctions={delimiter:',',accuracy:5,formatLatLng:function(latLng){var lat=L.Util.formatNum(latLng.lat,this.accuracy);var lng=L.Util.formatNum(latLng.lng,this.accuracy);return new L.latLng(lat,lng);},getLocationParameterAsArray:function(location){return location.split(this.delimiter);},getLocationParameterFromMap:function(map){var center=this.formatLatLng(map.getCenter());return map.getZoom()+this.delimiter+center.lat+this.delimiter+center.lng;},getCenterFromLocationParameter:function(location){var a=this.getLocationParameterAsArray(location);return new L.latLng(a[1],a[2]);},getZoomFromLocationParameter:function(location){return this.getLocationParameterAsArray(location)[0];}};var propagateSpatialItemClickToContext=function(context,shape){D4C.GeoFilter.addGeoFilterFromSpatialObject(context.parameters,shape);};var propagateItemClickToContext=function(context,mapField,contextField,record){if(angular.isDefined(record.fields[mapField])){context.parameters['refine.'+contextField]=record.fields[mapField];}};var propagateToContext=function(context,mapField,contextField,shape,record){if(!mapField&&!contextField){$scope.$apply(function(){propagateSpatialItemClickToContext(context,shape);});}else if(record){$scope.$apply(function(){propagateItemClickToContext(context,mapField,contextField,record);});}else{var options={};D4C.GeoFilter.addGeoFilterFromSpatialObject(options,shape);jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters,{'rows':1});D4CAPI.records.download($scope.context,options).success(function(data){propagateItemClickToContext(context,mapField,contextField,data[0]);});}};var clickOnItem=function(latLng,shape,recordid,record){var mapField,contextField,context;if($scope.itemClickContext){if(angular.isArray($scope.itemClickContext)){angular.forEach($scope.itemClickContext,function(context){contextField=$attrs['itemClick'+D4C.StringUtils.capitalize(context.name)+'ContextField'];mapField=$attrs['itemClick'+D4C.StringUtils.capitalize(context.name)+'MapField'];propagateToContext(context,mapField,contextField,shape,record);});}else{context=$scope.itemClickContext;contextField=$attrs['itemClick'+D4C.StringUtils.capitalize(context.name)+'ContextField']||$attrs.itemClickContextField;mapField=$attrs['itemClick'+D4C.StringUtils.capitalize(context.name)+'MapField']||$attrs.itemClickMapField;propagateToContext(context,mapField,contextField,shape,record);}}else{var newScope=$scope.$new(false);if(recordid){newScope.recordid=recordid;}else{newScope.shape=shape;}
var popupOptions={offset:[0,-30],maxWidth:250,minWidth:250,autoPanPaddingTopLeft:[50,305],autoPan:!$scope.mapViewFilter&&!$scope.staticMap};var html=$element.data('tooltip-template');if(angular.isUndefined(html)||!angular.isString(html)||html.trim()===''){if($scope.context.dataset.extra_metas&&$scope.context.dataset.extra_metas.visualization&&$scope.context.dataset.extra_metas.visualization.map_tooltip_html){html=$scope.context.dataset.extra_metas.visualization.map_tooltip_html;}else{html='';}}
newScope.template=html;var popup=new L.Popup(popupOptions).setLatLng(latLng).setContent($compile('<d4c-map-tooltip shape="shape" context="context" recordid="recordid" map="map" template="{{template}}"></d4c-map-tooltip>')(newScope)[0]);popup.openOn($scope.map);}};var numberFormatting=function(number){number=Math.round(number*100)/100;number=$filter('number')(number);return number;};var addClusterToLayerGroup=function(layerGroup){return function(cluster,maximum){if(cluster.count>1){var clusterMarker=new L.ClusterMarker(cluster.cluster_center,{geojson:cluster.cluster,value:cluster.count,total:maximum,numberFormattingFunction:numberFormatting,color:$scope.markerColor});if(!$scope.staticMap){clusterMarker.on('click',function(e){if($scope.map.getZoom()===$scope.map.getMaxZoom()){clickOnItem(marker.getLatLng(),cluster.cluster);}else{$scope.$apply(function(){if(cluster.cluster){if(cluster.cluster.type==='Point'){$scope.map.fitBounds([[cluster.cluster.coordinates[1],cluster.cluster.coordinates[0]],[cluster.cluster.coordinates[1],cluster.cluster.coordinates[0]]]);}else{var options={};var polygonParameter=D4C.GeoFilter.getBoundsAsPolygonParameter(L.geoJson(cluster.cluster).getBounds());jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters,{'geofilter.polygon':polygonParameter});D4CAPI.records.boundingbox($scope.context,options).success(function(data){$scope.map.fitBounds([[data.bbox[1],data.bbox[0]],[data.bbox[3],data.bbox[2]]]);});}}else{$scope.map.setView(e.latlng,$scope.map.getZoom()+2);}});}});}
layerGroup.addLayer(clusterMarker);}else{var singleMarker=createMarker(cluster.cluster_center);singleMarker.on('click',function(e){clickOnItem(e.target.getLatLng(),cluster.cluster);});layerGroup.addLayer(singleMarker);}};};var refreshClusteredGeo=function(showPolygons){var options={'geofilter.polygon':D4C.GeoFilter.getBoundsAsPolygonParameter($scope.map.getBounds()),'clusterprecision':$scope.map.getZoom(),'clusterdistance':50,'return_polygons':showPolygons};jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters);if($scope.currentClusterRequestCanceler){$scope.currentClusterRequestCanceler.resolve();}
$scope.currentClusterRequestCanceler=$q.defer();D4CAPI.records.geo($scope.context,options,$scope.currentClusterRequestCanceler.promise).success(function(data){var clusters=data.clusters;$scope.records=clusters?clusters.length:0;var layerGroup=new L.LayerGroup();var clusterStacker=addClusterToLayerGroup(layerGroup);for(var i=0;i<clusters.length;i++){var cluster=clusters[i];clusterStacker(cluster,data.count.max);}
layerGroup.addTo($scope.map);if($scope.layerGroup){$scope.map.removeLayer($scope.layerGroup);}
$scope.layerGroup=layerGroup;$scope.initialLoading=false;$scope.currentClusterRequestCanceler=null;});};var refreshShapePreview=function(){var options={'geofilter.polygon':D4C.GeoFilter.getBoundsAsPolygonParameter($scope.map.getBounds()),'clusterprecision':$scope.map.getZoom()};jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters);options.rows=1000;if($scope.currentClusterRequestCanceler){$scope.currentClusterRequestCanceler.resolve();}
$scope.currentClusterRequestCanceler=$q.defer();D4CAPI.records.geopreview($scope.context,options,$scope.currentClusterRequestCanceler.promise).success(function(data){var layerGroup=new L.LayerGroup();for(var i=0;i<data.length;i++){drawShapePreview(layerGroup,data[i]);}
layerGroup.addTo($scope.map);if($scope.layerGroup){$scope.map.removeLayer($scope.layerGroup);}
$scope.layerGroup=layerGroup;$scope.initialLoading=false;$scope.currentClusterRequestCanceler=null;});};var drawShapePreview=function(layerGroup,shape){var geojsonMarkerOptions={radius:3,fillColor:"#0033ff",color:"#0000ff",weight:1,opacity:1,fillOpacity:0.5};var shapeLayer=new L.GeoJSON(shape.geometry,{pointToLayer:function(feature,latlng){return L.circleMarker(latlng,geojsonMarkerOptions);}});layerGroup.addLayer(shapeLayer);shapeLayer.on('click',function(e){clickOnItem(e.latlng,shape.geometry,shape.id);});};var getAggregationColor=function(value){var i;for(i=0;i<colorAggregation.ranges.length;i++){if(value<colorAggregation.ranges[i]){return colorAggregation.colors[i];}}
return colorAggregation.colors[colorAggregation.colors.length-1];};var refreshAggregation=function(){var options=angular.extend({},colorAggregation.context.parameters,{'join.geo.remotedataset':$scope.context.dataset.datasetid,'join.geo.localkey':colorAggregation.localkey,'join.geo.remotekey':colorAggregation.remotekey,'y.agg.expr':colorAggregation.expr,'y.agg.func':colorAggregation.func});var layerGroup=new L.LayerGroup();var bounds=new L.LatLngBounds();var markers=new L.FeatureGroup();D4CAPI.records.analyze(colorAggregation.context,options).success(function(data){angular.forEach(data,function(result){var records=result.x;var value=result.agg;angular.forEach(records,function(record){drawGeoJSON(record,layerGroup,bounds,markers,getAggregationColor(value));});});if($scope.layerGroup){$scope.map.removeLayer($scope.layerGroup);}
layerGroup.addLayer(markers);layerGroup.addTo($scope.map);$scope.layerGroup=layerGroup;$scope.initialLoading=false;});};var refreshRawGeo=function(){var options={};options['geofilter.polygon']=D4C.GeoFilter.getBoundsAsPolygonParameter($scope.map.getBounds());jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters);DebugLogger.log('map -> download');D4CAPI.records.download($scope.context,options).success(function(data,status,headers,config){$scope.records=data;$scope.error='';$scope.nhits=data.length;var layerGroup=new L.LayerGroup();var bounds=new L.LatLngBounds();var markers=new L.FeatureGroup();for(var i=0;i<data.length;i++){var record=data[i];drawGeoJSON(record,layerGroup,bounds,markers);}
if($scope.layerGroup)
$scope.map.removeLayer($scope.layerGroup);layerGroup.addLayer(markers);layerGroup.addTo($scope.map);$scope.layerGroup=layerGroup;$scope.initialLoading=false;}).error(function(data,status,headers,config){$scope.error=data.error;$scope.initialLoading=false;});};var drawGeoJSON=function(record,layerGroup,bounds,markers,color){var geoJSON;var drawColor=color;if($scope.colorBy==='value'){var colorByVal=record.fields[colorAggregation.field];if(colorByVal){drawColor=getAggregationColor(colorByVal);}}
if(shapeField){if(record.fields[shapeField]){geoJSON=record.fields[shapeField];if(geoJSON.type==='Point'&&angular.isDefined(record.geometry)){geoJSON=record.geometry;}}else{return;}}else if(record.geometry){geoJSON=record.geometry;}else{return;}
if(geoJSON.type=='Point'){var point=new L.LatLng(geoJSON.coordinates[1],geoJSON.coordinates[0]);var marker=createMarker(point,drawColor);marker.on('click',function(e){clickOnItem(e.target.getLatLng(),geoJSON,null,record);});markers.addLayer(marker);bounds.extend(point);}else{var layer;if(drawColor){layer=new L.GeoJSON(geoJSON,{style:function(feature){var opts={radius:3,weight:1,opacity:0.9,fillOpacity:0.5,color:drawColor};opts.fillColor=drawColor;if(feature.geometry.type==='LineString'||feature.geometry.type==='MultiLineString'){opts.weight=5;opts.color=drawColor;}else{opts.color="#fff";}
return opts;}});}else{layer=new L.GeoJSON(geoJSON);}
layer.on('click',function(e){clickOnItem(L.latLng(record.geometry.coordinates[1],record.geometry.coordinates[0]),geoJSON,record.recordid,record);});layerGroup.addLayer(layer);bounds.extend(layer.getBounds());}};$scope.$watch('context.parameters',function(newValue,oldValue){if(newValue===oldValue)return;if($scope.initialLoading)return;DebugLogger.log('map -> searchOptions watch -> refresh records');if(!newValue['geofilter.polygon']&&oldValue['geofilter.polygon']){$scope.mapViewFilter=false;return;}else if(!oldValue['geofilter.polygon']&&newValue['geofilter.polygon']){$scope.mapViewFilter=true;return;}
if($scope.mapViewFilter){refreshRecords(false);}else{refreshRecords(true);}},true);if($scope.colorBy==='aggregation'){$scope.$watch('colorByContext.parameters',function(){if($scope.map){refreshRecords(false);}},true);}
$scope.$watch('mapContext.location',function(){if($scope.map){refreshRecords(false);}},true);var refreshRecords=function(globalSearch){var DOWNLOAD_CAP=200;var SHAPEPREVIEW_HIGHCAP=500000;var POLYGONCLUSTERS_HIGHCAP=500000;var refresh=function(data){if($scope.colorBy==='aggregation'){refreshAggregation();}else if($scope.colorBy==='value'||data.count<DOWNLOAD_CAP||$scope.map.getZoom()===$scope.map.getMaxZoom()){refreshRawGeo();}else if(data.count<SHAPEPREVIEW_HIGHCAP){if(data.geometries.Point&&data.geometries.Point>data.count/2){refreshClusteredGeo(data.count<=POLYGONCLUSTERS_HIGHCAP);}else{refreshShapePreview();}}else{refreshClusteredGeo(data.count<=POLYGONCLUSTERS_HIGHCAP);}};var options={'without_bbox':!globalSearch};if(!globalSearch){options['geofilter.polygon']=D4C.GeoFilter.getBoundsAsPolygonParameter($scope.map.getBounds());}
jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters);D4CAPI.records.boundingbox($scope.context,options).success(function(data){if(globalSearch){if(data.bbox.length>0){var oldBounds=$scope.map.getBounds();$scope.map.fitBounds([[data.bbox[1],data.bbox[0]],[data.bbox[3],data.bbox[2]]]);var newBounds=$scope.map.getBounds();if(angular.equals(oldBounds,newBounds)){refresh(data);}}else{refresh(data);}}else{refresh(data);}});};var onViewportMove=function(map){var size=map.getSize();if(size.x>0&&size.y>0){$scope.mapContext.location=locationParameterFunctions.getLocationParameterFromMap(map);if($scope.mapViewFilter){$scope.context.parameters['geofilter.polygon']=D4C.GeoFilter.getBoundsAsPolygonParameter(map.getBounds());}}};var unwatchSchema=$scope.$watch('[context.dataset, colorByContext.dataset]',function(newValue,oldValue){if(!newValue[0]||!newValue[0].datasetid)return;if($scope.colorBy==='aggregation'&&(!newValue[1]||!newValue[1].datasetid))return;if($scope.colorBy==='aggregation'){colorAggregation={context:$scope.colorByContext,localkey:$scope.colorByAggregationKey||$scope.colorByKey,remotekey:$scope.colorByKey,expr:$scope.colorByExpression,func:$scope.colorByFunction,ranges:$scope.colorByRanges.split(','),colors:$scope.colorByRangesColors.split(',')};}else if($scope.colorBy==='value'){colorAggregation={field:$scope.colorByField,ranges:$scope.colorByRanges.split(','),colors:$scope.colorByRangesColors.split(',')};}
newValue=newValue[0];if($scope.context.parameters['geofilter.polygon']){$scope.mapViewFilter=true;}else{$scope.mapViewFilter=false;}
$scope.staticMap=$scope.isStatic==='true'||$scope.context.parameters.static==='true';var unwatchInit=$scope.$watch('initMap',function(){if($scope.initMap){unwatchInit();$scope.initMap(newValue,$scope.embedMode,D4CWidgetsConfig.basemaps,translate,D4CWidgetsConfig.mapGeobox,$scope.mapContext.basemap,$scope.staticMap,D4CWidgetsConfig.mapPrependAttribution,D4CWidgetsConfig.language);}});unwatchSchema();$scope.staticSearchOptions={rows:$scope.recordLimit,dataset:$scope.context.dataset.datasetid,format:'json'};for(var i=0;i<newValue.fields.length;i++){var field=newValue.fields[i];if(field.type==='geo_shape'){shapeField=field.name;break;}}
var visualization={};if(newValue.extra_metas&&newValue.extra_metas.visualization){visualization=newValue.extra_metas.visualization;}
$scope.markerColor=visualization.map_marker_color||'#29398C';createMarker=function(latLng,color){return new L.VectorMarker(latLng,{color:color||$scope.markerColor,icon:angular.element('<div>'+ICON_CIRCLE+'</div>'),size:4,marker:!visualization.map_marker_hidemarkershape});};DebugLogger.log('map -> dataset watch -> refresh records');var mapInitWatcher=$scope.$watch('map',function(nv,ov){if(nv){$scope.$watch('mapViewFilter',function(newValue,oldValue){if(newValue===oldValue)return;if(newValue){$scope.context.parameters['geofilter.polygon']=D4C.GeoFilter.getBoundsAsPolygonParameter($scope.map.getBounds());}else{if($scope.context.parameters['geofilter.polygon'])
delete $scope.context.parameters['geofilter.polygon'];}});var boundsRetrieval=function(dataset){var deferred=$q.defer();if($scope.context.parameters.mapviewport){if($scope.context.parameters.mapviewport.substring(0,1)==='('){$scope.context.parameters.mapviewport=D4C.GeoFilter.getBoundsAsBboxParameter(D4C.GeoFilter.getPolygonParameterAsBounds($scope.context.parameters.mapviewport));}
deferred.resolve(D4C.GeoFilter.getBboxParameterAsBounds($scope.context.parameters.mapviewport));}else if($scope.context.parameters["geofilter.polygon"]){deferred.resolve(D4C.GeoFilter.getPolygonParameterAsBounds($scope.context.parameters["geofilter.polygon"]));}else{var options={};jQuery.extend(options,$scope.staticSearchOptions,$scope.context.parameters);D4CAPI.records.boundingbox($scope.context,options).success(function(data){if(data.count>0){deferred.resolve([[data.bbox[1],data.bbox[0]],[data.bbox[3],data.bbox[2]]]);}else{deferred.resolve([[-60,-180],[80,180]]);}});}
return deferred.promise;};var setMapView=function(){var deferred=$q.defer();if($scope.mapContext.location){DebugLogger.log('Location found');var center=locationParameterFunctions.getCenterFromLocationParameter($scope.mapContext.location);var zoom=locationParameterFunctions.getZoomFromLocationParameter($scope.mapContext.location);DebugLogger.log(center,zoom);nv.setView(center,zoom);refreshRecords(false);deferred.resolve();}else{DebugLogger.log('Use boundsRetrieval');boundsRetrieval($scope.context.dataset).then(function(bounds){if($scope.context.parameters.mapviewport){DebugLogger.log('Deleted mapviewport');delete $scope.context.parameters.mapviewport;}
DebugLogger.log(bounds);nv.fitBounds(bounds);deferred.resolve();});}
return deferred.promise;};setMapView().then(function(){DebugLogger.log('First onViewportMove');onViewportMove($scope.map);$scope.map.on('moveend',function(e){onViewportMove(e.target);if(!$scope.$$phase&&!$scope.$root.$$phase){$scope.$apply();}});});if(D4CWidgetsConfig.basemaps.length>1){$scope.map.on('baselayerchange',function(e){$scope.mapContext.basemap=e.layer.basemapId;if(!$scope.$$phase&&!$scope.$root.$$phase){$scope.$apply();}});}
mapInitWatcher();}});},true);}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTimescale',function(){return{restrict:'E',replace:true,scope:{context:'=',timeField:'@',defaultValue:'@'},template:''+'<div class="d4cwidget d4cwidget-timescale">'+'   <ul class="d4cwidget-timescale__scale-list">'+'       <li class="d4cwidget-timescale__scale" ng-class="{\'d4cwidget-timescale__scale--active\': scale == \'everything\' || !scale}"> <a class="d4cwidget-timescale__scale-link" href="#" ng-click="scale = \'everything\'; $event.preventDefault();" translate>Everything</a></li>'+'       <li class="d4cwidget-timescale__scale" ng-class="{\'d4cwidget-timescale__scale--active\': scale == \'year\'}">                 <a class="d4cwidget-timescale__scale-link" href="#" ng-click="scale = \'year\'; $event.preventDefault();" translate>Last 12 months</a></li>'+'       <li class="d4cwidget-timescale__scale" ng-class="{\'d4cwidget-timescale__scale--active\': scale == \'month\'}">                <a class="d4cwidget-timescale__scale-link" href="#" ng-click="scale = \'month\'; $event.preventDefault();" translate>Last 4 weeks</a></li>'+'       <li class="d4cwidget-timescale__scale" ng-class="{\'d4cwidget-timescale__scale--active\': scale == \'week\'}">                 <a class="d4cwidget-timescale__scale-link" href="#" ng-click="scale = \'week\'; $event.preventDefault();" translate>Last 7 days</a></li>'+'       <li class="d4cwidget-timescale__scale" ng-class="{\'d4cwidget-timescale__scale--active\': scale == \'day\'}">                  <a class="d4cwidget-timescale__scale-link" href="#" ng-click="scale = \'day\'; $event.preventDefault();" translate>Last 24 hours</a></li>'+'   </ul>'+'</div>',controller:['$scope','$attrs','$q',function($scope,$attrs,$q){var contexts=[];var timeFields={};var parameterName='q.timescale';var setTimeField=function(dataset){if(dataset){var fields=dataset.fields.filter(function(item){return item.type==='date'||item.type==='datetime';});if(fields.length>1){console.log('Warning: the dataset "'+dataset.getUniqueId()+'" has more than one date or datetime field, the first date or datetime field will be used. You can specify the field to use using the "time-field" parameter.');}
if(fields.length===0){console.log('Error: the dataset "'+dataset.getUniqueId()+'" doesn\'t have any date or datetime field, which is required for the Timerange widget.');}
timeFields[dataset.getUniqueId()]=fields[0].name;}};if(!angular.isArray($scope.context)){contexts.push($scope.context);}else{contexts=$scope.context;}
$q.all(contexts.map(function(context){return context.wait().then(function(dataset){if(angular.isDefined($attrs[context.name+"TimeField"])){timeFields[context.dataset.getUniqueId()]=$attrs[context.name+"TimeField"];}else if($scope.timeField){timeFields[context.dataset.getUniqueId()]=$scope.timeField;}else{setTimeField(dataset);}});})).then(function(){react(contexts,timeFields);var areAllParametersEmpty=function(){return contexts.reduce(function(allEmpty,context){return allEmpty&&!context.parameters[parameterName];},true);};$scope.$watch(areAllParametersEmpty,function(nv,ov){if(nv&&!ov){$scope.scale='everything';}},true);});var react=function(contexts,timeFields){$scope.scale=$scope.defaultValue||'everything';$scope.$watch('scale',function(scale){if(scale==='everything'){angular.forEach(contexts,function(context){delete context.parameters[parameterName];});return;}
var q=null;if(scale==='day'){q="#now(days=-1)";}else if(scale==='week'){q="#now(weeks=-1)";}else if(scale==='month'){q="#now(weeks=-4)";}else if(scale==='year'){q="#now(years=-1)";}
angular.forEach(contexts,function(context){context.parameters[parameterName]=timeFields[context.dataset.getUniqueId()]+'>='+q;});},true);};}]};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cDomainStatistics',['D4CAPI',function(D4CAPI){return{restrict:'AE',scope:true,controller:['$scope','$attrs',function($scope,$attrs){var setStatParameter=function(context,facetName,value){if(value.name===facetName){context.stats[facetName]=value.facets.length;return true;}
return false;};var init=$scope.$watch($attrs.context,function(nv){nv.stats={'dataset':0,'keyword':0,'publisher':0,'theme':0};D4CAPI.datasets.search(nv,{'facet':['keyword','publisher','theme'],'rows':0}).success(function(data){nv.stats.dataset=data.nhits;if(data.facet_groups){for(var i=0;i<data.facet_groups.length;i++){if(setStatParameter(nv,'keyword',data.facet_groups[i]))continue;if(setStatParameter(nv,'publisher',data.facet_groups[i]))continue;if(setStatParameter(nv,'theme',data.facet_groups[i]))continue;}}});init();},true);}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var functionUsesField=function(func){return['COUNT','CONSTANT'].indexOf(func)===-1;};mod.factory("requestData",['D4CAPI','$q','ChartHelper','AggregationHelper',function(D4CAPI,$q,ChartHelper,AggregationHelper){var buildTimescaleX=D4C.DateFieldUtils.getTimescaleX;var buildSearchOptions=function(query,timeSerieMode,precision,periodic){var i,breakdown,xs,search_options={dataset:query.config.dataset,x:[],sort:query.sort||'',maxpoints:query.maxpoints||''};xs=buildTimescaleX(query.xAxis,query.timescale);for(i=0;i<xs.length;i++){search_options.x.push(xs[i]);}
if(query.seriesBreakdown){breakdown=query.seriesBreakdown;xs=buildTimescaleX(breakdown,query.seriesBreakdownTimescale);for(i=0;i<xs.length;i++){search_options.x.push(xs[i]);}}
if(timeSerieMode||query.seriesBreakdown){search_options.sort=D4C.DateFieldUtils.getTimescaleSort(search_options.x);}
return search_options;};var parseCustomExpression=function(serie,serieprefix,parentserie_for_subseries){var regex=/([A-Z_-]*?)\((.*?)\)/g;var params2regex=/([A-Z_-]*?)\(([a-zA-Z0-9\.]+),\s?([0-9\.]+)\)/g;var aggregates_holder=parentserie_for_subseries||serie;var match;serie.compiled_expr=""+serie.expr;aggregates_holder.aggregates=[];var options={};match=regex.exec(serie.expr);while(match){var extended_match=params2regex.exec(match[0]);if(extended_match&&extended_match.length===4){match=extended_match;}
if(match&&(match.length===3||match.length===4)){if(match[2].indexOf('serie')===0){var compiled="operators."+match[1].toLowerCase()+".apply(null, accumulation['"+match[2]+"']";if(match.length===4){compiled+=", "+match[3];}
compiled+=")";serie.compiled_expr=serie.compiled_expr.replace(match[0],compiled);aggregates_holder.aggregates.push(match[2]);}else{options[serieprefix+'.func']=match[1];options[serieprefix+'.expr']=match[2];serie.compiled_expr+=serie.compiled_expr.replace(match[0],'y');}}
match=regex.exec(serie.expr);}
return options;};var generateSerieOptions=function(serie,serie_name,aggregations,parent_for_subseries){var options={};if(serie.func==="CUSTOM"){return parseCustomExpression(serie,'y.'+serie_name,parent_for_subseries);}
options['y.'+serie_name+'.expr']=serie.yAxis||serie.expr;options['y.'+serie_name+'.func']=serie.func;options['y.'+serie_name+'.cumulative']=serie.cumulative||false;if(serie.func==='QUANTILES'){if(!serie.subsets){serie.subsets=50;}
options['y.'+serie_name+'.subsets']=serie.subsets||50;}
if(serie.func==="CONSTANT"){options['y.'+serie_name+'.expr']=serie.yAxis||0;options['y.'+serie_name+'.func']="AVG";}
if(angular.isDefined(serie.multiplier)&&serie.multiplier!==""&&serie.multiplier!==null){options['y.'+serie_name+'.expr']+=" * "+serie.multiplier;}
return options;};var addSeriesToSearchOptions=function(search_options,serie,serie_name){var i,allQuantiles=true,temp_serie;if(serie.type&&(ChartHelper.isRangeChart(serie.type)||serie.type==='boxplot')){if(search_options.sort==='y.'+serie_name){search_options.sort='';}
if(serie.charts[0].func==='QUANTILES'){temp_serie=angular.copy(serie.charts[0]);for(i=1;i<serie.charts.length;i++){if(serie.charts[i].func!=='QUANTILES'||serie.charts[i-1].yAxis!==serie.charts[i].yAxis){allQuantiles=false;}else{temp_serie.subsets=temp_serie.subsets+","+serie.charts[i].subsets;}}}else{allQuantiles=false;}
if(allQuantiles){addSeriesToSearchOptions(search_options,temp_serie,serie_name);}else{for(i=0;i<serie.charts.length;i++){serie.charts[i].multiplier=serie.multiplier;addSeriesToSearchOptions(search_options,serie.charts[i],serie_name+'-range-'+i);}}}else{angular.extend(search_options,generateSerieOptions(serie,serie_name));}};return function(queries,search_parameters,timeSerieMode,precision,periodic,domain,apikey,canceller){var search_promises=[];var charts_by_query=[];var original_domain=domain;search_parameters=search_parameters||{};if(queries.length===1){if(['hour','minute','second'].indexOf(queries[0].timescale)!==-1){search_parameters.output_timezone='UTC';}}else if(['hour','minute','second'].indexOf(timeSerieMode)!==-1){search_parameters.output_timezone='UTC';}
angular.forEach(queries,function(query,query_index){var charts={};var search_options=buildSearchOptions(query,timeSerieMode,precision,periodic);angular.forEach(query.charts,function(chart,index){var serie_name='serie'+(query_index+1)+'-'+(index+1);addSeriesToSearchOptions(search_options,chart,serie_name);charts[serie_name]=chart;});domain=query.config.domain||original_domain;apikey=query.config.apikey||apikey;var virtualContext={domain:domain,domainUrl:D4CAPI.getDomainURL(domain),dataset:{'datasetid':search_options.dataset},apikey:apikey,parameters:{}};search_promises.push(D4CAPI.records.analyze(virtualContext,angular.extend({},search_parameters,query.config.options,search_options),canceller.promise));charts_by_query.push(charts);});return{promise:$q.all(search_promises),charts:charts_by_query};};}]);mod.directive("d4cHighchartsChart",['colorScale','requestData','translate','ModuleLazyLoader','AggregationHelper','ChartHelper','$rootScope','d4cNotificationService','$q','D4CWidgetsConfig',function(colorScale,requestData,translate,ModuleLazyLoader,AggregationHelper,ChartHelper,$rootScope,d4cNotificationService,$q,D4CWidgetsConfig){var translate_time=translate;var getDatasetUniqueId=function(dataset_id,domain){var uniqueid;if(domain){uniqueid=domain+"."+dataset_id;}else{uniqueid=ChartHelper.getDatasetUniqueId(dataset_id);}
return uniqueid;};var getTimeSerieMode=function(parameters){var precision,periodic,timeSerieMode;var timescale=parameters.timescale;if(!timescale){timescale=parameters.queries[0].timescale||false;}
if(timescale&&$.grep(parameters.queries,function(query){return query.sort;}).length===0){timeSerieMode=timescale;var tokens=timeSerieMode.split(' ');precision=tokens[0];periodic=tokens.length==2?tokens[1]:'';}else{timeSerieMode=false;precision=false;periodic=false;}
return{'precision':precision,'periodic':periodic,'timeSerieMode':timeSerieMode};};var getGlobalOptions=function(parameters,precision,periodic,chartplaceholder,domain){var datasetid;if(parameters.queries.length===0){parameters.xLabel='';}else{datasetid=getDatasetUniqueId(parameters.queries[0].config.dataset,domain);if(!angular.isDefined(parameters.xLabel)){parameters.xLabel=ChartHelper.getXLabel(datasetid,parameters.queries[0].xAxis,parameters.timescale);}}
if(angular.isUndefined(parameters.displayLegend)){parameters.displayLegend=true;}
parameters.labelsXLength=parameters.labelsXLength||12;var serieTitle='<span style="color:{series.color}">{series.name}</span>:';var options={chart:{},title:{text:''},credits:{enabled:false},series:[],xAxis:{title:{text:parameters.xLabel},labels:{step:1,rotation:-45,align:'right',useHTML:true,style:{direction:'initial'}},startOfWeek:1,minPadding:0,maxPadding:0,dateTimeLabelFormats:{second:'%H:%M:%S',minute:'%H:%M',hour:'%H:%M',day:'%e %b %y',week:'%e. %b',month:'%b \'%y',year:'%Y'}},legend:{enabled:!!parameters.displayLegend,useHTML:true,rtl:D4CWidgetsConfig.language==='ar'},yAxis:[],plotOptions:{series:{animation:false},columnrange:{pointPadding:0,groupPadding:0,borderWidth:0,tooltip:{pointFormat:serieTitle+' <b>{point.low}</b> - <b>{point.high}</b>'}},boxplot:{tooltip:{pointFormat:serieTitle+'<br>'+
translate('Maximum:')+' {point.high}<br>'+
translate('Upper quartile:')+' {point.q3}<br>'+
translate('Median:')+' {point.median}<br>'+
translate('Lower quartile:')+' {point.q1}<br>'+
translate('Minimum:')+' {point.low}<br>'}},arearange:{tooltip:{pointFormat:serieTitle+' <b>{point.low}</b> - <b>{point.high}</b>'}},areasplinerange:{tooltip:{pointFormat:serieTitle+' <b>{point.low}</b> - <b>{point.high}</b>'}},pie:{tooltip:{pointFormat:serieTitle+' <b>{point.y} ({point.percentage:.1f}%)</b>'},dataLabels:{formatter:function(){if(this.key.length>parameters.labelsXLength){return'<span title="'+this.key.replace('"','')+'" alt="'+this.key.replace('"','')+'">'+this.key.substring(0,parameters.labelsXLength-3)+'...'+"</span>";}else{return this.key;}}}},treemap:{tooltip:{pointFormat:'<span style="color:{series.color}">{point.name}</span>:'+'<b>{point.value}</b>'},layoutAlgorithm:'squarified',colorByPoint:true,dataLabels:{style:{textOutline:'none'},formatter:function(){if(this.key.length>parameters.labelsXLength){return'<span title="'+this.key.replace('"','')+'" alt="'+this.key.replace('"','')+'">'+this.key.substring(0,parameters.labelsXLength-3)+'...'+"</span>";}else{return this.key;}}}}},tooltip:{useHTML:true,valueDecimals:2,headerFormat:'{point.key}<br>',pointFormat:serieTitle+' <b style="display: inline-block">{point.y}</b>',formatter:function(tooltip){var items=this.points||angular.isArray(this)?this:[this],series=items[0].series,s=[];s=[tooltip.tooltipFooterHeaderFormatter(items[0])];angular.forEach(items,function(item){series=item.series;var value=(series.tooltipOptions.pointFormatter&&series.tooltipOptions.pointFormatter.bind(item.point)())||item.point.tooltipFormatter(series.tooltipOptions.pointFormat);s.push(value);});s.push(tooltip.options.footerFormat||'');if(D4CWidgetsConfig.language==='ar'){s.unshift('<div style="text-align:right">');s.push('</div>');}
return s.join('');}},noData:{style:{fontFamily:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif',fontWeight:'normal',fontSize:'1.4em',color:'#333',opacity:'0.5'}},lang:{noData:translate("No data available yet")}};var xAxisType=ChartHelper.getFieldType(datasetid,parameters.queries[0].xAxis);if(precision){options.xAxis.type='datetime';options.xAxis.maxZoom=3600000;options.chart.zoomType='xy';if(periodic){options.xAxis.showFirstLabel=true;}}else if(['double','int'].indexOf(xAxisType)!==-1&&parameters.queries[0].sort===""){options.xAxis.type="linear";}else{options.xAxis.type="category";options.xAxis.categories=[];}
if(periodic==="month"){options.xAxis.labels.format="{value: %B}";}else if(periodic==="weekday"){options.xAxis.labels.format="{value: %A}";if(precision==="hour"){options.xAxis.labels.format="{value: %A %Hh}";}}else if(periodic==="day"){options.xAxis.labels.format="{value: %d}";}else if(periodic==="hour"){options.xAxis.labels.format="{value: %H}";}
if(!precision){options.xAxis.labels.formatter=function(){if(this.value.length>parameters.labelsXLength){return'<span title="'+this.value.replace('"','')+'" alt="'+this.value.replace('"','')+'">'+this.value.substring(0,parameters.labelsXLength-3)+'...'+"</span>";}else{return this.value;}};}else{options.xAxis.labels.useHTML=false;}
if(parameters.singleAxis){var yAxisParameters={color:"#000000",scale:parameters.singleAxisScale,yRangeMin:parameters.yRangeMin,yRangeMax:parameters.yRangeMax,yStep:parameters.yStep,scientificDisplay:parameters.scientificDisplay};options.yAxis=[buildYAxis(parameters.singleAxisLabel,yAxisParameters,false)];}
for(var i=0;i<parameters.queries.length;i++){for(var j=0;j<parameters.queries[i].charts.length;j++){if(parameters.queries[i].charts[j].type==="spiderweb"||parameters.queries[i].charts[j].type==="polar"){options.chart.polar=true;options.xAxis.lineWidth=0;options.xAxis.tickmarkPlacement='on';options.xAxis.labels={};options.xAxis.title={};}
if(parameters.queries[i].charts[j].type==="polar"){options.plotOptions.series.pointPlacement='on';options.plotOptions.series.pointPadding=0;options.plotOptions.series.groupPadding=0;}
if(parameters.queries[i].charts[j].type==="funnel"){options.chart.type="funnel";options.chart.marginRight=100;options.legend.enabled=false;}}}
return options;};var getSerieOptions=function(parameters,yAxisesIndexes,query,serie,suppXValue,domain,scope,colorsIndex){var datasetid=ChartHelper.getDatasetId({dataset:{datasetid:query.config.dataset},domain:domain});var yLabel=ChartHelper.getYLabel(datasetid,serie);var serieColor;if(!suppXValue&&!ChartHelper.isMultiColorChart(serie.type)){serieColor=colorScale.getUniqueColor(serie.color);}else if(ChartHelper.isMultiColorChart(serie.type)){if(!serie.extras){serie.extras={};}
if(serie.innersize){serie.extras.innerSize=serie.innersize;}
if(serie.labelsposition==='inside'){serie.extras.dataLabels={distance:-50};}
serie.extras.colors=colorScale.getColors(serie.color);}else{if(query.categoryColors&&query.categoryColors[suppXValue]){serieColor=query.categoryColors[suppXValue];}else{serieColor=colorScale.getColorAtIndex(serie.color,colorsIndex);}}
var type='line',polar=false;if(serie.type==='spiderweb'){type='line';}else if(serie.type==='polar'){type='column';serie.extras.colorByPoint=true;}else{type=serie.type;}
var options=angular.extend({},{name:suppXValue?suppXValue:yLabel,color:serieColor,type:type,yAxis:parameters.singleAxis?0:yAxisesIndexes[datasetid][yLabel],marker:{enabled:(serie.type==='scatter'),radius:3},shadow:false,tooltip:{},data:[],stacking:query.stacked?query.stacked:null},serie.extras);if(!options.dataLabels){options.dataLabels={};}
if(serie.type==="funnel"){options.neckWidth='30%';options.neckHeight='25%';}
var unit=false,decimals=false;if(functionUsesField(serie.func)){unit=ChartHelper.getFieldUnit(datasetid,serie.yAxis);decimals=ChartHelper.getDecimals(datasetid,serie.yAxis);}
if(serie.displayValues){options.dataLabels.enabled=true;options.dataLabels.color='black';if(serie.type!=='treemap'){options.dataLabels.formatter=function(){var label;if(decimals){label=Highcharts.numberFormat(this.point.y,decimals);}else{label=Highcharts.numberFormat(this.point.y).replace(/([,.][0-9]*?)0+$/,'$1').replace(/[,.]$/,'');}
return label;};}}
if(serie.displayUnits&&unit){options.tooltip.valueSuffix=' '+unit;if(serie.displayValues&&serie.type!=='treemap'){var _formatter=options.dataLabels.formatter;options.dataLabels.formatter=function(){if(unit==="$"){return unit+_formatter.bind(this)(this.point.y);}else{return _formatter.bind(this)(this.point.y)+' '+unit;}};}}
function formatValue(value,decimals,unit){if(decimals!==false){value=Highcharts.numberFormat(value,decimals);}else if(angular.isNumber(value)){value=Highcharts.numberFormat(value).replace(/([,.][0-9]*?)0+$/,'$1').replace(/[,.]$/,'');}
if(unit){if(unit==='$'){value=unit+value;}else{value=value+' '+unit;}}
return value;}
function getTooltipFormatterFunction(functionName){var formatterFunction;var template=translate('<span style="color: {color}">{name}</span>: <b style="display: inline-block">{value}</b>');if(functionName==='treemap'){formatterFunction=function areaTooltip(){var formattedValue=formatValue(this.value,decimals,serie.displayUnits?unit:false);return format_string(template,{name:this.series.name,color:this.series.color,value:formattedValue});};}else if(functionName==='arearange'||functionName==='areasplinerange'||functionName==='columnrange'){formatterFunction=function areaTooltip(){var formattedLow=formatValue(this.low,decimals,serie.displayUnits?unit:false);var formattedHigh=formatValue(this.high,decimals,serie.displayUnits?unit:false);return format_string(template,{name:this.series.name,color:this.series.color,value:formattedLow+' - '+formattedHigh});};}else if(functionName==='pie'){formatterFunction=function singleValueTooltip(){var formattedValue=formatValue(this.y,decimals,serie.displayUnits?unit:false);return format_string(template,{name:this.series.name,color:this.series.color,value:formattedValue+' ('+Highcharts.numberFormat(this.percentage,1)+'%)'});};}else if(functionName==='boxplot'){formatterFunction=function boxTooltip(){var _format=function(value){return'<span style="display:inline-block">'+formatValue(value,decimals,serie.displayUnits?unit:false)+'</span>';};return format_string(template,{name:this.series.name,color:this.series.color,value:''+'<br>'+translate('Maximum:')+' '+_format(this.high)+'<br>'+translate('Upper quartile:')+' '+_format(this.q3)+'<br>'+translate('Median:')+' '+_format(this.median)+'<br>'+translate('Lower quartile:')+' '+_format(this.q1)+'<br>'+translate('Minimum:')+' '+_format(this.low)});};}else{formatterFunction=function singleValueTooltip(){var formattedValue=formatValue(this.y,decimals,serie.displayUnits?unit:false);return format_string(template,{name:this.series.name,color:this.series.color,value:formattedValue});};}
return formatterFunction;}
options.tooltip.pointFormatter=getTooltipFormatterFunction(serie.type);if(serie.refineOnClickCtrl){options.point={events:{'click':function(event){var value=this.category||this.name;var formats={'year':'YYYY','month':'YYYY/MM','day':'YYYY/MM/DD','hour':'YYYY/MM/DD HH','minute':'YYYY/MM/DD HH:mm'};if(query.timescale&&formats[query.timescale]){value=Highcharts.getOptions().global.useUTC?moment.utc(value):moment(value);value=value.format(formats[query.timescale]);}
serie.refineOnClickCtrl.refineOnValue(value);scope.$apply();}}};options.cursor='pointer';}
options=angular.extend(options,ChartHelper.resolvePosition(serie.position));delete options.position;return options;};var buildDatePattern=D4C.DateFieldUtils.datePatternBuilder('highcharts');var getContextualizedSeriesOptions=function(x,timeSerieMode){var tooltip={};if(timeSerieMode){tooltip.xDateFormat=buildDatePattern(x);}
return tooltip;};var updateXAxisOptionsFromData=function(x,options,timeSerieMode){if(timeSerieMode&&angular.isObject(x)){if('second'in x){options.minTickInterval=Date.UTC(2010,1,1,1,1,2)-Date.UTC(2010,1,1,1,1,1);}else if('minute'in x){options.minTickInterval=Date.UTC(2010,1,1,1,2)-Date.UTC(2010,1,1,1,1);}else if('hour'in x){options.minTickInterval=Date.UTC(2010,1,1,2)-Date.UTC(2010,1,1,1);}else if('weekday'in x){options.minTickInterval=Date.UTC(2010,1,2)-Date.UTC(2010,1,1);}else if('day'in x||'yearday'in x){options.minTickInterval=Date.UTC(2010,1,2)-Date.UTC(2010,1,1);}else if('month'in x){options.minTickInterval=Date.UTC(2010,1,1)-Date.UTC(2010,0,1);}else if('year'in x){options.minTickInterval=Date.UTC(2010,0,1)-Date.UTC(2009,0,1);}}};var buildYAxis=function(yLabel,chart,opposite,stacked){var hasMin=typeof chart.yRangeMin!=="undefined"&&chart.yRangeMin!=='';var hasMax=typeof chart.yRangeMax!=="undefined"&&chart.yRangeMax!=='';var yAxis={title:{text:yLabel||"",style:{color:chart.color}},labels:{style:{color:chart.color,direction:'initial'}},type:chart.scale||'linear',min:hasMin?parseFloat(chart.yRangeMin):null,max:hasMax?parseFloat(chart.yRangeMax):null,tickInterval:chart.yStep?parseFloat(chart.yStep):null,startOnTick:hasMin?false:true,endOnTick:hasMax?false:true,opposite:opposite};if(!chart.scientificDisplay){yAxis.labels.formatter=function(){if(angular.isNumber(this.value)){return Highcharts.numberFormat(this.value,-1);}else{return this.value;}};}
if(chart.type==='spiderweb'){yAxis.gridLineInterpolation='polygon';yAxis.lineWidth=0;delete(yAxis.startOnTick);delete(yAxis.endOnTick);delete(yAxis.title);delete(yAxis.labels);}else if(chart.type==='polar'){yAxis.endOnTick=false;yAxis.showLastLabel=true;delete(yAxis.title);delete(yAxis.labels);}
if(stacked){yAxis.stackLabels={enabled:true,style:{fontWeight:'bold'}};}
return yAxis;};var getDateFromXObject=D4C.DateFieldUtils.getDateFromXObject;function getXValue(dateFormatFunction,datePattern,x,minDate,xAxisType){var date=getDateFromXObject(x,minDate),xValue;if(date&&xAxisType==="datetime"){xValue=date.getTime();}else if(date){xValue=dateFormatFunction(datePattern,date);}else if(typeof x==="undefined"){xValue=undefined;}else if(angular.isObject(x)&&x.week){xValue=translate("Week")+" "+x.week;}else if(xAxisType==="linear"){xValue=x;}else{xValue=""+x;}
return xValue;}
function getValidYValue(value,chart){if(chart.func==='QUANTILES'&&chart.subsets){if(typeof value[chart.subsets+".0"]==="undefined"){return null;}else{return value[chart.subsets+".0"];}}else{if(typeof value==="undefined"){return null;}else{return value;}}}
function compileAggrValue(scope,compiled_expr,accumulations,aggregates){var valueY;try{valueY=scope.$eval(compiled_expr,{operators:Math,accumulation:function(accumulations,needed_aggregates){var res={};angular.forEach(needed_aggregates,function(k){res[k]=accumulations[k];});return res;}(accumulations,aggregates),console:console});}catch(e){console.warn("Error while compiling aggregation value with expr",compiled_expr);}
return valueY;}
return{restrict:'A',replace:true,require:["d4cHighchartsChart"],scope:{parameters:'=parameters',domain:'=',apikey:'=',colors:'=',contexts:'=?'},template:''+'<div class="d4c-chart">'+'    <div class="d4c-chart__loading" ng-show="loading">'+'        <d4c-spinner></d4c-spinner>'+'    </div>'+'    <div class="chartplaceholder"></div>'+'    <debug data="chartoptions"></debug>'+'</div>',controller:['$scope','$element','$attrs',function($scope){var timeSerieMode,precision,periodic,yAxisesIndexes,domain,that=this;$scope.$watch('contexts',function(nv,ov){if(nv&&nv.length>0){var i;for(i=0;i<nv.length;i++){$scope[nv[i].name]=nv[i];}}},true);this.highchartsLoaded=function(Highcharts,element){var chartplaceholder=element.find('.chartplaceholder');function formatRowX(value){if(periodic){console.warn('formatRowX on periodic value should not be used anymore');switch(periodic){case'month':return[translate_time('Jan'),translate_time('Feb'),translate_time('Mar'),translate_time('Apr'),translate_time('May'),translate_time('Jun'),translate_time('Jul'),translate_time('Aug'),translate_time('Sep'),translate_time('Oct'),translate_time('Nov'),translate_time('Dec')][value.month-1];case'weekday':return[translate_time('Monday'),translate_time('Tuesday'),translate_time('Wednesday'),translate_time('Thursday'),translate_time('Friday'),translate_time('Saturday'),translate_time('Sunday')][value.weekday];case'day':return value.day;default:return""+value;}}else{if(angular.isObject(value)&&("day"in value||"month"in value||"year"in value)){var date=new Date(Date.UTC(value.year,value.month-1||0,value.day||1,value.hour||0,value.minute||0));return Highcharts.dateFormat("%Y-%m-%d",date);}
return""+value;}}
var last_parameters_hash;var request_canceller=$q.defer();that.update=function(parameters){if(typeof parameters==="undefined"){parameters=$scope.parameters;}
parameters=angular.copy(parameters);if(!parameters||!parameters.queries||parameters.queries.length===0){if($scope.chart){angular.element($scope.chart.container).empty();}
return;}
var search_promises=[];timeSerieMode=undefined;precision=undefined;periodic=undefined;yAxisesIndexes={};for(var i=0;i<parameters.queries.length;i++){try{getDatasetUniqueId(parameters.queries[i].config.dataset,domain);}catch(e){ChartHelper.onLoad(that.update);return;}}
var timeserie=getTimeSerieMode(parameters);timeSerieMode=timeserie.timeSerieMode;precision=timeserie.precision;periodic=timeserie.periodic;if(precision){var useUTC=false;if(periodic&&precision==="hour"){useUTC=true;}else if(!periodic){if(['year','month','day'].indexOf(precision)!==-1){useUTC=true;}}
Highcharts.setOptions({global:{'useUTC':useUTC}});}
var options=getGlobalOptions(parameters,precision,periodic,chartplaceholder,domain);$scope.chartoptions=options;angular.forEach(parameters.queries,function(query){var datasetid=ChartHelper.getDatasetId({dataset:{datasetid:query.config.dataset},domain:query.config.domain});if(angular.isUndefined(yAxisesIndexes[datasetid])){yAxisesIndexes[datasetid]={};}
angular.forEach(query.charts,function(chart){var yLabel=ChartHelper.getYLabel(datasetid,chart);if(!parameters.singleAxis&&angular.isUndefined(yAxisesIndexes[datasetid][yLabel])){var yAxis=buildYAxis(yLabel,chart,Boolean(options.yAxis.length%2),Boolean(chart.displayStackValues));yAxisesIndexes[datasetid][yLabel]=options.yAxis.push(yAxis)-1;}
if(chart.type=='bar'){options.xAxis.labels.rotation=0;}
chart.colorScale=colorScale.getScale(chart.color);if(!ChartHelper.allowThresholds(chart.type)){delete chart.thresholds;}else if(chart.thresholds){for(var i=0;i<chart.thresholds.length;i++){if(!angular.isNumber(chart.thresholds[i].value)){chart.thresholds.splice(i,1);}}
chart.thresholds=chart.thresholds.sort(function(a,b){return a.value>b.value;});}});});function pushValues(serie,categoryIndex,scale,valueX,valueY,colorForCategory,thresholds){var i,j,nullify=false,data={};if(options.xAxis.type==='datetime'||options.xAxis.type==='linear'){if(typeof valueY==='object'){data=[valueX];if(scale==='logarithmic'){for(j=0;j<valueY.length;j++){if(valueY[j]<=0){nullify=true;}}}
if(nullify){for(j=0;j<valueY.length;j++){data.push(null);}}else{for(j=0;j<valueY.length;j++){data.push(valueY[j]);}}
serie.data.push(data);}else if(['pie','funnel'].indexOf(serie.type)!==-1){if(options.xAxis.type==='datetime'){serie.data.push({name:Highcharts.dateFormat(serie.tooltip.xDateFormat,new Date(valueX)),y:valueY});}else{serie.data.push({name:""+valueX,y:valueY});}}else if(serie.type=='treemap'){if(options.xAxis.type==='datetime'){serie.data.push({name:Highcharts.dateFormat(serie.tooltip.xDateFormat,new Date(valueX)),value:valueY});}else{serie.data.push({name:""+valueX,y:valueY});}}else{if(scale==='logarithmic'&&valueY<=0){serie.data.push([valueX,null]);}else{serie.data.push([valueX,valueY]);}
if(colorForCategory){serie.data[serie.data.length-1]={'x':serie.data[serie.data.length-1][0],'y':serie.data[serie.data.length-1][1],'color':colorForCategory};}
if(thresholds.length>0){for(i=thresholds.length-1;i>=0;i--){if(valueY>=thresholds[i].value){serie.data[serie.data.length-1]={'x':serie.data[serie.data.length-1][0],'y':serie.data[serie.data.length-1][1],'color':thresholds[i].color};break;}}}}}else{if(['pie','funnel'].indexOf(serie.type)!==-1){serie.data[categoryIndex]={name:formatRowX(valueX),y:valueY};if(colorForCategory){serie.data[categoryIndex].color=colorForCategory;}}else if(serie.type=='treemap'){serie.data[categoryIndex]={name:formatRowX(valueX),value:valueY};if(colorForCategory){serie.data[categoryIndex].color=colorForCategory;}}else{if(typeof valueY==='object'){data=[];if(scale==='logarithmic'){for(j=0;j<valueY.length;j++){if(valueY[j]<=0){nullify=true;}}}
if(nullify){for(j=0;j<valueY.length;j++){data.push(null);}}else{for(j=0;j<valueY.length;j++){data.push(valueY[j]);}}
serie.data[categoryIndex]=data;}else{if(scale==='logarithmic'&&valueY<=0){serie.data[categoryIndex]=null;}else{serie.data[categoryIndex]=valueY;}}
if(colorForCategory){serie.data[categoryIndex]={'y':serie.data[categoryIndex],'color':colorForCategory};}
if(thresholds.length>0){for(i=thresholds.length-1;i>=0;i--){if(valueY>=thresholds[i].value){serie.data[categoryIndex]={'y':serie.data[categoryIndex],'color':thresholds[i].color};break;}}}}}}
request_canceller.resolve("new request coming, cancelling current one");request_canceller=$q.defer();$scope.loading=true;var requestPromise=requestData(parameters.queries,$scope.searchoptions,timeSerieMode,precision,periodic,$scope.domain,$scope.apikey,request_canceller);requestPromise.promise.then(function(http_calls){$scope.loading=false;var charts_by_calls=requestPromise.charts;var minDate,i;if(precision){for(var h=0;h<http_calls.length;h++){var http_call=http_calls[h];for(i=0;i<http_call.data.length;i++){var row=http_call.data[i];if(row.x.year&&angular.isNumber(row.x.year)){var date=new Date(Date.UTC(row.x.year,row.x.month-1||0,row.x.day||1,row.x.hour||0,row.x.minute||0));date.setFullYear(row.x.year);if(minDate===undefined||date<minDate){minDate=date;}}}}}
var registered_series=[];for(i=0;i<parameters.queries.length;i++){if(!parameters.queries[i].seriesBreakdown){for(var j=0;j<parameters.queries[i].charts.length;j++){registered_series.push('serie'+(i+1)+'-'+(j+1));options.series.push(false);}}}
var colors={};var colorIndex=0;var handleSerie=function(serieHash,parameters,options,serie_options,query,serie,valueX,valueY,rawValueX){var serieIndex=registered_series.indexOf(serieHash);var serieColorIndex=0;var categoryIndex;if(rawValueX){if((rawValueX+serie.color)in colors){serieColorIndex=colors[rawValueX+serie.color];}else{if(query.categoryColors&&query.categoryColors[rawValueX]){colors[rawValueX+serie.color]=query.categoryColors[rawValueX];}else{serieColorIndex=colorIndex;colors[rawValueX+serie.color]=serieColorIndex;colorIndex++;}}}else{serieColorIndex=colorIndex;colorIndex++;}
if(serieIndex===-1){options.series.push(getSerieOptions(parameters,yAxisesIndexes,query,serie,rawValueX,query.config.domain||domain,$scope,serieColorIndex));serieIndex=registered_series.push(serieHash)-1;}else if(!options.series[serieIndex]){options.series[serieIndex]=getSerieOptions(parameters,yAxisesIndexes,query,serie,rawValueX,query.config.domain||domain,$scope,serieColorIndex);}
if(options.xAxis.type==="category"&&(categoryIndex=options.xAxis.categories.indexOf(valueX))===-1){categoryIndex=options.xAxis.categories.length;options.xAxis.categories.push(valueX);}
angular.extend(options.series[serieIndex].tooltip,serie_options);var colorForCategory;if(query.categoryColors){colorForCategory=query.categoryColors[valueX];}
if(!rawValueX&&serie.type!=='pie'){pushValues(options.series[serieIndex],categoryIndex,parameters.singleAxisScale||serie.scale,valueX,valueY,colorForCategory,serie.thresholds||[]);}else{pushValues(options.series[serieIndex],categoryIndex,parameters.singleAxisScale||serie.scale,valueX,valueY,colorForCategory,serie.thresholds||[]);}};angular.forEach(http_calls,function(http_call,index){var results,aggregations,i,j;if(!http_call.data||http_call.data.length===0){return;}
if(http_call.data.results){results=http_call.data.results;aggregations=http_call.data.aggregations;}else{results=http_call.data;}
if(results.length===0)return;var query=parameters.queries[index];var charts=charts_by_calls[index];var xAxis=query.xAxis;var multipleXs=!!query.seriesBreakdown;var nbSupplementaryXs=1;var serie_options=getContextualizedSeriesOptions(multipleXs?results[0].x[xAxis]:results[0].x,options,timeSerieMode);updateXAxisOptionsFromData(multipleXs?results[0].x[xAxis]:results[0].x,options.xAxis,timeSerieMode);query.defaultValues={};angular.forEach(charts,function(chart,name){query.defaultValues[name]=null;});if(aggregations){angular.forEach(aggregations,function(aggr,key){var min,max;if(key.endsWith("min")){key=key.replace('min','');min=aggr.min;max=aggregations[key+'max'].max;}else if(key.endsWith("max")){return;}else if(charts[key].charts&&charts[key].charts[0].func==="QUANTILES"&&charts[key].charts[1].func==="QUANTILES"){min=aggr.min[charts[key].charts[0].subset+".0"];min=aggr.max[charts[key].charts[1].subset+".0"];}else{min=aggr.min;max=aggr.max;}
charts[key].colorScale=colorScale.getScale(charts[key].color,min,max);});}
var accumulate_x=false;var series_to_accumulate=[];var accumulations_x=[];var accumulations_y={};var nb_series=parameters.queries[index].charts.length;for(j=0;j<nb_series;j++){var chart=parameters.queries[index].charts[j];if(chart.aggregates){for(var a=0;a<chart.aggregates.length;a++){var aggr=chart.aggregates[a];if(aggr&&series_to_accumulate.indexOf(aggr)===-1){series_to_accumulate.push(aggr);accumulations_y[aggr]=[];}}}
if(chart.compiled_expr){accumulate_x=true;}}
for(i=0;i<results.length;i++){var row=results[i];angular.extend({},query.defaultValues,row);var valueX=getXValue(Highcharts.dateFormat,serie_options.xDateFormat,multipleXs?row.x[xAxis]:row.x,minDate,options.xAxis.type);j=0;angular.forEach(row,function(rawValueY,keyY){var i,valueY,serie_name,rangeserie=false,matches;if(keyY!=="x"){matches=keyY.match(/-range-([0-9])$/);if(matches&&matches.length===2){serie_name=keyY.replace(/-range-[0-9]$/,'');rangeserie=true;if(matches[1]!=="0")return;}else{serie_name=keyY;}
var serie=charts[serie_name];if(rangeserie){valueY=[];for(i=0;i<serie.charts.length;i++){valueY.push(getValidYValue(row[serie_name+'-range-'+i],serie.charts[i]));}}else if(serie.charts){valueY=[];for(i=0;i<serie.charts.length;i++){valueY.push(getValidYValue(rawValueY,serie.charts[i]));}}else{valueY=getValidYValue(rawValueY,serie);}
if(!multipleXs){handleSerie(""+serie_name,parameters,options,serie_options,query,serie,valueX,valueY);if(series_to_accumulate.indexOf(serie_name)>=0){accumulations_y[serie_name].push(valueY);}}else{angular.forEach(row.x,function(rawValueX,keyX){if(keyX!==xAxis){rawValueX=getXValue(Highcharts.dateFormat,buildDatePattern(rawValueX),rawValueX,minDate,false);handleSerie(""+serie_name+keyX+rawValueX,parameters,options,serie_options,query,serie,valueX,valueY,rawValueX);if(series_to_accumulate.indexOf(serie_name)>=0){accumulations_y[serie_name].push(valueY);}}});}
if(accumulate_x){accumulations_x.push(valueX);}
j++;}});}
if(accumulate_x){accumulations_x.sort(function(a,b){return a-b;});for(i=accumulations_x.length-1;i>0;i--){if(accumulations_x[i]==accumulations_x[i-1]){accumulations_x.splice(i,1);}}}
for(i=0;i<query.charts.length;i++){if(query.charts[i].aggregates){var serie=query.charts[i];var valueY=compileAggrValue($scope,serie.compiled_expr,accumulations_y,serie.aggregates);for(j=0;j<accumulations_x.length;j++){handleSerie("aggr"+index+"-"+i,parameters,options,serie_options,query,serie,accumulations_x[j],valueY);}}}});for(i=options.series.length-1;i>=0;i--){if(options.series[i]===false){options.series.splice(i,1);}}
var categories=options.xAxis.categories;if(categories){for(i=0;i<options.series.length;i++){for(var k=0;k<categories.length;k++){if(options.series[i].data&&typeof options.series[i].data[k]==="undefined"){options.series[i].data[k]=null;}}}
if(categories.length===1){for(i=0;i<options.series.length;i++){if(["line","spline","area","arearange"].indexOf(options.series[i].type)!==-1){options.series[i].marker=options.series[i].marker||{};options.series[i].marker.enabled=true;}}}}else{for(i=0;i<options.series.length;i++){if(["line","spline","area","arearange"].indexOf(options.series[i].type)!==-1&&options.series[i].data.length===1){options.series[i].marker=options.series[i].marker||{};options.series[i].marker.enabled=true;}}}
if($scope.chart&&options.chart.renderTo){$scope.chart.destroy();chartplaceholder=$element.find('.chartplaceholder');}
options.chart.renderTo=chartplaceholder[0];try{if(options.series.length>500){d4cNotificationService.sendNotification(translate("There are too many series to be displayed correctly, try to refine your query a bit."));options.series=options.series.slice(0,10);}
$scope.chart=new Highcharts.Chart(options,function(){});}catch(errorMsg){if(errorMsg.indexOf&&errorMsg.indexOf('Highcharts error #19')===0){d4cNotificationService.sendNotification(translate("There was too many points to display, the maximum number of points has been decreased."));angular.forEach($scope.parameters.queries,function(query){query.maxpoints=20;});}else{if(angular.isString(errorMsg)){d4cNotificationService.sendNotification(errorMsg);}else{d4cNotificationService.sendNotification(errorMsg.message);}}}},function(reason){$scope.loading=false;});};};}],link:function(scope,element,attrs,ctrls){var chartController=ctrls[0];ModuleLazyLoader('highcharts').then(function(){chartController.highchartsLoaded(Highcharts,element);scope.$watch('parameters',function(nv,ov){chartController.update(nv);},true);});}};}]);mod.directive('d4cHighcharts',['colorScale',function(colorScale){var defaultColors=colorScale.getColors(colorScale.getDefaultColorSet());return{restrict:'E',scope:{context:'=',fieldX:'@',expressionY:'@',functionY:'@',timescale:'@',chartType:'@',color:'@',chartConfig:'=',labelX:'@',labelY:'@',sort:'@',maxpoints:'@'},replace:true,template:'<div class="d4cwidget d4cwidget-highcharts"><div d4c-highcharts-chart parameters="chart" domain="context.domain" apikey="context.apikey"></div></div>',controller:['$scope','D4CWidgetsConfig','ChartHelper',function($scope,D4CWidgetsConfig,ChartHelper){var colors=D4CWidgetsConfig.chartColors||defaultColors;if($scope.color){colors=D4C.ArrayUtils.fromCSVString($scope.color);}
var unwatch=$scope.$watch('context.dataset',function(nv){if(nv){if($scope.context.type!=='dataset'){console.error('d4c-highcharts requires a Dataset Context');}
ChartHelper.init($scope.context);if(angular.isUndefined($scope.chartConfig)){var extras={};if(ChartHelper.isMultiColorChart($scope.chartType)){extras={'colors':colors};}
var sort='';if($scope.sort==='y'){sort='serie1-1';}else if($scope.sort==='-y'){sort='-serie1-1';}else{sort=$scope.sort;}
var yLabel=$scope.labelY||($scope.functionY.toUpperCase()==='COUNT'?'Count':$scope.expressionY);$scope.chart={timescale:$scope.timescale,xLabel:$scope.labelX,queries:[{config:{dataset:$scope.context.dataset.datasetid,options:$scope.context.parameters,domain:$scope.context.domain},xAxis:$scope.fieldX,sort:sort,maxpoints:$scope.maxpoints||50,charts:[{yAxis:$scope.expressionY,yLabelOverride:yLabel,func:$scope.functionY,color:colors[0],type:$scope.chartType,extras:extras}]}]};}else{if(angular.isString($scope.chartConfig)){$scope.chart=JSON.parse(b64_to_utf8($scope.chartConfig));}else{$scope.chart=angular.copy($scope.chartConfig);}}
$scope.$broadcast('chartConfigReady',$scope.chart);$scope.$watch('chart',function(nv){var i,j;if(nv){var uniqueid=ChartHelper.getDatasetId($scope.context);for(i=0;i<nv.queries.length;i++){var query=nv.queries[i];if(typeof query.xAxis==="undefined"){ChartHelper.setDefaultQueryValues(uniqueid,query,true);}
for(j=0;j<query.charts.length;j++){ChartHelper.setSerieDefaultValues(uniqueid,query.charts[j],query.xAxis,true);}
ChartHelper.setDefaultQueryValues(uniqueid,query,true);if($scope.chart.queries.length===1){ChartHelper.setChartDefaultValues(uniqueid,nv,true);}
for(j=0;j<query.charts.length;j++){ChartHelper.setSerieDefaultColors(query.charts[j],query.seriesBreakdown);}}
$scope.$broadcast('chartConfigReady',$scope.chart);}},true);unwatch();}});}]};}]);mod.directive('d4cMultiHighcharts',["D4CAPI",'ChartHelper','$q',function(D4CAPI,ChartHelper,$q){return{restrict:'E',scope:{context:'=',chartConfig:'='},replace:true,template:'<div class="d4cwidget d4cwidget-multihighcharts"><div d4c-chart parameters="chart" domain="context.domain" apikey="context.apikey"></div></div>',controller:['$scope',function($scope){var unwatch=$scope.$watch('context',function(nv){var i;if(!nv)return;if(nv.type!=='catalog'){console.error('d4c-multi-highcharts requires a Catalog Context');}
var chartConfig;if(angular.isString($scope.chartConfig)){chartConfig=JSON.parse(b64_to_utf8($scope.chartConfig));}else{chartConfig=$scope.chartConfig;}
var datasets=[];for(i=0;i<chartConfig.queries.length;i++){var datasetid=chartConfig.queries[i].config.dataset;if(datasets.indexOf(datasetid)===-1){datasets.push(datasetid);}}
var requests=[];var success=function(data){var dataset=new D4C.Dataset(data);$scope.context.dataset=dataset;ChartHelper.init($scope.context);};for(i=0;i<datasets.length;i++){requests.push(D4CAPI.datasets.get($scope.context,datasets[i],{extrametas:true}).success(success));}
$q.all(requests).then(function(arg){$scope.chart=chartConfig;});unwatch();});}]};}]);mod.directive('d4cChart',["D4CAPI",'ChartHelper','D4CWidgetsConfig',function(D4CAPI,ChartHelper,D4CWidgetsConfig){return{restrict:'EA',scope:{timescale:'@',labelX:'@',singleYAxis:'@',singleYAxisLabel:'@',singleYAxisScale:'@',min:'@',max:'@',step:'@',scientificDisplay:'@',logarithmic:'@',displayLegend:'@',labelsXLength:'@',context:'=?',fieldX:'@',expressionY:'@',functionY:'@',chartType:'@',color:'@',chartConfig:'=?',labelY:'@',sort:'@',maxpoints:'@',chart:'=?parameters'},replace:true,transclude:true,template:'<div class="d4cwidget d4cwidget-charts">'+'<debug data="chart"></debug>'+'<div d4c-highcharts-chart parameters="chart" domain="context.domain" apikey="context.apikey" contexts="contexts"></div>'+'<div ng-transclude></div>'+'</div>',controller:['$scope','$element','$attrs','$transclude',function($scope,$element,$attrs,$transclude){$scope.contexts=[];this.pushContext=function(context){$scope.contexts.push(context);};if(!$scope.chart){$scope.chart={queries:[],xLabel:angular.isDefined($scope.labelX)?$scope.labelX:undefined,timescale:$scope.timescale||"",singleAxis:!!$scope.singleYAxis,singleAxisLabel:angular.isDefined($scope.singleYAxisLabel)?$scope.singleYAxisLabel:undefined,singleAxisScale:$scope.logarithmic?'logarithmic':'',yRangeMin:angular.isDefined($scope.min)&&$scope.min!==""?parseFloat($scope.min):undefined,yRangeMax:angular.isDefined($scope.max)&&$scope.max!==""?parseFloat($scope.max):undefined,yStep:angular.isDefined($scope.step)&&$scope.step!==""?parseFloat($scope.step):undefined,scientificDisplay:angular.isDefined($scope.scientificDisplay)&&$scope.scientificDisplay!==""?$scope.scientificDisplay==="true":true,displayLegend:angular.isDefined($scope.displayLegend)&&$scope.displayLegend==="false"?false:true,labelsXLength:angular.isDefined($scope.labelsXLength)&&$scope.labelsXLength!==""?parseInt($scope.labelsXLength):undefined};}
angular.forEach($scope.chart,function(item,key){if(typeof item==="undefined"){delete $scope.chart[key];}});if($attrs.context){(function(){var colors=D4CWidgetsConfig.chartColors||defaultColors;if($scope.color){colors=D4C.ArrayUtils.fromCSVString($scope.color);}
var unwatch=$scope.$watch('context.dataset',function(nv){if(nv){if($scope.context.type!=='dataset'){console.error('d4c-chart requires a Dataset Context');}
ChartHelper.init($scope.context);if(angular.isUndefined($scope.chartConfig)){var extras={};if(ChartHelper.isMultiColorChart($scope.chartType)){extras={'colors':colors};}
var sort='';if($scope.sort==='y'){sort='serie1-1';}else if($scope.sort==='-y'){sort='-serie1-1';}else{sort=$scope.sort;}
var yLabel=$scope.labelY||($scope.functionY.toUpperCase()==='COUNT'?'Count':$scope.expressionY);$scope.chart={timescale:$scope.timescale,xLabel:$scope.labelX,queries:[{config:{dataset:$scope.context.dataset.datasetid,options:$scope.context.parameters},xAxis:$scope.fieldX,sort:sort,maxpoints:$scope.maxpoints||50,charts:[{yAxis:$scope.expressionY,yLabelOverride:yLabel,func:$scope.functionY,color:colors[0],type:$scope.chartType,extras:extras}]}]};}else{if(angular.isString($scope.chartConfig)){$scope.chart=JSON.parse(b64_to_utf8($scope.chartConfig));}else{$scope.chart=$scope.chartConfig;}}
unwatch();}});})();this.setQuery=function(query,context){console.error("cannot use d4c-chart-query when context and chartConfig are declared on d4c-chart");};}else{this.setQuery=function(query,context){var index=$scope.chart.queries.indexOf(query);var groups,j;if(index===-1){index=$scope.chart.queries.length;$scope.chart.queries.push(query);}else{$scope.chart.queries[index]=query;}
if(query.sort){groups=query.sort.match(/^(-?)serie([0-9]+)$/);if(groups){$scope.chart.queries[index].sort=groups[1]+'serie'+(index+1)+'-'+groups[2];}}
var contextInArray=false;for(var contextIndex=0;contextIndex<$scope.contexts.length;contextIndex++){if($scope.contexts[contextIndex].name===context.name){contextInArray=true;}}
if(!contextInArray){$scope.contexts.push(context);}
var uniqueid=ChartHelper.getDatasetId(context);if(typeof query.xAxis==="undefined"){ChartHelper.setDefaultQueryValues(uniqueid,query,true);}
for(j=0;j<query.charts.length;j++){ChartHelper.setSerieDefaultValues(uniqueid,query.charts[j],query.xAxis,true);}
ChartHelper.setDefaultQueryValues(uniqueid,query,true);if($scope.chart.queries.length===1){ChartHelper.setChartDefaultValues(uniqueid,$scope.chart,true);}
for(j=0;j<query.charts.length;j++){ChartHelper.setSerieDefaultColors(query.charts[j],query.seriesBreakdown);}};$scope.$watch('labelX',function(nv,ov){$scope.chart.xLabel=nv;});}}]};}]);mod.directive('d4cChartQuery',["D4CAPI",'ChartHelper',function(D4CAPI,ChartHelper){return{restrict:'E',require:["d4cChartQuery","^d4cChart"],controller:['$scope',function($scope){}],compile:function(){return{pre:function(scope,element,attrs,ctrls){var thisController=ctrls[0],d4cChartController=ctrls[1];var query={config:{},charts:[],xAxis:attrs.fieldX,maxpoints:attrs.maxpoints?parseInt(attrs.maxpoints,10):undefined,timescale:attrs.timescale,stacked:attrs.stacked,seriesBreakdown:attrs.seriesBreakdown,seriesBreakdownTimescale:attrs.seriesBreakdownTimescale,categoryColors:attrs.categoryColors?JSON.parse(attrs.categoryColors):undefined};query.sort='';if(attrs.sort==='y'){query.sort='serie1';}else if(attrs.sort==='-y'){query.sort='-serie1';}else{query.sort=attrs.sort;}
var forcedOptions=attrs.options||{};angular.forEach(query,function(item,key){if(typeof item==="undefined"){delete query[key];}});thisController.setChart=function(chart){if(query.charts.indexOf(chart)===-1){query.charts.push(chart);}};var pushQuery=function(context){if(context){d4cChartController.setQuery(query,context);}};thisController.pushContext=function(context){d4cChartController.pushContext(context);};var context=attrs.context;scope[context].wait().then(function(dataset){ChartHelper.init(scope[context]);query.config.dataset=dataset.datasetid;query.config.domain=scope[context].domain;query.config.apikey=scope[context].apikey;query.config.options=angular.extend({},scope[context].parameters,forcedOptions);thisController.setChart=function(chart){if(query.charts.indexOf(chart)===-1){query.charts.push(chart);}
pushQuery(scope[context]);};pushQuery(scope[context]);scope.$watch(context+".parameters",function(nv,ov){if(nv){query.config.options=angular.extend({},nv,forcedOptions);pushQuery(scope[context]);}},true);});}};}};}]);mod.directive('d4cChartSerie',["D4CAPI",'ChartHelper','$compile','$parse',function(D4CAPI,ChartHelper,$compile,$parse){return{restrict:'E',require:["^d4cChartQuery","?refineOnClick","?refineOnClickContext"],controller:['$scope','$transclude',function($scope,$transclude){}],link:function(scope,element,attrs,ctrls){var d4cChartQueryController=ctrls[0],refineOnClickCtrl=ctrls[1]||ctrls[2];var chart={type:attrs.chartType||undefined,innersize:attrs.innersize||undefined,labelsposition:attrs.labelsposition||undefined,func:attrs.functionY||undefined,yAxis:attrs.expressionY||undefined,color:attrs.color||undefined,cumulative:!!attrs.cumulative||false,yLabelOverride:angular.isDefined(attrs.labelY)?attrs.labelY:undefined,scale:attrs.logarithmic?'logarithmic':'',yRangeMin:angular.isDefined(attrs.min)&&attrs.min!==""?parseFloat(attrs.min):undefined,yRangeMax:angular.isDefined(attrs.max)&&attrs.max!==""?parseFloat(attrs.max):undefined,yStep:angular.isDefined(attrs.step)&&attrs.step!==""?parseFloat(attrs.step):undefined,displayUnits:attrs.displayUnits==="true",displayValues:attrs.displayValues==="true",displayStackValues:attrs.displayStackValues==="true",multiplier:angular.isDefined(attrs.multiplier)?parseFloat(attrs.multiplier):undefined,thresholds:attrs.colorThresholds?scope.$eval(attrs.colorThresholds):[],subsets:attrs.subsets,charts:attrs.subseries?JSON.parse(attrs.subseries):undefined,refineOnClickCtrl:refineOnClickCtrl,scientificDisplay:attrs.scientificDisplay==="true"};angular.forEach(chart,function(item,key){if(typeof item==="undefined"){delete chart[key];}});d4cChartQueryController.setChart(chart);attrs.$observe('labelY',function(value){chart.yLabelOverride=value;d4cChartQueryController.setChart(chart);});}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cDatasetContext',['D4CAPI','$q','$interpolate','$interval','URLSynchronizer','ContextHelper',function(D4CAPI,$q,$interpolate,$interval,URLSynchronizer,ContextHelper){var exposeContext=function(domain,datasetID,scope,contextName,apikey,parameters,parametersFromContext,source,urlSync,schema,refreshDelay){var contextParams;if(!angular.equals(parameters,{})){contextParams=parameters;if(urlSync){console.warn('Context '+contextName+' : There are specific parameters defined, but URL sync is enabled, so the parameters will be ignored.');}}else if(parametersFromContext){var unwatch=scope.$watch(parametersFromContext,function(nv,ov){if(nv){if(source){nv.parameters.source=source;}
scope[contextName].parameters=nv.parameters;unwatch();}});contextParams=null;}else{if(angular.equals(parameters,{})){contextParams=parameters;}else{contextParams={};}}
if(source&&contextParams){contextParams.source=source;}
scope[contextName]=ContextHelper.getDatasetContext(contextName,domain,datasetID,contextParams,source,apikey,schema);if(refreshDelay){$interval(function(){scope[contextName]['parameters']['_refreshTimestamp']=new Date().getTime();},refreshDelay);}
if(urlSync){URLSynchronizer.addSynchronizedObject(scope,contextName+'.parameters',['basemap','location']);}};return{restrict:'AE',scope:true,replace:true,controller:['$scope','$attrs',function($scope,$attrs){var contextNames=$attrs.context.split(',');var datasetID,domain,apikey,sort,source,schema,refreshDelay;for(var i=0;i<contextNames.length;i++){var contextName=contextNames[i].trim();if(!$attrs[contextName+'Dataset']&&!$attrs[contextName+'DatasetSchema']){console.error('Context '+contextName+' : Missing dataset parameter');}
if($attrs[contextName+'Dataset']){datasetID=$interpolate($attrs[contextName+'Dataset'])($scope);}else{datasetID='';}
if($attrs[contextName+'Domain']){domain=$interpolate($attrs[contextName+'Domain'])($scope);}else{domain='';}
if($attrs[contextName+'Apikey']){apikey=$interpolate($attrs[contextName+'Apikey'])($scope);}else{apikey='';}
if($attrs[contextName+'Sort']){sort=$interpolate($attrs[contextName+'Sort'])($scope);}else{sort='';}
if($attrs[contextName+'Source']){source=$interpolate($attrs[contextName+'Source'])($scope);}else{source='';}
if($attrs[contextName+'DatasetSchema']){schema=angular.fromJson($attrs[contextName+'DatasetSchema'].replace(/\\{/g,'{').replace(/\\}/g,'}'));}else{schema=undefined;}
if(angular.isDefined($attrs[contextName+'RefreshDelay'])){refreshDelay=parseInt($interpolate($attrs[contextName+'RefreshDelay'])($scope),10);if(!isFinite(refreshDelay)){console.warn(contextName+'-refresh-delay: Is not a valid integer. Fallbacking to 10000ms.');refreshDelay=10000;}else if(refreshDelay<10000){console.warn(contextName+'-refresh-delay: Is too small (10000ms minimum). Fallbacking to 10000ms.');refreshDelay=10000;}}
var parameters=$scope.$eval($attrs[contextName+'Parameters'])||{};var parametersFromContext=$attrs[contextName+'ParametersFromContext'];if(sort){parameters.sort=sort;}
var urlSync=$scope.$eval($attrs[contextName+'Urlsync']);exposeContext(domain,datasetID,$scope,contextName,apikey,parameters,parametersFromContext,source,urlSync,schema,refreshDelay);}}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTimerange',['ModuleLazyLoader','translate','d4cTimerangeParser',function(ModuleLazyLoader,translate,d4cTimerangeParser){var romeOptions={styles:{container:"rd-container d4cwidgets-rd-container"},weekStart:1};var computeDefaultTime=function(value){if(value==='yesterday'){return moment().subtract('days',1);}else if(value==='now'){return moment();}else if(angular.isString(value)){return moment(value);}else{return null;}};var formatTimeToISO=function(time){if(time){return moment(time).milliseconds(0).toISOString().replace('.000Z','Z');}else{return null;}};var roundTime=function(time,dateFormat,displayTime,role){if(typeof time==='string'){time=moment(time,dateFormat);}
if(displayTime==='false'||displayTime===false){if(role==='from'){time.milliseconds(0);if(dateFormat.indexOf('H')===-1&&dateFormat.indexOf('h')===-1&&dateFormat.indexOf('LLL')===-1&&dateFormat.indexOf('LT')===-1){time.hours(0);}
if(dateFormat.indexOf('m')===-1&&dateFormat.indexOf('LLL')===-1&&dateFormat.indexOf('LT')===-1){time.minutes(0);}
if(dateFormat.indexOf('s')===-1&&dateFormat.indexOf('LTS')===-1){time.seconds(0);}}
if(role==='to'){time.milliseconds(999);if(dateFormat.indexOf('H')===-1&&dateFormat.indexOf('h')===-1&&dateFormat.indexOf('LLL')===-1&&dateFormat.indexOf('LT')===-1){time.hours(23);}
if(dateFormat.indexOf('m')===-1&&dateFormat.indexOf('LLL')===-1&&dateFormat.indexOf('LT')===-1){time.minutes(59);}
if(dateFormat.indexOf('s')===-1&&dateFormat.indexOf('LTS')===-1){time.seconds(59);}}}
return time;};return{restrict:'E',replace:true,scope:{context:'=',timeField:'@?',defaultFrom:'@?',defaultTo:'@?',displayTime:'@?',dateFormat:'@?',suffix:'@?',to:'=?',from:'=?',labelFrom:'@?',labelTo:'@?',placeholderFrom:'@?',placeholderTo:'@?'},template:''+'<div class="d4cwidget d4cwidget-timerange">'+'    <div class="d4cwidget-timerange__from">'+'        <span class="d4cwidget-timerange__label" ng-bind="labelFrom"></span>'+'        <input type="text" placeholder="{{ placeholderFrom }}" class="d4cwidget-timerange__input">'+'        <button type="reset" class="d4cwidget-timerange__reset" ng-show="from" ng-click="resetSearchFrom()" aria-label="Reset search" translate="aria-label">'+'           <i class="fa fa-times-circle" aria-hidden="true"></i>'+'        </button>'+'    </div>'+'    <div class="d4cwidget-timerange__to">'+'        <span class="d4cwidget-timerange__label" ng-bind="labelTo"></span>'+'        <input type="text" placeholder="{{ placeholderTo }}" class="d4cwidget-timerange__input">'+'        <button type="reset" class="d4cwidget-timerange__reset" ng-show="to" ng-click="resetSearchTo()" aria-label="Reset search" translate="aria-label">'+'           <i class="fa fa-times-circle" aria-hidden="true"></i>'+'        </button>'+'    </div>'+'</div>',link:function(scope,element,attrs){var formattedSuffix=!angular.isUndefined(scope.suffix)?('.'+scope.suffix): '';scope.labelFrom=angular.isDefined(scope.labelFrom)?scope.labelFrom:translate('From');scope.labelTo=angular.isDefined(scope.labelTo)?scope.labelTo:translate('to');var inputs=element.find('input');var defaultDateFormat='YYYY-MM-DD HH:mm';if(angular.isDefined(scope.displayTime)&&scope.displayTime==='false'){defaultDateFormat='YYYY-MM-DD';}
scope.dateFormat=scope.dateFormat||defaultDateFormat;var getParameterName=function(context){var parameterName=attrs[context.name+"ParameterName"]||'q';if(['q','rq'].indexOf(parameterName)>-1){parameterName=parameterName+'.timerange'+formattedSuffix;}
return parameterName;};var parameterValue;if(angular.isArray(scope.context)){parameterValue=scope.context[0].parameters[getParameterName(scope.context[0])];}else{parameterValue=scope.context.parameters[getParameterName(scope.context)];}
if(angular.isDefined(parameterValue)){var parsedRange=d4cTimerangeParser(parameterValue);if(parsedRange.field===scope.timeField){scope.defaultFrom=parsedRange.from;scope.defaultTo=parsedRange.to;}}
if(angular.isDefined(scope.defaultFrom)){var from=roundTime(computeDefaultTime(scope.defaultFrom),scope.dateFormat,scope.displayTime,'from');inputs[0].value=from.format(scope.dateFormat);scope.from=formatTimeToISO(from);}
if(angular.isDefined(scope.defaultTo)){var to=roundTime(computeDefaultTime(scope.defaultTo),scope.dateFormat,scope.displayTime,'to');inputs[1].value=to.format(scope.dateFormat);scope.to=formatTimeToISO(to);}
ModuleLazyLoader('rome').then(function(){if(typeof scope.displayTime==="undefined"){scope.displayTime=true;}else{scope.displayTime=(scope.displayTime==="true");}
var fromRome=rome(inputs[0],angular.extend({},romeOptions,{time:scope.displayTime,dateValidator:rome.val.beforeEq(inputs[1]),initialValue:scope.defaultFrom,inputFormat:scope.dateFormat}));fromRome.on('data',function(value){scope.$applyAsync(function(){var from=roundTime(moment(value,scope.dateFormat),scope.dateFormat,scope.displayTime,'from');$(inputs[0]).val(from.format(scope.dateFormat));fromRome.setValue(from);scope.from=formatTimeToISO(from);});});var toRome=rome(inputs[1],angular.extend({},romeOptions,{time:scope.displayTime,dateValidator:rome.val.afterEq(inputs[0]),initialValue:scope.defaultTo,inputFormat:scope.dateFormat}));toRome.on('data',function(value){scope.$applyAsync(function(){var to=roundTime(moment(value,scope.dateFormat),scope.dateFormat,scope.displayTime,'to');toRome.setValue(to);scope.to=formatTimeToISO(to);});});var isFromRangeParametersEmpty=function(){var isEmpty=true;var contexts=angular.isArray(scope.context)?scope.context:[scope.context];angular.forEach(contexts,function(context){angular.forEach(context.parameters,function(query,parameter){if(parameter.indexOf('from_date')!==-1||parameter.indexOf('timerange')!==-1){isEmpty=false;}});});return isEmpty;};var isToRangeParametersEmpty=function(){var isEmpty=true;var contexts=angular.isArray(scope.context)?scope.context:[scope.context];angular.forEach(contexts,function(context){angular.forEach(context.parameters,function(query,parameter){if(parameter.indexOf('to_date')!==-1||parameter.indexOf('timerange')!==-1){isEmpty=false;}});});return isEmpty;};scope.$watch(isFromRangeParametersEmpty,function(nv,ov){if(nv&&!ov){scope.resetSearchFrom();}},true);scope.$watch(isToRangeParametersEmpty,function(nv,ov){if(nv&&!ov){scope.resetSearchTo();}},true);scope.resetSearchFrom=function(){inputs[0].value=null;scope.from=undefined;};scope.resetSearchTo=function(){inputs[1].value=null;scope.to=undefined;};});},controller:['$scope','$attrs','$q','$compile','$rootScope','$parse',function($scope,$attrs,$q,$compile,$rootScope,$parse){var contexts=[],conf={};var formattedSuffix=!angular.isUndefined($scope.suffix)?('.'+$scope.suffix): '';var getTimeField=function(dataset){if(dataset){var fields=dataset.fields.filter(function(item){return item.type==='date'||item.type==='datetime';});if(fields.length>1){console.log('Warning: the dataset "'+dataset.getUniqueId()+'" has more than one date or datetime field, the first date or datetime field will be used. You can specify the field to use using the "time-field" parameter.');}
if(fields.length===0){console.log('Error: the dataset "'+dataset.getUniqueId()+'" doesn\'t have any date or datetime field, which is required for the Timerange widget.');}
return fields[0].name;}
return null;};if(!angular.isArray($scope.context)){contexts.push($scope.context);conf[$scope.context.name]={};if($scope.timeField){conf[$scope.context.name]['timeField']=$scope.timeField;}}else{contexts=$scope.context;}
angular.forEach(contexts,function(context){conf[context.name]={timefield:conf[$scope.context.name]&&conf[$scope.context.name]['timeField']?conf[$scope.context.name]['timeField']:null,formatter:$parse("$field + ':[' + $from + ' TO ' + $to + ']'"),parameter:"q",};if(angular.isDefined($attrs[context.name+"ParameterFormatter"])){conf[context.name]['formatter']=$parse($attrs[context.name+"ParameterFormatter"]);}
if(angular.isDefined($attrs[context.name+"ParameterName"])){conf[context.name]['parameter']=$attrs[context.name+"ParameterName"];}
if(angular.isDefined($attrs[context.name+"TimeField"])){conf[context.name]['timefield']=$attrs[context.name+"TimeField"];}});var react=function(contexts,configurations){var dates;$scope.$watch('[from, to]',function(nv){if(nv[0]&&nv[1]){dates=['from_date','to_date'];angular.forEach(contexts,function(context){var parameterName=configurations[context.name]['parameter'];var evaluationScope={};evaluationScope.$to=$scope.to;evaluationScope.$from=$scope.from;evaluationScope.$field=configurations[context.name]['timefield'];if(['q','rq'].indexOf(parameterName)>-1){parameterName=parameterName+'.timerange'+formattedSuffix;}
context.parameters[parameterName]=configurations[context.name]['formatter'](evaluationScope);deleteUsedDate(context,configurations,dates);});}else if(nv[0]&&!nv[1]){dates=['to_date','timerange'];angular.forEach(contexts,function(context){context.parameters[getParameterName(context,configurations,'from_date')]=configurations[context.name]['timefield']+'>="'+nv[0]+'"';deleteUsedDate(context,configurations,dates);});}else if(nv[1]&&!nv[0]){dates=['from_date','timerange'];angular.forEach(contexts,function(context){context.parameters[getParameterName(context,configurations,'to_date')]=configurations[context.name]['timefield']+'<="'+nv[1]+'"';deleteUsedDate(context,configurations,dates);});}else{dates=['from_date','to_date','timerange'];angular.forEach(contexts,function(context){deleteUsedDate(context,configurations,dates);});}},true);};var deleteUsedDate=function(context,configurations,dates){angular.forEach(dates,function(date){if(context.parameters[getParameterName(context,configurations,date)]){delete context.parameters[getParameterName(context,configurations,date)];}});};var getParameterName=function(context,configurations,type){return configurations[context.name]['parameter']+'.'+type+formattedSuffix;};if(contexts.length==1&&contexts[0].type=='catalog'){react(contexts,conf);}else{$q.all(contexts.map(function(context){return context.wait().then(function(dataset){if(conf[context.name]['timefield']===null){conf[context.name]['timefield']=getTimeField(dataset);}});})).then(function(){react(contexts,conf);});}}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMapLegend',[function(){return{restrict:'E',require:'^d4cMap',template:''+''+'<div class="d4cwidget d4cwidget-map-legend" '+'     ng-class="{\'d4cwidget-map-legend--extended\': ( selectedLayer.config.display === \'categories\' && extended), \'d4cwidget-map-legend--not-toggleable\' : !isToggleable(selectedLayer)}" '+'     ng-if="layers.length > 0" '+'     ng-click="isToggleable(selectedLayer) && !clickBlocked && toggle()">'+'   <div class="d4cwidget-map-legend__header">'+'       <div ng-if="selectedLayer.config.captionPictoIcon" class="d4cwidget-map-legend__picto">'+'           <d4c-map-picto name="{{ selectedLayer.config.captionPictoIcon }}"'+'                          color="{{ selectedLayer.config.captionPictoColor }}">'+'           </d4c-map-picto>'+'       </div> '+'       <div class="d4cwidget-map-legend__title"'+'           title="{{ getLayerTitle(selectedLayer) }}"'+'           ng-bind="shortSummaryFilter(getLayerTitle(selectedLayer), 50)">'+'       </div>'+'       <i ng-show="isToggleable(selectedLayer) && !extended" class="d4cwidget-map-legend__title-toggle d4cui-top" d4c-tooltip="Click to unfold" translate="d4c-tooltip"></i>'+'       <i ng-show="isToggleable(selectedLayer) && extended" class="d4cwidget-map-legend__title-toggle d4cui-bottom" d4c-tooltip="Click to fold" translate="d4c-tooltip"></i>'+'       <div ng-show="selectedLayer.properties.legendLabel" ng-bind="selectedLayer.properties.legendLabel" class="d4cwidget-map-legend__label">'+'       </div>'+'   </div>'+'   <div ng-switch="selectedLayer.config.display">'+'       <div ng-switch-when="categories" class="d4cwidget-map-legend__categories-container" ng-class="{\'d4cwidget-map-legend__categories-container--extended\' : extended}">'+'           <div ng-if="selectedLayer.config.color.type !== \'field\'">'+'               <div ng-if="isToggleable(selectedLayer) && !extended" class="d4cwidget-map-legend__categories--condensed">'+'                   <div ng-repeat="(value, color) in getCategories(selectedLayer, maxCategories) track by $index" class="d4cwidget-map-legend__categories__item">'+'                       <div class="d4cwidget-map-legend__categories__item-color">'+'                           <div ng-style="{\'background-color\' :color}" class="d4cwidget-map-legend__categories__color-block"></div>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__categories__item-value" ng-bind="value"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__categories__item">'+'                       <div class="d4cwidget-map-legend__categories__item-value--others" translate translate-n="getCategoriesCount(selectedLayer) - maxCategories" translate-plural="{{ $count }} more items...">{{ $count }} more item...</div>'+'                   </div>'+'               </div>'+'               <div ng-if="!isToggleable(selectedLayer) || extended" class="d4cwidget-map-legend__categories--extended">'+'                   <div ng-repeat="(value, color) in getCategories(selectedLayer) track by $index" class="d4cwidget-map-legend__categories__item">'+'                       <div class="d4cwidget-map-legend__categories__item-color">'+'                           <div ng-style="{\'background-color\' :color}" class="d4cwidget-map-legend__categories__color-block"></div>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__categories__item-value" ng-bind="value"></div>'+'                   </div>'+'                   <div ng-show="selectedLayer.config.color.otherCategories" class="d4cwidget-map-legend__categories__item">'+'                       <div class="d4cwidget-map-legend__categories__item-color">'+'                           <div ng-style="{\'background-color\' :selectedLayer.config.color.otherCategories}" class="d4cwidget-map-legend__categories__color-block"></div>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__categories__item-value--others">Others</div>'+'                   </div>'+'               </div>'+'           </div>'+'           <div ng-if="selectedLayer.config.color.type === \'field\'">'+'               <div class="d4cwidget-map-legend__no-legend-placeholder" translate>No legend available</div>'+'           </div>'+'       </div>'+'       <div ng-switch-when="choropleth" class="d4cwidget-map-legend__choropleth-container">'+'           <div ng-if="!isToggleable(selectedLayer) || extended">'+'               <div ng-repeat="bound in selectedLayer.properties.bounds" class="d4cwidget-map-legend__choropleth__item">'+'                   <div class="d4cwidget-map-legend__choropleth__item-color">'+'                       <div ng-style="{\'background-color\' : bound.color }" class="d4cwidget-map-legend__choropleth__color-block"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__choropleth__item-range">'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ bound.lowerBound|number:selectedLayer.properties.floatLength }}'+'                           <i aria-hidden="true" class="fa fa-long-arrow-right d4cwidget-map-legend__choropleth__item-range__bound-arrow"></i>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ bound.upperBound|number:selectedLayer.properties.floatLength }}'+'                       </div>'+'                   </div>'+'               </div>'+'               <div class="d4cwidget-map-legend__choropleth__item" ng-show="selectedLayer.properties.undefinedColor">'+'                   <div class="d4cwidget-map-legend__choropleth__item-color">'+'                       <div ng-style="{\'background-color\' : selectedLayer.properties.undefinedColor }" '+'                            class="d4cwidget-map-legend__choropleth__color-block"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__choropleth__item-range d4cwidget-map-legend__choropleth__item-range--center" '+'                        translate>Undefined {{ selectedLayer.properties.legendLabel }}</div>'+'               </div>'+'               <div class="d4cwidget-map-legend__choropleth__item">'+'                   <div class="d4cwidget-map-legend__choropleth__item-color">'+'                       <div ng-style="{\'background-color\' : selectedLayer.properties.outOfBoundsColor }" '+'                            class="d4cwidget-map-legend__choropleth__color-block"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__choropleth__item-range d4cwidget-map-legend__choropleth__item-range--center" '+'                        translate>Out of bounds {{ selectedLayer.properties.legendLabel }}</div>'+'               </div>'+'           </div>'+'           <div ng-if="isToggleable(selectedLayer) && !extended">'+'               <div class="d4cwidget-map-legend__choropleth__item">'+'                   <div class="d4cwidget-map-legend__choropleth__item-color">'+'                       <div ng-style="{\'background-color\' : selectedLayer.properties.bounds[0].color }" class="d4cwidget-map-legend__choropleth__color-block"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__choropleth__item-range">'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ selectedLayer.properties.bounds[0].lowerBound|number:selectedLayer.properties.floatLength }}'+'                           <i aria-hidden="true" class="fa fa-long-arrow-right d4cwidget-map-legend__choropleth__item-range__bound-arrow"></i>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ selectedLayer.properties.bounds[0].upperBound|number:selectedLayer.properties.floatLength }}'+'                       </div>'+'                   </div>'+'               </div>'+'               <div class="d4cwidget-map-legend__choropleth__item" ng-if="selectedLayer.properties.bounds.length > 3">'+'                   <p class="d4cwidget-map-legend__choropleth__item-value--remaining" translate translate-n="selectedLayer.properties.bounds.length - 2" translate-plural="{{ $count }} more items...">'+'                   {{ $count }} more item...'+'                   </p>'+'               </div>'+'               <div class="d4cwidget-map-legend__choropleth__item" ng-if="selectedLayer.properties.bounds.length === 3">'+'                   <div class="d4cwidget-map-legend__choropleth__item-color">'+'                       <div ng-style="{ \'background-color\': selectedLayer.properties.bounds[1].color}" class="d4cwidget-map-legend__choropleth__color-block"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__choropleth__item-range">'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ selectedLayer.properties.bounds[1].lowerBound|number:selectedLayer.properties.floatLength }}'+'                           <i aria-hidden="true" class="fa fa-long-arrow-right d4cwidget-map-legend__choropleth__item-range__bound-arrow"></i>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ selectedLayer.properties.bounds[1].upperBound|number:selectedLayer.properties.floatLength }}'+'                       </div>'+'                   </div>'+'               </div>'+'               <div class="d4cwidget-map-legend__choropleth__item">'+'                   <div class="d4cwidget-map-legend__choropleth__item-color">'+'                       <div ng-style="{ \'background-color\': selectedLayer.properties.bounds[selectedLayer.properties.bounds.length - 1].color }" class="d4cwidget-map-legend__choropleth__color-block"></div>'+'                   </div>'+'                   <div class="d4cwidget-map-legend__choropleth__item-range">'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ selectedLayer.properties.bounds[selectedLayer.properties.bounds.length - 1].lowerBound|number:selectedLayer.properties.floatLength }}'+'                           <i aria-hidden="true" class="fa fa-long-arrow-right d4cwidget-map-legend__choropleth__item-range__bound-arrow"></i>'+'                       </div>'+'                       <div class="d4cwidget-map-legend__choropleth__item-range__bound">'+'                           {{ selectedLayer.properties.bounds[selectedLayer.properties.bounds.length - 1].upperBound|number:selectedLayer.properties.floatLength }}'+'                       </div>'+'                   </div>'+'               </div>'+'           </div>'+'       </div>'+'       <div ng-switch-when="heatmap" class="d4cwidget-map-legend__simple-container">'+'           <div><span translate ng-bind="layer.func"></div> '+'           <div ng-style="{ \'background\': selectedLayer.properties.gradient}" class="d4cwidget-map-legend__simple__color-block"></div>'+'           <div class="d4cwidget-map-legend__simple__color-block-subtext">'+'               <div class="d4cwidget-map-legend__simple__color-block-subtext-left" translate>Low</div>'+'               <div class="d4cwidget-map-legend__simple__color-block-subtext-right" translate>High</div>'+'           </div>'+'       </div>'+'       <div ng-switch-default class="d4cwidget-map-legend__default-container">'+'           <div ng-style="{ \'background-color\': selectedLayer.config.color}" class="d4cwidget-map-legend__default__color-block"></div>'+'           <div translate>Item</div>'+'       </div>'+'   </div>'+'   <div ng-if="layers.length > 1" class="d4cwidget-map-legend__pagination">'+'       <button title="Previous" translate="title" class="d4cwidget-map-legend__pagination-button" '+'               ng-show="selectedIndex > 0" ng-click="previous()" ng-mouseenter="preventToggle()" ng-mouseleave="allowToggle()">'+'           <i class="d4cui-left" aria-hidden="true"></i>'+'       </button>'+'       {{selectedIndex+1}}/{{layers.length}}'+'       <button title="Next" translate="title" class="d4cwidget-map-legend__pagination-button" '+'               ng-show="selectedIndex < layers.length - 1" ng-click="next()" ng-mouseenter="preventToggle()" ng-mouseleave="allowToggle()">'+'           <i class="d4cui-right"aria-hidden="true"></i>'+'       </button>'+'   </div>'+'</div>',scope:{mapConfig:'='},link:function(scope,element,attrs,d4cMapCtrl){scope.resizeMapDisplayControl=d4cMapCtrl.resizeMapDisplayControl;},controller:['$scope','MapHelper','shortSummaryFilter','MapLayerHelper',function($scope,MapHelper,shortSummaryFilter,MapLayerHelper){$scope.extended=false;$scope.selectedLayer=null;$scope.selectedIndex=0;$scope.maxCategories=4;$scope.isToggleable=function(layer){if(layer.config.display==='choropleth'&&Object.keys(layer.config.color.ranges).length>3){return true;}else if(layer.config.display==='categories'&&$scope.getCategoriesCount(layer)>$scope.maxCategories&&layer.config.color.type!=='field'){return true;}else{return false;}};$scope.shortSummaryFilter=shortSummaryFilter;$scope.getLayerTitle=function(layer){return layer.config.captionTitle||layer.config.title||layer.config.context.dataset.metas.title;};$scope.toggle=function(){if($scope.getCategoriesCount($scope.selectedLayer)<=$scope.maxCategories&&$scope.extended){$scope.extended=false;}else{$scope.extended=!$scope.extended;}
$scope.resizeMapDisplayControl();};$scope.select=function(index){$scope.selectedLayer=$scope.layers[index];if(!$scope.isToggleable($scope.selectedLayer)){$scope.extended=false;}};$scope.previous=function(){$scope.selectedIndex-=1;$scope.select($scope.selectedIndex);$scope.resizeMapDisplayControl();};$scope.next=function(){$scope.selectedIndex+=1;$scope.select($scope.selectedIndex);$scope.resizeMapDisplayControl();};$scope.preventToggle=function(){$scope.clickBlocked=true;};$scope.allowToggle=function(){$scope.clickBlocked=false;};$scope.getCategoriesCount=function(layer){if(angular.isUndefined(layer.config.color.categories)){return 1;}
var count=Object.keys(layer.config.color.categories).length;if(layer.config.otherCategories){count+=1;}
return count;};$scope.getCategories=function(layer,limit){var subset={};var i;var categoryNames=Object.keys(layer.config.color.categories).sort(D4C.ArrayUtils.sortNumbers);if(!limit){limit=categoryNames.length;}
for(i=0;i<Math.min(limit,categoryNames.length);i++){var key=categoryNames[i];subset[key]=layer.config.color.categories[key];}
return subset;};var refreshLayers=function(){var layers=[];$scope.mapConfig.groups.forEach(function(group){if(!group.displayed){return;}
group.layers.forEach(function(layer){if(layer.caption&&layer.context.dataset!==null){var properties={};layers.push({config:layer,properties:properties});properties.legendLabel=MapHelper.getLayerLegendLabel(layer);if(layer.display==='choropleth'){var minBound=layer.color.minValue;var rangesUpperBounds=Object.keys(layer.color.ranges).sort(function(a,b){return parseFloat(a)-parseFloat(b);});var bounds=[];properties.floatLength=Object.keys(layer.color.ranges).reduce(function(sofar,current){if(current.toString().indexOf('.')===-1){return sofar;}else{return Math.max(sofar,current.toString().length-current.toString().indexOf('.')-1);}},0);rangesUpperBounds.forEach(function(upperBound,index){var color=layer.color.ranges[upperBound];if(index===0){bounds.push({color:color,lowerBound:minBound,upperBound:upperBound});}else{bounds.push({color:color,lowerBound:D4C.CalculationUtils.incrementByOneUnit(rangesUpperBounds[index-1]),upperBound:upperBound});}});properties.bounds=bounds;var splitComplementaryColors=MapLayerHelper.getSplitComplementaryColors(layer.color.ranges[rangesUpperBounds[rangesUpperBounds.length-1]]);properties.outOfBoundsColor=layer.color.outOfBoundsColor||splitComplementaryColors[0];if(!layer.func&&!layer.expr){properties.undefinedColor=layer.color.undefinedColor||splitComplementaryColors[1];}
if($scope.resizeMapDisplayControl){$scope.resizeMapDisplayControl();}}else if(layer.display==='heatmap'){var orderedSteps=Object.keys(layer.color.steps).map(parseFloat).sort(D4C.ArrayUtils.sortNumbers);var colors=orderedSteps.map(function(s){return layer.color.steps[s];});var rule="linear-gradient(to right, "+colors.join(',')+")";properties.gradient=rule;}}});});$scope.layers=layers;if($scope.layers.length===0){$scope.selectedIndex=0;$scope.selectedLayer=null;}else if($scope.layers.indexOf($scope.selectedLayer)===-1){$scope.selectedIndex=0;$scope.select(0);}
if($scope.selectedLayer===null&&layers.length>0){$scope.selectedIndex=0;$scope.select(0);}};refreshLayers();$scope.$watchCollection(function(){return $scope.mapConfig.groups.map(function(g){return g.displayed;});},function(nv,ov){if(angular.isDefined(nv)&&angular.isDefined(ov)&&!angular.equals(nv,ov)){var previouslySelectedLayerId=null;if($scope.selectedLayer){previouslySelectedLayerId=$scope.selectedLayer.config._runtimeId;}
refreshLayers();if($scope.layers.length){var index=0;if(previouslySelectedLayerId){$scope.layers.forEach(function(layer){if(layer.config._runtimeId===previouslySelectedLayerId){$scope.selectedIndex=index;$scope.select($scope.selectedIndex);}
index++;});}}}});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cCrossTable',['D4CAPI','$q','$filter','$timeout',function(D4CAPI,$q,$filter,$timeout){var CrossTable=function(rowFields,colField,series,schema,dataset,repeatRowHeaders,displayIntermediaryResults,numberPrecision){this.rowFields=rowFields;this.colField=colField;this.schema=schema;this.dataset=dataset;this.series=series;this.rowNumbersIndexes=[];this.colNumbersIndex={};this.table=[];this.repeatRowHeaders=repeatRowHeaders;this.displayIntermediaryResults=displayIntermediaryResults;this._insertedRowHeaders=[];this.labelBuilder=new LabelBuilder(this.dataset,this.schema,this.rowFields,this.colField);this.numberPrecision=numberPrecision;this.setData=function(columnHeadersAnalysis,rowHeadersAnalyses,analyses){this.resetData();this.buildColNumbersIndexes(columnHeadersAnalysis,false);this.buildRowNumbersIndexes(rowHeadersAnalyses,this.rowFields.length>1);this.buildTableStructure(rowHeadersAnalyses);this.buildTableColumnHeaders(columnHeadersAnalysis,false);this.buildTableRowHeaders(rowHeadersAnalyses,this.rowFields.length>1);this.buildTableBody(analyses,true);};this.resetData=function(){this.colNumbersIndex={};this.rowNumbersIndexes=[];if(this.displayIntermediaryResults){for(var i=0;i<this.rowFields.length;i++){this.rowNumbersIndexes.push(new RowNumbersIndex(this.rowFields,i+1,this.labelBuilder));}}else{this.rowNumbersIndexes.push(new RowNumbersIndex(this.rowFields,this.rowFields.length,this.labelBuilder));}
this._insertedRowHeaders=rowFields.reduce(function(previous,current){previous[current]=[];return previous;},{});this.table=[];};this.buildColNumbersIndexes=function(colValues,isMultiXAnalysis){for(var i=0;i<colValues.length;i++){var index={};for(var j=0;j<this.series.length;j++){var serieName=this.series[j].name;index[serieName]=i*this.series.length+j;}
this.colNumbersIndex[this.labelBuilder.buildLabel(colValues[i],this.colField,isMultiXAnalysis)]=index;}};this.buildRowNumbersIndexes=function(analyses,isMultiXAnalysis){var analysisValues=analyses[analyses.length-1];var currentRowNumber=0;var rowNumbersIndex=this.rowNumbersIndexes[0];for(var i=0;i<analysisValues.length;i++){var analysisValue=analysisValues[i];if(this.displayIntermediaryResults){for(var j=0;j<this.rowFields.length;j++){rowNumbersIndex=this.rowNumbersIndexes[j];if(rowNumbersIndex.getRowNumber(analysisValue,isMultiXAnalysis)===undefined) {rowNumbersIndex.setRowNumber(analysisValue,currentRowNumber,isMultiXAnalysis);currentRowNumber++;}}}else{if(rowNumbersIndex.getRowNumber(analysisValue,isMultiXAnalysis)===undefined) {rowNumbersIndex.setRowNumber(analysisValue,currentRowNumber,isMultiXAnalysis);currentRowNumber++;}}}};this.buildTableStructure=function(analyses){var i;for(i=0;i<Math.min(2,this.series.length);i++){this.table.push([]);}
var that=this;var tableWidth=Object.keys(this.colNumbersIndex).length*this.series.length+this.rowFields.length;var analysisValues;if(this.displayIntermediaryResults){for(i=0;i<analyses.length;i++){analysisValues=analyses[i];angular.forEach(analysisValues,function(){that.table.push(new Array(tableWidth));});}}else{analysisValues=analyses[0];angular.forEach(analysisValues,function(){that.table.push(new Array(tableWidth));});}};this.buildTableColumnHeaders=function(colValues,isMultiXAnalysis){var that=this;var row;var nbSeries=this.series.length;if(nbSeries>1){row=[];angular.forEach(this.rowFields,function(){row.push(new Cell('','d4c-cross-table__cell--header'));});angular.forEach(colValues,function(colValue){row.push(new Cell(that.labelBuilder.buildLabel(colValue,that.colField,isMultiXAnalysis),'d4c-cross-table__cell--header',nbSeries));});this.table[0]=row;row=[];angular.forEach(this.rowFields,function(fieldName){row.push(new Cell(that.schema[fieldName].label,'d4c-cross-table__cell--header'));});var serieHeaders=[];angular.forEach(this.series,function(serie){serieHeaders.push(new Cell(serie.label||serie.name,'d4c-cross-table__cell--header'));});angular.forEach(colValues,function(){row=row.concat(serieHeaders);});this.table[1]=row;}else{row=[];angular.forEach(this.rowFields,function(fieldName){row.push(new Cell(that.schema[fieldName].label,'d4c-cross-table__cell--header'));});angular.forEach(colValues,function(colValue){row.push(new Cell(that.labelBuilder.buildLabel(colValue,that.colField,isMultiXAnalysis),'d4c-cross-table__cell--header'));});this.table[0]=row;}};this.buildTableRowHeaders=function(analyses,isMultiXAnalysis){var that=this;angular.forEach(analyses,function(analysisValues,analysisIndex){angular.forEach(analysisValues,function(analysisValue){var rowNumber=that.getRowNumber(analysisValue,analysisIndex,isMultiXAnalysis)+Math.min(2,that.series.length);var end=that.displayIntermediaryResults?analysisIndex+1:that.rowFields.length;for(var i=0;i<end;i++){var fieldName=that.rowFields[i];var label=that.labelBuilder.buildLabel(analysisValue,fieldName,isMultiXAnalysis);if(i===that.rowFields.length-1||that.repeatRowHeaders||that._insertedRowHeaders[fieldName].indexOf(label)===-1){that.table[rowNumber][i]=new Cell(label,0,'d4c-cross-table__cell--header');that._insertedRowHeaders[fieldName]=[];that._insertedRowHeaders[fieldName].push(label);}}});});};this.buildTableBody=function(analyses,isMultiXAnalysis){var that=this;angular.forEach(analyses,function(analysisValues,analysisIndex){angular.forEach(analysisValues,function(analysisValue){angular.forEach(that.series,function(serie){var row=that.getRowNumber(analysisValue,analysisIndex,isMultiXAnalysis)+Math.min(2,that.series.length);var col=that.getColNumber(analysisValue,serie.name,isMultiXAnalysis)+that.rowFields.length;that.table[row][col]=new Cell($filter('number')(analysisValue[serie.name],that.numberPrecision),'d4c-cross-table__cell--value');});});});};this.getColNumber=function(analysisValue,serieName,isMultiXAnalysis){return this.colNumbersIndex[this.labelBuilder.buildLabel(analysisValue,this.colField,isMultiXAnalysis)][serieName];};this.getRowNumber=function(analysisValue,analysisIndex,isMultiXAnalysis){var rowNumbersIndex=this.rowNumbersIndexes[analysisIndex];return rowNumbersIndex.getRowNumber(analysisValue,isMultiXAnalysis);};return this;};var LabelBuilder=function(dataset,schema,rowFields,colField){this.dataset=dataset;this.schema=schema;this.rowFields=rowFields;this.colField=colField;this.formatXValue=function(xValue){if(angular.isObject(xValue)){var datePattern=D4C.DateFieldUtils.datePatternBuilder('moment')(xValue);return moment(D4C.DateFieldUtils.getDateFromXObject(xValue)).format(datePattern);}
return xValue;};this.buildLabel=function(analysisValue,field,isMultiXAnalysis) {if(isMultiXAnalysis){return this.formatXValue(analysisValue.x[field]);}
return this.formatXValue(analysisValue.x);};return this;};var Serie=function(name){this.name=name;this.label=undefined;this.func=undefined;this.expr=undefined;this.update=function(property,value){this[property]=value;};return this;};var Cell=function(label,classes,colspan){this.label=label;this.colspan=colspan||0;this.classes=classes||'';return this;};var RowNumbersIndex=function(rowFields,depth,labelBuilder){this.rowFields=rowFields;this.depth=depth;this.labelBuilder=labelBuilder;this.rowNumbers={};this.getRowNumber=function(analysisValue,isMultiXAnalysis){var rowNumber=this.rowNumbers;for(var i=0;i<this.depth;i++){var rowField=this.rowFields[i];var label=this.labelBuilder.buildLabel(analysisValue,rowField,isMultiXAnalysis);rowNumber=rowNumber[label];if(rowNumber===undefined){return undefined;}}
return rowNumber;};this.setRowNumber=function(analysisValue,rowNumber,isMultiXAnalysis){for(var i=this.depth-1;i>=0;i--){var rowField=this.rowFields[i];var label=this.labelBuilder.buildLabel(analysisValue,rowField,isMultiXAnalysis);var tmp={};tmp[label]=rowNumber;rowNumber=tmp;}
angular.merge(this.rowNumbers,rowNumber);};return this;};return{restrict:'E',replace:true,scope:{context:'=',column:'@',rows:'@',repeatRowHeaders:'=',displayIntermediaryResults:'=',numberPrecision:'='},template:''+'<div class="d4c-cross-table">'+'    <d4c-spinner with-backdrop ng-show="loading"></d4c-spinner>'+'    <div class="d4c-cross-table__frozen-header-wrapper">'+'        <table class="d4c-cross-table__frozen-header">'+'            <tr ng-repeat="row in table | limitTo:nbFrozenRows track by $index" class="d4c-cross-table__row">'+'                <td ng-repeat="cell in row | limitTo:nbFrozenCols track by $index" '+'                    colspan="{{ cell.colspan }}" '+'                    class="d4c-cross-table__cell {{ cell.classes }}">'+'                    <div class="d4c-cross-table__cell-content" ng-bind="cell.label || \'&nbsp;\'"></div>'+'                </td>'+'            </tr>'+'        </table>'+'    </div>'+'    <div class="d4c-cross-table__frozen-rows-wrapper">'+'        <table class="d4c-cross-table__frozen-rows">'+'            <tr ng-repeat="row in table | limitTo:nbFrozenRows track by $index" class="d4c-cross-table__row">'+'                <td ng-repeat="cell in row | limitTo:row.length:nbFrozenCols track by $index" '+'                    colspan="{{ cell.colspan }}" '+'                    class="d4c-cross-table__cell {{ cell.classes }}">'+'                    <div class="d4c-cross-table__cell-content" ng-bind="cell.label || \'&nbsp;\'"></div>'+'                </td>'+'            </tr>'+'        </table>'+'    </div>'+'    <div class="d4c-cross-table__frozen-cols-wrapper">'+'        <table class="d4c-cross-table__frozen-cols">'+'            <tr ng-repeat="row in table | limitTo:table.length:nbFrozenRows track by $index" class="d4c-cross-table__row">'+'                <td ng-repeat="cell in row | limitTo:nbFrozenCols track by $index" '+'                    colspan="{{ cell.colspan }}" '+'                    class="d4c-cross-table__cell {{ cell.classes }}">'+'                    <div class="d4c-cross-table__cell-content" ng-bind="cell.label || \'&nbsp;\'"></div>'+'                </td>'+'            </tr>'+'        </table>'+'    </div>'+'    <div class="d4c-cross-table__body-wrapper">'+'        <table class="d4c-cross-table__body">'+'            <tr ng-repeat="row in table | limitTo:table.length:nbFrozenRows track by $index" class="d4c-cross-table__row">'+'                <td ng-repeat="cell in row | limitTo:row.length:nbFrozenCols track by $index" '+'                    colspan="{{ cell.colspan }}" '+'                    class="d4c-cross-table__cell {{ cell.classes }}">'+'                    <div class="d4c-cross-table__cell-content" ng-bind="cell.label || \'&nbsp;\'"></div>'+'                </td>'+'            </tr>'+'        </table>'+'    </div>'+'</div>',link:function(scope,element,attrs){scope.table=[];scope.nbFrozenRows=0;scope.nbFrozenCols=0;scope.loading=false;var crossTable;var rows=scope.rows.split(',');var $element=$(element);var $frozenHeaderWrapper=$element.find('.d4c-cross-table__frozen-header-wrapper');var $frozenHeaderTable=$element.find('.d4c-cross-table__frozen-header');var $frozenColsWrapper=$element.find('.d4c-cross-table__frozen-cols-wrapper');var $frozenColsTable=$element.find('.d4c-cross-table__frozen-cols');var $frozenRowsWrapper=$element.find('.d4c-cross-table__frozen-rows-wrapper');var $frozenRowsTable=$element.find('.d4c-cross-table__frozen-rows');var $bodyWrapper=$element.find('.d4c-cross-table__body-wrapper');var $bodyTable=$element.find('.d4c-cross-table__body');var buildSeries=function(){var series={};angular.forEach(attrs,function(attributeValue,attributeName){var regex=/serie([0-9A-Z][0-9a-z]*)(Label|Func|Expr)/g;var match=regex.exec(attributeName);if(match){var name=match[1].toLowerCase();var serie=series[name]||new Serie(name);serie.update(match[2].toLowerCase(),attributeValue);series[name]=serie;}});return Object.keys(series).map(function(name){return series[name];});};var buildFieldSchemas=function(){var schema={};angular.forEach(scope.context.dataset.fields,function(field){if(rows.indexOf(field.name)>-1||field.name==scope.column){schema[field.name]=field;}});return schema;};var buildX=function(fieldNames){fieldNames=angular.isArray(fieldNames)?fieldNames:[fieldNames];var xs=[];angular.forEach(fieldNames,function(fieldName){var fieldSchema=scope.context.dataset.getField(fieldName);if(['date','datetime'].indexOf(fieldSchema.type)>-1){var timescale=scope.context.dataset.getFieldAnnotation(fieldSchema,'timeserie_precision').args[0];xs=xs.concat(D4C.DateFieldUtils.getTimescaleX(fieldName,timescale));}else{xs.push(fieldName);}});return xs;};var buildSort=function(fieldNames){if(!angular.isArray(fieldNames)){fieldNames=[fieldNames];}
return fieldNames.map(function(name){return'x.'+name;}).join(',');};var reloadData=function(){scope.loading=true;var promises=[];var columnXs=buildX(crossTable.colField);var columnHeadersParams={'x':columnXs,'y.serie1.func':'COUNT','sort':buildSort(columnXs)};promises.push(D4CAPI.records.analyze(scope.context,angular.extend({},scope.context.parameters,columnHeadersParams)));var rowHeadersPromises=[];var seriesPromises=[];for(var i=scope.displayIntermediaryResults?0:crossTable.rowFields.length-1;i<crossTable.rowFields.length;i++){var subfields=crossTable.rowFields.slice(0,i+1);var options,xs;xs=buildX(subfields);options=angular.extend({},scope.context.parameters,{'x':xs,'y.serie1.func':'COUNT','sort':buildSort(xs)});rowHeadersPromises.push(D4CAPI.records.analyze(scope.context,options));xs=buildX(subfields.concat(crossTable.colField));options=angular.extend({},scope.context.parameters,{'x':xs,'sort':buildSort(xs)});angular.forEach(crossTable.series,function(serie){options['y.'+serie.name+'.expr']=serie.expr;options['y.'+serie.name+'.func']=serie.func;});seriesPromises.push(D4CAPI.records.analyze(scope.context,options));}
promises=promises.concat(rowHeadersPromises).concat(seriesPromises);$q.all(promises).then(function(responses){var columnHeadersAnalysis=responses[0].data;var rowHeadersAnalyses=responses.slice(1,(responses.length-1)/2+1).map(function(item){return item.data;});var analyses=responses.slice((responses.length-1)/2+1,responses.length).map(function(item){return item.data;});crossTable.setData(columnHeadersAnalysis,rowHeadersAnalyses,analyses);scope.table=crossTable.table;scope.nbFrozenCols=crossTable.rowFields.length;scope.nbFrozenRows=Math.min(2,crossTable.series.length);$timeout(function(){var synchronizeWidth=function($bodyCell,$headerCellContent){var width=Math.max($headerCellContent.outerWidth(),$bodyCell.outerWidth());$headerCellContent.css({width:width});$bodyCell.find('.d4c-cross-table__cell-content').css({width:width});};var serieHeaderCells=$frozenRowsTable.find('tr:last-child .d4c-cross-table__cell-content');$bodyTable.find('tr:first-child td').each(function(index){synchronizeWidth($(this),$(serieHeaderCells[index]));});var headerCells=$frozenHeaderTable.find('tr:last-child .d4c-cross-table__cell-content');$frozenColsTable.find('tr:first-child td').each(function(index){synchronizeWidth($(this),$(headerCells[index]));});headerCells=$frozenHeaderTable.find('td:first-child .d4c-cross-table__cell-content');$frozenRowsTable.find('td:first-child').each(function(index){$(headerCells[index]).css({height:$(this).height()});});var frozenColsWidth=$frozenColsWrapper.outerWidth();var frozenRowsHeight=$frozenRowsWrapper.outerHeight();$frozenHeaderWrapper.css({top:0,left:0,width:frozenColsWidth,height:frozenRowsHeight});$frozenRowsWrapper.css({top:0,left:frozenColsWidth});$frozenColsWrapper.css({top:frozenRowsHeight,left:0});$bodyWrapper.css({top:frozenRowsHeight,left:frozenColsWidth});$bodyWrapper.on('scroll',function(){$frozenColsTable.css({'margin-top':-$(this).scrollTop()});$frozenRowsTable.css({'margin-left':-$(this).scrollLeft()});});$frozenColsWrapper.on('wheel',function(event){$bodyWrapper.scrollTop($bodyWrapper.scrollTop()+event.originalEvent.deltaY);event.preventDefault();});$frozenRowsWrapper.on('wheel',function(event){$bodyWrapper.scrollLeft($bodyWrapper.scrollLeft()+event.originalEvent.deltaX);event.preventDefault();});$bodyTable.find('tr').hover(function(){$frozenColsTable.find('tr:nth-child('+($(this).index()+1)+')').addClass('d4c-cross-table__row--hover');},function(){$frozenColsTable.find('tr:nth-child('+($(this).index()+1)+')').removeClass('d4c-cross-table__row--hover');});$frozenColsTable.find('tr').hover(function(){$bodyTable.find('tr:nth-child('+($(this).index()+1)+')').addClass('d4c-cross-table__row--hover');},function(){$bodyTable.find('tr:nth-child('+($(this).index()+1)+')').removeClass('d4c-cross-table__row--hover');});scope.loading=false;});});};scope.context.wait().then(function(){if(!angular.isDefined(scope.numberPrecision)){scope.numberPrecision=3;}
crossTable=new CrossTable(rows,scope.column,buildSeries(),buildFieldSchemas(),scope.context.dataset,scope.repeatRowHeaders===true,scope.displayIntermediaryResults===true,scope.numberPrecision);scope.$watch('context.parameters',reloadData,true);});}};}]);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cSlideshow',['D4CAPI','$timeout',function(D4CAPI,$timeout){return{restrict:'E',transclude:true,replace:true,scope:{context:'=',imageField:'@?',titleFields:'@',domainUrl:'@?'},template:''+'<div class="d4c-slideshow" '+'     ng-keydown="onKeyDown($event)" '+'     tabindex="0" '+'     aria-label="Slideshow"'+'     translate="aria-label">'+'    <div class="d4c-slideshow__image-wrapper">'+'        <button class="d4c-slideshow__previous-button"'+'                ng-click="loadPreviousImage()"'+'                ng-disabled="currentIndex <= 1"'+'                aria-label="View previous image"'+'                translate="aria-label">'+'            <i class="fa fa-angle-left d4c-slideshow__previous-icon" aria-hidden="true"></i>'+'        </button>'+'        <d4c-spinner ng-show="loading"></d4c-spinner>'+'        <img src="{{ imageUrl}}" '+'             alt="{{ imageTitle }}" '+'             class="d4c-slideshow__image"'+'             width="{{ imageWidth }}"'+'             height="{{ imageHeight }}"'+'             ng-show="imageThumbnail"  >'+'        <div class="d4c-slideshow__tooltip-wrapper"'+'             ng-if="tooltip">'+'            <div class="d4c-slideshow__tooltip" '+'                 inject>'+'                <dl>'+'                   <dt ng-repeat-start="field in context.dataset.fields"'+'                           ng-if="record.fields[field.name]|isDefined">'+'                       {{ field.label }}'+'                   </dt>'+'                   <dd ng-repeat-end ng-switch="field.type"'+'                           ng-if="record.fields[field.name]|isDefined">'+'                        <span ng-switch-when="geo_point_2d">'+'                           <d4c-geotooltip width="300" height="300"'+'                                   coords="record.fields[field.name]">{{ record.fields|formatFieldValue:field:context }}</d4c-geotooltip>'+'                        </span>'+'                        <span ng-switch-when="geo_shape">'+'                            <d4c-geotooltip width="300" height="300"'+'                                   geojson="record.fields[field.name]">{{ record.fields|formatFieldValue:field:context }}</d4c-geotooltip>'+'                        </span>'+'                        <span ng-switch-when="double">{{ record.fields|formatFieldValue:field:context }}</span>'+'                        <span ng-switch-when="int">{{ record.fields|formatFieldValue:field:context }}</span>'+'                        <span ng-switch-when="date">{{ record.fields|formatFieldValue:field:context }}</span>'+'                        <span ng-switch-when="datetime">{{ record.fields|formatFieldValue:field:context }}</span>'+'                        <span ng-switch-when="file">'+'                            <div ng-bind-html="record.fields|formatFieldValue:field:context"></div>'+'                        </span>'+'                       <span ng-switch-default ng-bind-html="record.fields[field.name]|prettyText|nofollow|safenewlines"></span>'+'                   </dd>'+'                </dl>'+'            </div>'+'        </div>'+'        <div class="d4c-slideshow__cannot-display" '+'             ng-hide="imageThumbnail">'+'            <i class="fa fa-eye-slash d4c-slideshow__cannot-display-icon"></i>'+'            <div class="d4c-slideshow__cannot-display-message" translate>Sorry, this file cannot be displayed</div>'+'        </div>'+'        <button class="d4c-slideshow__next-button"'+'                ng-click="loadNextImage()"'+'                aria-label="View next image"'+'                translate="aria-label"'+'                ng-disabled="currentIndex >= lastIndex">'+'            <i class="fa fa-angle-right d4c-slideshow__next-icon" aria-hidden="true"></i>'+'        </button>'+'    </div>'+'    <div class="d4c-slideshow__image-legend">'+'        <div class="d4c-slideshow__image-index"><div class="d4c-slideshow__image-index__item">{{ currentIndex|number:0 }}</div><div class="d4c-slideshow__image-index__item">/</div><div class="d4c-slideshow__image-index__item">{{ lastIndex|number:0 }}</div></div>'+'        <div class="d4c-slideshow__image-title" title="{{ imageTitle }}" ng-bind="imageTitle"></div>'+'        <div class="d4c-slideshow__toggles">'+'            <button class="d4c-slideshow__tooltip-toggle"'+'                    aria-label="Toggle tooltip"'+'                    translate="aria-label"'+'                    ng-click="toggleTooltip()">'+'                <i class="fa fa-question-circle" aria-hidden="true"></i>'+'            </button>'+'            <button class="d4c-slideshow__fullscreen-toggle"'+'                    aria-label="Toggle fullscreen"'+'                    translate="aria-label"'+'                    ng-click="toggleFullscreen()">'+'                <i class="fa fa-arrows-alt" ng-hide="fullscreen" aria-hidden="true"></i>'+'                <i class="fa fa-compress" ng-show="fullscreen" aria-hidden="true"></i>'+'            </button>'+'        </div>'+'    </div>'+'</div>',link:function(scope,element){scope.loading=false;scope.currentIndex=0;scope.lastIndex=0;scope.imageUrl='';scope.imageTitle='';scope.imageWidth=0;scope.imageHeight=0;scope.imageThumbnail=true;scope.fullscreen=false;scope.tooltip=false;var titleFields;if(angular.isDefined(scope.titleFields)){titleFields=scope.titleFields.split(',');}
var imageWrapperElement=$(element).children('.d4c-slideshow__image-wrapper');var $imageIndex=$(element).find('.d4c-slideshow__image-index');var $image=$(element).find('.d4c-slideshow__image');var image;var resizeImage=function(){if(image){var ratio=Math.min(imageWrapperElement.width()/image.width,imageWrapperElement.height()/image.height,1);scope.imageWidth=ratio*image.width;scope.imageHeight=ratio*image.height;scope.$apply();}};var loadImage=function(index){var searchParameters=angular.extend({},scope.context.parameters,{rows:1,start:index-1,q:'NOT #null('+scope.imageField+')'});scope.loading=true;D4CAPI.records.search(scope.context,searchParameters).success(function(response){if(!scope.lastIndex){scope.currentIndex=response.nhits;scope.lastIndex=response.nhits;$timeout(function(){$imageIndex.css({width:'auto'});$timeout(function(){$imageIndex.css({width:$imageIndex.outerWidth()});scope.lastIndex=response.nhits;scope.currentIndex=index;});});}else{scope.lastIndex=response.nhits;scope.currentIndex=index;}
if(response.records.length){var record=response.records[0];image=record.fields[scope.imageField];scope.imageThumbnail=image.thumbnail;if(image.thumbnail){scope.imageUrl=D4C.Record.getImageUrl(record,scope.imageField,scope.context.domainUrl);}else{scope.imageUrl='';}
if(titleFields.length){scope.imageTitle=titleFields.filter(function(field){return record.fields[field];}).map(function(field){return record.fields[field];}).join(', ');}
scope.record=record;}
scope.loading=false;}).error(function(){scope.loading=false;});};scope.loadPreviousImage=function(){if(scope.currentIndex>1){loadImage(scope.currentIndex-1);}};scope.loadNextImage=function(){if(scope.currentIndex<scope.lastIndex){loadImage(scope.currentIndex+1);}};scope.toggleFullscreen=function(){var target=element[0];if(!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement){if(target.requestFullscreen){target.requestFullscreen();}else if(target.mozRequestFullScreen){target.mozRequestFullScreen();}else if(target.webkitRequestFullscreen){target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);}}else{if(document.cancelFullScreen){document.cancelFullScreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitCancelFullScreen){document.webkitCancelFullScreen();}}};scope.toggleTooltip=function(){scope.tooltip=!scope.tooltip;};scope.onKeyDown=function($event){if(scope.loading){return;}
var elementDirection=$(element).css('direction');if(elementDirection==="rtl"){if($event.keyCode==37){scope.loadNextImage();return;}
if($event.keyCode==39){scope.loadPreviousImage();return;}}else{if($event.keyCode==39){scope.loadNextImage();return;}
if($event.keyCode==37){scope.loadPreviousImage();return;}}};$(document).on('webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange',function(event){if(event.target==element[0]){scope.fullscreen=!scope.fullscreen;$timeout(resizeImage);}});$image.on('load',resizeImage);var unwatch=scope.$watch('context.dataset',function(nv){if(nv){var i,field;if(!titleFields){for(i=0;i<scope.context.dataset.fields.length;i++){field=scope.context.dataset.fields[i];if(field.type==='text'){titleFields=[field.name];break;}}}
if(!scope.imageField){for(i=0;i<scope.context.dataset.fields.length;i++){field=scope.context.dataset.fields[i];if(field.type==='file'){scope.imageField=field.name;break;}}}
loadImage(1);unwatch();scope.$watch('context.parameters',function(nv,ov){if(!angular.equals(nv,ov)){scope.currentIndex=0;scope.lastIndex=0;loadImage(1);}},true);}},true);}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTopPublishers',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,template:'<div class="d4cwidget d4cwidget-top-publishers">'+'<ul class="d4cwidget-top-publishers__publishers">'+'   <li class="no-data" ng-hide="publishers" translate>No data available yet</li>'+'   <li class="d4cwidget-top-publishers__publisher" ng-repeat="publisher in publishers" ng-if="publishers">'+'       <div class="d4cwidget-top-publishers__publisher-details">'+'           <div class="d4cwidget-top-publishers__publisher-details-name"><a ng-href="{{ context.domainUrl }}/explore/?refine.publisher={{ publisher.path }}" target="_self">{{ publisher.name }}</a></div>'+'           <div class="d4cwidget-top-publishers__publisher-details-count"><i class="fa fa-table" aria-hidden="true"></i> <span translate translate-n="publisher.count" translate-plural="Used by {{$count}} datasets">Used by {{$count}} dataset</span></div>'+'       </div>'+'   </li>'+'</ul>'+'</div>',scope:{context:'='},controller:['$scope',function($scope){var refresh=function(){D4CAPI.datasets.facets($scope.context,'publisher').success(function(data){$scope.publishers=data.facet_groups[0].facets.slice(0,5);});};$scope.$watch('context',function(){refresh();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var renderCard=function(transcludeService,scope,elem){var datasetItem=elem.find('.dataset-item').first();var cardContainer=elem.find('.card-container');var cardHeight=$(cardContainer).outerHeight();if(scope.position=="bottom"){$(datasetItem).css('top',0);$(datasetItem).css('bottom',cardHeight);}else{$(datasetItem).css('top',cardHeight);$(datasetItem).css('bottom',0);}
transcludeService(function(clone){$(datasetItem).html(clone);});};mod.directive('d4cDatasetCard',function(){return{restrict:'E',scope:{context:'='},template:'<div class="d4cwidget d4cwidget-dataset-card">'+'<div class="card-container" ng-class="{bottom: position == \'bottom\', expanded: expanded, expandable: isExpandable()}">'+'<h2 class="dataset-title" ng-click="expanded = !expanded" ng-show="!expanded || (expanded && !context.dataset.metas.description)">{{context.dataset.metas.title}}</h2>'+'<div ng-click="expanded = !expanded" class="expand-control" title="Show/hide details" translate="title"><span translate>Details</span> <i class="fa fa-chevron-down" ng-show="!expanded" aria-hidden="true"></i><i class="fa fa-chevron-up" aria-hidden="true" ng-hide="!expanded"></i></div>'+'<div class="dataset-expanded" ng-click="expanded = !expanded"">'+'<h2 class="dataset-title" ng-show="expanded">{{context.dataset.metas.title}}</h2>'+'<p class="dataset-description" ng-if="expanded" ng-bind-html="safeHtml(context.dataset.metas.description)"></p>'+'</div>'+'<div class="dataset-infos"><span class="dataset-infos-text"><a ng-href="{{datasetUrl}}" target="_blank" ng-bind-html="websiteName"></a><span ng-show="context.dataset.metas.license"> - <span translate>License</span> {{context.dataset.metas.license}}</span></span></div>'+'</div>'+'<div class="dataset-item"></div>'+'</div>',replace:true,transclude:true,link:function(scope,elem,attrs){scope.position=attrs.position||"top";},controller:['$scope','$element','D4CWidgetsConfig','$transclude','$sce','$timeout',function($scope,$element,D4CWidgetsConfig,$transclude,$sce,$timeout){$scope.renderContent=renderCard;$scope.websiteName=D4CWidgetsConfig.websiteName;$scope.expanded=false;$scope.safeHtml=function(html){return $sce.trustAsHtml(html);};$scope.isExpandable=function(){if(!$scope.context||!$scope.context.dataset||!$scope.context.dataset.datasetid){return false;}
if(!$scope.context.dataset.metas.description){return false;}
return true;};var unwatch=$scope.$watch('context',function(nv,ov){if(!nv||!nv.dataset){return;}
$timeout(function(){$scope.renderContent($transclude,$scope,$element);},0);$scope.expanded=false;$scope.datasetUrl=$scope.context.domainUrl+'/explore/dataset/'+$scope.context.dataset.datasetid+'/';if(!$scope.websiteName){$scope.websiteName=$scope.context.domainUrl;}
unwatch();},true);$scope.renderContent($transclude,$scope,$element);}]};});mod.directive('d4cMultidatasetsCard',['D4CWidgetsConfig',function(D4CWidgetsConfig){return{restrict:'E',scope:{d4cTitle:'=',datasets:'=',context:'='},template:'<div class="d4cwidget-multidatasets-card">'+'  <div class="card-container multidatasets" ng-class="{bottom: (position == \'bottom\'), expanded: expanded, expandable: isExpandable()}">'+'      <h2 ng-show="!expanded" ng-click="tryToggleExpand()">{{ d4cTitle }}</h2>'+'      <div ng-click="tryToggleExpand()" class="expand-control" ng-class="{expanded: expanded}" title="Show/hide details"><span translate>Details</span> <i class="fa fa-chevron-down" aria-hidden="true"></i></div>'+'      <h3 class="datasets-counter" ng-click="tryToggleExpand()" ng-show="!expanded">'+'          <span class="count-text" ng-hide="!datasetObjectKeys || datasetObjectKeys.length <= 1">'+'               <span translate translate-n="datasetObjectKeys.length" translate-plural="{{ $count }} datasets">{{ $count }} dataset</span>'+'          </span>'+'      </h3>'+'      <div class="datasets-expanded">'+'          <h2 ng-show="expanded" ng-click="tryToggleExpand()">{{ d4cTitle }}</h2>'+'          <h3 class="datasets-counter" ng-click="tryToggleExpand()" ng-show="expanded">'+'              <span class="count-text">'+'                   <span ng-if="datasetObjectKeys.length == 0" translate>no dataset to display</span>'+'                   <span ng-if="datasetObjectKeys.length > 0" translate translate-n="datasetObjectKeys.length" translate-plural="{{ $count }} datasets">{{ $count }} dataset</span>'+'              </span>'+'          </h3>'+'          <ul class="dataset-list"'+'              ng-show="(datasetObjectKeys && datasetObjectKeys.length === 1) || (isExpandable() && expanded)"'+'              ng-class="{\'single-dataset\': datasetObjectKeys.length === 1}">'+'              <li ng-repeat="(key, dataset) in datasets"> <a'+'                  ng-href="{{context.domainUrl}}/explore/dataset/{{dataset.datasetid}}/"'+'                  target="_blank">{{ dataset.metas.title }}</a>'+'                  <span ng-show="dataset.metas.license">- <span translate>License</span> {{ dataset.metas.license }}</span></li>'+'          </ul>'+'      </div>'+'      <div class="dataset-infos"><span class="dataset-infos-text"><a ng-href="/" target="_blank" ng-bind-html="websiteName"></a></span></div>'+'  </div>'+'  <!-- embedded content (chart, map etc.) -->'+'  <div class="dataset-item" ng-transclude></div>'+'</div>',replace:true,transclude:true,link:function(scope,elem,attrs){scope.position=attrs.position||"top";},controller:['$scope','$element','D4CWidgetsConfig','$transclude','$sce','$timeout',function($scope,$element,D4CWidgetsConfig,$transclude,$sce,$timeout){$scope.renderContent=renderCard;$scope.datasetObjectKeys=[];$scope.websiteName=D4CWidgetsConfig.websiteName;$scope.safeHtml=function(html){return $sce.trustAsHtml(html);};$scope.isExpandable=function(){if(!$scope.datasetObjectKeys.length||($scope.datasetObjectKeys.length===1)){return false;}
return true;};$scope.tryToggleExpand=function(){if($scope.isExpandable()){$scope.expanded=!$scope.expanded;}};var unwatch=$scope.$watch('datasets',function(nv,ov){if(nv){var keys=Object.keys(nv);if(keys.length===0){return;}
$scope.datasetObjectKeys=keys;$timeout(function(){$scope.renderContent($transclude,$scope,$element);},0);$scope.expanded=false;unwatch();}},true);$timeout(function(){$scope.renderContent($transclude,$scope,$element);},0);}]};}]);})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cAggregation',['D4CAPI',function(D4CAPI){return{restrict:'A',scope:true,controller:['$scope','$attrs',function($scope,$attrs){var aggregationNames=D4C.ArrayUtils.fromCSVString($attrs.d4cAggregation||'aggregation');var getAttr=function(attributeName,aggregationName){var specificAttr=$attrs['d4cAggregation'+D4C.StringUtils.capitalize(aggregationName)+D4C.StringUtils.capitalize(attributeName)];var genericAttr=$attrs['d4cAggregation'+D4C.StringUtils.capitalize(attributeName)];return specificAttr||genericAttr;};var getContext=function(aggregationName){return $scope.$eval(getAttr('context',aggregationName));};var getFunc=function(aggregationName){return getAttr('function',aggregationName)||'COUNT';};var getExpr=function(aggregationName){return getAttr('expression',aggregationName);};angular.forEach(aggregationNames,function(aggregationName){var context=getContext(aggregationName);context.wait().then(function(){$scope.$watch(context.name+'.parameters',function(nv){var options=angular.extend({},nv,{'y.serie1.expr':getExpr(aggregationName),'y.serie1.func':getFunc(aggregationName)});D4CAPI.records.analyze(context,options).success(function(data){if(data.length){$scope[aggregationName]=data[0].serie1;}else{$scope[aggregationName]=null;}});},true);});});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cReuses',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,transclude:true,template:'<div class="d4cwidget d4cwidget-reuses">'+'  <div infinite-scroll="loadMore()" infinite-scroll-distance="1">'+'      <div class="d4cwidget-reuses__reuse" ng-repeat="reuse in reuses" d4c-full-click inject>'+'          <h2 class="d4cwidget-reuses__reuse-title">{{ reuse.title }}'+'             <a href="/explore/dataset/{{ reuse.dataset.id }}/?tab=metas" class="d4cwidget-reuses__reuse-dataset-link" target="_self"><span translate>From dataset:</span> {{ reuse.dataset.title }}</a>'+'          </h2>'+'          <div class="d4cwidget-reuses__reuse-infos">'+'              <div class="d4cwidget-reuses__reuse-thumbnail" ng-class="{\'d4cwidget-reuses__reuse-thumbnail--no-thumbnail\': !reuse.thumbnail}">'+'                  <a ng-show="reuse.thumbnail" href="{{ reuse.url }}" d4c-main-click title="{{ reuse.title }}" target="_blank"><img class="d4cwidget-reuses__reuse-thumbnail-image" ng-src="{{ reuse.thumbnail }}" /></a>'+'                  <i ng-hide="reuse.thumbnail" class="fa fa-ban d4cwidget-reuses__reuse-thumbnail-image--no-thumbnail"></i>'+'              </div>'+'              <div class="d4cwidget-reuses__reuse-description" ng-bind-html="reuse.description|prettyText|safenewlines"></div>'+'          </div>'+'          <div class="d4cwidget-reuses__reuse-author">'+'              <strong ng-if="reuse.user.first_name || reuse.user.last_name">{{ reuse.user.first_name }} {{ reuse.user.last_name }}</strong>'+'              <strong ng-if="!reuse.user.first_name && !reuse.user.last_name">{{ reuse.user.username }}</strong>'+'              <i class="fa fa-calendar d4cwidget-reuses__creation-icon" aria-hidden="true"></i> {{ reuse.created_at|moment:\'LLL\' }}'+'          </div>'+'      </div>'+' </div>'+'</div>',scope:{context:'='},controller:['$scope',function($scope){var done=false;var fetching=false;var numberReuses=0;var page=1;var resultsPerPage=20;$scope.reuses=[];$scope.loadMore=function(){if($scope.reuses.length&&!done&&!fetching){fetching=true;var start=page*resultsPerPage;D4CAPI.reuses($scope.context,{'rows':resultsPerPage,'start':start}).success(function(data){$scope.reuses=$scope.reuses.concat(data.reuses);done=(page+1)*resultsPerPage>=numberReuses;page++;fetching=false;}).error(function(){fetching=false;});}};var refresh=function(){fetching=true;D4CAPI.reuses($scope.context,{'rows':resultsPerPage}).success(function(data){$scope.reuses=data.reuses;done=resultsPerPage>=data.nhits;numberReuses=data.nhits;fetching=false;}).error(function(data){fetching=false;});};$scope.$watch('context',function(){refresh();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cLastReusesFeed',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,transclude:true,template:'<div class="d4cwidget d4cwidget-last-reuses-feed">'+'<ul class="d4cwidget-last-reuses-feed__reuses">'+'   <li class="no-data" ng-hide="reuses" translate>No data available yet</li>'+'   <li class="d4cwidget-last-reuses-feed__reuse" ng-repeat="reuse in reuses" ng-if="reuses" inject>'+'       <div class="d4cwidget-last-reuses-feed__reuse-thumbnail">'+'           <span style="display: inline-block; height: 100%; vertical-align: middle;"></span>'+'           <a ng-href="{{reuse.url}}" target="_self"><img class="d4cwidget-last-reuses-feed__reuse-thumbnail-image" ng-if="reuse.thumbnail" ng-src="{{ reuse.thumbnail }}"></a>'+'       </div>'+'       <div class="d4cwidget-last-reuses-feed__reuse-details">'+'           <div class="d4cwidget-last-reuses-feed__reuse-details-title"><a ng-href="{{reuse.url}}" target="_self">{{ reuse.title }}</a></div>'+'           <div class="d4cwidget-last-reuses-feed__reuse-details-dataset"><a ng-href="{{reuse.datasetUrl}}" target="_self">{{ reuse.dataset.title }}</a></div>'+'           <div class="d4cwidget-last-reuses-feed__reuse-details-modified"><span title="{{ reuse.created_at|moment:\'LLL\' }}"><i class="fa fa-calendar" aria-hidden="true"></i> {{ reuse.created_at|timesince }}</span></div>'+'       </div>'+'   </li>'+'</ul>'+'</div>',scope:{context:'=',max:'@',externalLinks:'=?'},controller:['$scope',function($scope){$scope.max=$scope.max||5;var refresh=function(){D4CAPI.reuses($scope.context,{'rows':$scope.max}).success(function(data){angular.forEach(data.reuses,function(reuse){if(!$scope.externalLinks){reuse.url=$scope.context.domainUrl+'/explore/dataset/'+reuse.dataset.id+'/information/';}
reuse.datasetUrl=$scope.context.domainUrl+'/explore/dataset/'+reuse.dataset.id+'/information/';});$scope.reuses=data.reuses;});};$scope.$watch('context',function(){refresh();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cTextSearch',['QueryParameters',function(QueryParameters){var suffixBlacklist=QueryParameters;return{restrict:'E',replace:true,template:''+'<div class="d4cwidget d4cwidget-text-search">'+'   <form ng-submit="applySearch()" class="d4cwidget-text-search__form">'+'       <input class="d4cwidget-text-search__search-box" name="q" type="text" '+'               ng-model="searchExpression" '+'               aria-label="{{ translatedPlaceholder }}" '+'               placeholder="{{ translatedPlaceholder }}"> '+'       <button type="reset" class="d4cwidget-text-search__reset" ng-show="searchExpression" ng-click="resetSearch()" aria-label="Reset search" translate="aria-label">'+'           <i class="fa fa-times-circle" aria-hidden="true"></i>'+'       </button>'+'       <button type="submit" class="d4cwidget-text-search__submit" aria-label="Search in catalog" translate="aria-label">'+'           <i class="fa fa-search" aria-hidden="true"></i>'+'       </button>'+'    </form>'+'</div>',scope:{placeholder:'@?',button:'@?',context:'=',field:'@?',suffix:'@?'},link:function(scope,element,attrs){if('autofocus'in attrs){$(element).find('input').focus();}},controller:['$scope','$attrs','translate',function($scope,$attrs,translate){var contexts=[];var config={};if(!angular.isArray($scope.context)){contexts.push($scope.context);}else{contexts=$scope.context;}
if($scope.suffix&&suffixBlacklist.indexOf('q.'+$scope.suffix)!==-1){throw"The "+$scope.suffix+" suffix is reserved and cannot be used for text-search";}
var parseParameter=function(context,returnOriginalValue){var contextConfig=getContextConfig(context);var queryKey=getQueryParameter(contextConfig);var parameterValue=context.parameters[queryKey];if(!parameterValue){return;}
var pattern=/([\w-_]+):\s?"(.*)"/;var matches=parameterValue.match(pattern);if(matches&&contextConfig['field']===matches[1]){return matches[2];}else if(returnOriginalValue){return parameterValue;}};var getField=function(context){return $attrs[context.name+'Field']||$scope.field;};var getContextConfig=function(context){return config[context.name];};var getQueryParameter=function(config){return config['parameter'];};var unwatch=$scope.$watch('context',function(newContext,oldContext){if(newContext){if(!angular.isArray(newContext)){newContext=[newContext];}
angular.forEach(contexts,function(context){var fieldValue=getField(context);var queryParameter='q';if($scope.suffix){queryParameter+='.'+$scope.suffix;}
config[context.name]={field:fieldValue,parameter:queryParameter};});angular.forEach(newContext,function(context){$scope.searchExpression=$scope.searchExpression||parseParameter(context);});if(!$scope.searchExpression){angular.forEach(newContext,function(context){var contextConfig=getContextConfig(context);var queryParameter=getQueryParameter(contextConfig);$scope.searchExpression=$scope.searchExpression||context.parameters[queryParameter];});}
unwatch();$scope.$watch(function(){return contexts.map(function(context){var contextConfig=getContextConfig(context);var queryParameter=getQueryParameter(contextConfig);return context.parameters[queryParameter];});},function(nv,ov){if(!angular.equals(nv,ov)){var allInSync=true;var searchExpression=parseParameter(contexts[0],true);for(var i=1;i<contexts.length;i++){var contextSearchExpression=parseParameter(contexts[i],true);if(searchExpression!=contextSearchExpression){allInSync=false;break;}}
if(allInSync){$scope.searchExpression=searchExpression;}}},true);}});var placeholderUnwatcher=$scope.$watch('placeholder',function(nv,ov){if(nv){$scope.translatedPlaceholder=translate($scope.placeholder);placeholderUnwatcher();}});$scope.resetSearch=function(){angular.forEach(contexts,function(context){var contextConfig=getContextConfig(context);var queryParameter=getQueryParameter(contextConfig);delete context.parameters[queryParameter];});};$scope.applySearch=function(){angular.forEach(contexts,function(context){var contextConfig=getContextConfig(context);var queryParameter=getQueryParameter(contextConfig);if(contextConfig['field']&&$scope.searchExpression){context.parameters[queryParameter]=contextConfig['field']+':"'+$scope.searchExpression+'"';}else{context.parameters[queryParameter]=$scope.searchExpression;}});};}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cThemeBoxes',function(){return{restrict:'E',replace:false,template:''+'<div class="d4cwidget d4cwidget-theme-boxes">'+'   <div ng-repeat="item in items" class="d4cwidget-theme-boxes__box" d4c-facet-results="items" d4c-facet-results-context="context" d4c-facet-results-facet-name="theme">'+'       <a ng-href="{{context.domainUrl}}/explore/?refine.theme={{encode(item.path)}}" target="_self" translate="d4c-tooltip" translate-n="item.count" translate-plural="{{item.name}} ({{$count}} datasets)" d4c-tooltip="{{item.name}} ({{$count}} dataset)" d4c-tooltip-direction="bottom" style="display: block;">'+'           <d4c-theme-picto class="d4cwidget-theme-boxes__picto" theme="{{item.name}}"></d4c-theme-picto>'+'       </a>'+'   </div>'+'</div>',scope:{context:'='},controller:['$scope',function($scope){$scope.encode=encodeURIComponent;}]};});}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMostUsedThemes',['D4CAPI',function(D4CAPI){return{restrict:'E',replace:true,template:'<div class="d4cwidget d4cwidget-most-used-themes">'+'<ul class="d4cwidget-most-used-themes__themes">'+'   <li class="no-data" ng-hide="themes" translate>No data available yet</li>'+'   <li class="d4cwidget-most-used-themes__theme" ng-repeat="theme in themes" ng-if="themes">'+'       <div class="d4cwidget-most-used-themes__theme-details">'+'           <div class="d4cwidget-most-used-themes__theme-details-name"><a ng-href="{{ context.domainUrl }}/explore/?refine.theme={{ theme.path }}" target="_self">{{ theme.name }}</a></div>'+'           <div class="d4cwidget-most-used-themes__theme-details-count"><i class="fa fa-table" aria-hidden="true"></i> <span translate translate-n="theme.count" translate-plural="Used by {{$count}} datasets">Used by {{$count}} dataset</span></div>'+'       </div>'+'   </li>'+'</ul>'+'</div>',scope:{context:'='},controller:['$scope',function($scope){var refresh=function(){D4CAPI.datasets.facets($scope.context,'theme').success(function(data){if(data.facet_groups){$scope.themes=data.facet_groups[0].facets.slice(0,5);}});};$scope.$watch('context',function(){refresh();});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cPaginationBlock',['$location',function($location){return{restrict:'E',replace:true,template:''+'<div class="d4cwidget d4cwidget-pagination" ng-show="pages.length > 1">'+'    <ul class="d4cwidget-pagination__page-list">'+'        <li class="d4cwidget-pagination__page" ng-repeat="page in pages">'+'            <a class="d4cwidget-pagination__page-link" '+'               ng-class="{\'d4cwidget-pagination__page-link--active\': page.start == (context.parameters.start||0)}" '+'               ng-attr-rel="{{nofollow?\'nofollow\':\'\'}}"'+'               ng-click="click($event, page.start)" '+'               href="?start={{ page.start }}" '+'               rel="nofollow">{{ page.label }}</a>'+'        </li>'+'    </ul>'+'</div>',scope:{context:'=',perPage:'@',nofollow:'@',containerIdentifier:'@'},controller:['$scope','$anchorScroll',function($scope,$anchorScroll){$scope.location=$location;$scope.pages=[];$scope.perPage=$scope.perPage||10;$scope.click=function(e,start){e.preventDefault();$scope.context.parameters.start=start;};var buildPages=function(){if($scope.context.nhits===0){$scope.pages=[];return;}
var pagesCount=Math.max(1,Math.floor(($scope.context.nhits-1)/$scope.perPage)+1);var pages=[];var pageNum;if(pagesCount<=8){for(pageNum=1;pageNum<=pagesCount;pageNum++){pages.push({'label':pageNum,'start':(pageNum-1)*$scope.perPage});}}else{var currentPage;if(!$scope.context.parameters.start){currentPage=1;}else{currentPage=Math.floor($scope.context.parameters.start/$scope.perPage)+1;}
if(currentPage<=5){for(pageNum=1;pageNum<=8;pageNum++){pages.push({'label':pageNum,'start':(pageNum-1)*$scope.perPage});}
pages.push({'label':'>>','start':(pagesCount-1)*$scope.perPage});}else if(currentPage>=(pagesCount-4)){pages.push({'label':'<<','start':0});for(pageNum=(pagesCount-7);pageNum<=pagesCount;pageNum++){pages.push({'label':pageNum,'start':(pageNum-1)*$scope.perPage});}}else{pages.push({'label':'<<','start':0});for(pageNum=(currentPage-3);pageNum<=(currentPage+3);pageNum++){pages.push({'label':pageNum,'start':(pageNum-1)*$scope.perPage});}
pages.push({'label':'>>','start':(pagesCount-1)*$scope.perPage});}}
$scope.pages=pages;};var containerElement;if($scope.containerIdentifier){containerElement=document.getElementById($scope.containerIdentifier);}
var unwatch=$scope.$watch('context',function(nv,ov){if(nv){$scope.$watch('context.nhits',function(newValue,oldValue){if($scope.context.nhits!==undefined&&$scope.perPage)
buildPages();});$scope.$watch('perPage',function(newValue,oldValue){if($scope.context.nhits&&$scope.perPage)
buildPages();});$scope.$watch('context.parameters.start',function(newValue,oldValue){if($scope.context.nhits&&$scope.perPage)
buildPages();if(angular.isDefined(newValue)||angular.isDefined(oldValue)){if(containerElement){containerElement.scrollTop=0;}else{$anchorScroll();}}});unwatch();}});}]};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var autoResizeDefinition=['$timeout','$window',function($timeout,$window){return{restrict:'A',require:["?d4cAutoResize","?autoResize"],controller:function($scope,$element){},link:function(scope,element,attrs,ctrls){var timeout;var ctrl=ctrls[0]||ctrls[1];var autoresize=attrs.d4cAutoResize||attrs.autoResize;if(autoresize!=='false'){var resize=function(){var height=Math.max(200,angular.element($window).height()-element.offset().top);element.height(height);};resize();$(window).on('resize',function(){$timeout.cancel(timeout);timeout=$timeout(function(){resize();if(ctrl.onResize){ctrl.onResize();}},50);});}}};}];mod.directive('d4cAutoResize',autoResizeDefinition);mod.directive('autoResize',autoResizeDefinition);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cMapSearchBox',['$timeout','AlgoliaPlaces','MapHelper','PictoHelper','SVGInliner',function($timeout,AlgoliaPlaces,MapHelper,PictoHelper,SVGInliner){return{restrict:'E',template:''+'<div class="d4cwidget d4cwidget-map-search-box" '+'     ng-class="{\'d4cwidget-map-search-box--datasearch\': dataSearchActive, \'d4cwidget-map-search-box--expanded\': expanded}">'+'   <div class="d4cwidget-map-search-box__box-wrapper"'+'        ng-class="{\'d4cwidget-map-search-box__box-wrapper--datasearch\': dataSearchActive}">'+'       <input type="text" '+'              class="d4cwidget-map-search-box__box"'+'              ng-class="{\'d4cwidget-map-search-box__box--datasearch\': dataSearchActive}"'+'              ng-model="userQuery" '+'              ng-change="runQuery(userQuery)" '+'              ng-keydown="handleKeyDown($event)"'+'              ng-focus="expandSearchBox()" >'+'       <button type="button" class="d4cwidget-map-search-box__box-cancel" ng-click="resetSearch()" ng-show="userQuery || dataSearchActive">'+'           <i class="fa fa-times d4cwidget-map-search-box__close-search-icon"></i>'+'       </button>'+'       <button class="d4cwidget-map-search-box__toggle"'+'               ng-hide="expanded"'+'               d4c-tooltip="Expand the search bar"'+'               d4c-tooltip-direction="right"'+'               translate="d4c-tooltip"'+'               ng-click="expandSearchBox()">'+'           <i class="fa fa-caret-right"></i>'+'       </button>'+'       <button class="d4cwidget-map-search-box__toggle"'+'               ng-show="expanded"'+'               d4c-tooltip="Collapse the search bar"'+'               translate="d4c-tooltip"'+'               d4c-tooltip-direction="left"'+'               ng-click="collapseSearchBox()">'+'           <i class="fa fa-caret-left"></i>'+'       </button>'+'   </div>'+'   <ul class="d4cwidget-map-search-box__suggestions" '+'     ng-class="{\'d4cwidget-map-search-box__suggestions--expanded\': expanded}"'+'       ng-if="!dataSearchActive && userQuery">'+'       <li ng-show="userQuery"'+'           ng-click="runDataSearch(userQuery)"'+'           ng-class="[\'d4cwidget-map-search-box__search-suggestion\', {\'d4cwidget-map-search-box__search-suggestion--selected\': selectedIndex === 0}]">'+'           <i class="fa fa-search"></i> Search {{userQuery}} in displayed data'+'       </li>'+'       <li ng-repeat="suggestion in suggestions" '+'           ng-click="moveToSuggestion(suggestion, $index + 1)"'+'           ng-class="[\'d4cwidget-map-search-box__suggestion\', {\'d4cwidget-map-search-box__suggestion--selected\': selectedIndex === $index + 1}]">'+'           <i ng-class="[\'d4cwidget-map-search-box__suggestion-icon\', getSuggestionIcon(suggestion)]"></i>'+'           <span class="d4cwidget-map-search-box__suggestion-name" ng-bind-html="suggestion._highlightResult.locale_names[0].value"></span>'+'           <span class="d4cwidget-map-search-box__suggestion-localization" ng-bind-html="getLocalization(suggestion)"></span>'+'       </li>'+'   </ul>'+'   <div class="d4cwidget-map-search-box__data-search" ng-if="dataSearchActive">'+'       <d4c-spinner ng-if="dataSearchWorking"></d4c-spinner>'+'       <ul ng-if="!dataSearchWorking && datasetSearchDatasetsCount > 1" class="d4cwidget-map-search-box__data-search__datasets">'+'           <li ng-repeat="result in dataSearchResults" '+'               ng-click="selectResult(result)"'+'               class="d4cwidget-map-search-box__data-search__dataset"'+'               ng-class="{\'d4cwidget-map-search-box__data-search__dataset--active\': selectedResult === result}">'+'               <div class="d4cwidget-map-search-box__data-search__dataset-title" ng-bind="::result.context.dataset.metas.title"></div>'+'               <div class="d4cwidget-map-search-box__data-search__dataset-count">'+'                   {{result.nhits}} items'+'               </div>'+'           </li>'+'       </ul>'+'       <ul ng-if="!dataSearchWorking && datasetSearchDatasetsCount > 0" class="d4cwidget-map-search-box__data-search__results">'+'           <li ng-repeat="record in currentResults" '+'               class="d4cwidget-map-search-box__data-search__result"'+'               d4c-tooltip'+'               d4c-tooltip-template="getResultPreviewTemplate(selectedResult.context.dataset, record)"'+'               ng-click="moveToDataRecord(selectedResult.context.dataset, record)">'+'               <i class="fa fa-map-marker d4cwidget-map-search-box__data-search__result-icon"></i>'+'               <span class="d4cwidget-map-search-box__data-search__result-empty" ng-if="getResultTitle(selectedResult.context.dataset, record) === null" translate>Empty</span>'+'               <span ng-if="getResultTitle(selectedResult.context.dataset, record) !== null">{{getResultTitle(selectedResult.context.dataset, record)}}</span>'+'           </li>'+'       </ul>'+'       <div class="d4cwidget-map-search-box__data-search__no-results" ng-if="!dataSearchWorking && datasetSearchDatasetsCount === 0">'+'           No results found for your search'+'       </div>'+'       <div class="d4cwidget-map-search-box__data-search__pagination" ng-if="!dataSearchWorking && datasetSearchDatasetsCount > 0">'+'           <div class="d4cwidget-map-search-box__data-search__pagination-counter">'+'               {{ selectedResult.nhits }} results'+'           </div>'+'           <div class="d4cwidget-map-search-box__data-search__pagination-pages">'+'               {{currentResultsStartIndex+1}}'+'               -'+'               {{selectedResult.nhits|min:(currentResultsStartIndex+11)}}'+'               <button type="button" '+'                       ng-click="previousResultPage()" '+'                       ng-disabled="currentResultsStartIndex === 0"'+'                       class="d4cwidget-map-search-box__data-search__pagination-button">'+'                   <i class="fa fa-chevron-left"></i>'+'               </button>'+'               <button type="button" '+'                       ng-click="nextResultPage()" '+'                       ng-disabled="currentResultsStartIndex+10 >= selectedResult.nhits"'+'                       class="d4cwidget-map-search-box__data-search__pagination-button">'+'                   <i class="fa fa-chevron-right"></i>'+'               </button>'+'           </div>'+'       </div>'+'   </div>'+'</div>',require:'^d4cMap',scope:{},link:function(scope,element,attrs,mapCtrl){var searchMarkers=[];scope.suggestions=[];scope.selectedIndex=0;scope.expanded=false;scope.runQuery=function(userQuery){scope.removeSearchMarkers();var loc=MapHelper.getLocationStructure(mapCtrl.getCurrentPosition());AlgoliaPlaces(userQuery,loc.center.join(',')).then(function success(response){scope.selectedIndex=0;scope.suggestions=response.data.hits;},function error(response){});};scope.expandSearchBox=function(){scope.expanded=true;};scope.collapseSearchBox=function(){$('.d4cwidget-map-search-box__box').blur();scope.expanded=false;};scope.addSearchMarker=function(coords){SVGInliner.getPromise(PictoHelper.mapPictoToURL('d4c-circle'),'white').then(function(svg){var marker=new L.VectorMarker(coords,{clickable:false,color:'#F06644',icon:svg,zIndexOffset:9999,extraClasses:'d4c-widget__d4c-search-marker',});marker.addTo(mapCtrl.getMap());$timeout(function(){marker.setOpacity(1);});searchMarkers.push(marker);});};scope.removeSearchMarkers=function(){angular.forEach(searchMarkers,function(marker){marker.setOpacity(0);$timeout(function(){mapCtrl.getMap().removeLayer(marker)},300);});searchMarkers=[];};scope.$on('d4cMapInteractiveClick',scope.removeSearchMarkers);scope.resetSearch=function(){mapCtrl.resetMapDataFilter();};mapCtrl.registerResetCallback(function(){scope.suggestions=[];scope.userQuery='';scope.stopDataSearch();});scope.$on('$destroy',scope.resetSearch);scope.moveToSuggestion=function(suggestion,index){if(angular.isDefined(index)){scope.selectedIndex=index;}
var zoom;if(suggestion.is_city){zoom=14;}else if(suggestion.is_country){zoom=5;}else if(suggestion.is_highway){zoom=18;}else{zoom=21;}
scope.addSearchMarker(suggestion._geoloc);mapCtrl.moveMap(suggestion._geoloc,zoom);scope.collapseSearchBox();scope.resetSearch();};scope.moveToDataRecord=function(dataset,record){var geoShapeFields=dataset.getFieldsForType('geo_shape');var fieldName,isShape;if(geoShapeFields.length){fieldName=geoShapeFields[0].name;isShape=true;}else{fieldName=dataset.getFieldsForType('geo_point_2d')[0].name;isShape=false;}
if(isShape){mapCtrl.fitMapToShape(record.fields[fieldName]);}else{mapCtrl.moveMap(record.fields[fieldName],21);}
scope.collapseSearchBox();};scope.runDataSearch=function(userQuery){mapCtrl.applyMapDataFilter(userQuery);scope.startDataSearch(userQuery,mapCtrl.getActiveContexts());};},controller:['$scope','$q','$compile','D4CAPI',function($scope,$q,$compile,D4CAPI){var keyCodes={RETURNKEY:13,ESCAPE:27,UPARROW:38,DOWNARROW:40};$scope.handleKeyDown=function($event){switch($event.keyCode){case keyCodes.UPARROW:$scope.selectedIndex=Math.max(0,$scope.selectedIndex-1);$event.preventDefault();break;case keyCodes.DOWNARROW:$scope.selectedIndex=Math.min($scope.suggestions.length,$scope.selectedIndex+1);$event.preventDefault();break;case keyCodes.ESCAPE:$scope.resetSearch();$event.preventDefault();break;case keyCodes.RETURNKEY:if($scope.selectedIndex===0){$scope.runDataSearch($scope.userQuery);}else{$scope.moveToSuggestion($scope.suggestions[$scope.selectedIndex-1]);}
$event.preventDefault();break;}};$scope.dataSearchActive=false;$scope.dataSearchWorking=false;var searchesTimeouts;$scope.startDataSearch=function(userQuery,contexts){$scope.currentResults=[];$scope.dataSearchActive=true;$scope.dataSearchWorking=true;var sortedContexts=contexts.slice(0);$scope.dataSearchResults=sortedContexts.map(function(c){return{'context':c};}).sort(function(a,b){return a.context.dataset.metas.title>b.context.dataset.metas.title;});var searches=[];if(angular.isArray(searchesTimeouts)){searchesTimeouts.forEach(function(timeout){timeout.resolve();});}
searchesTimeouts=[];$scope.dataSearchResults.forEach(function(resultObject){var ctx=resultObject.context;var timeout=$q.defer();var params=angular.extend({},ctx.parameters,{rows:0});var promise=D4CAPI.records.search(ctx,params,timeout.promise).then(function(result){var data=result.data;var datasetId=data.parameters.dataset;resultObject.nhits=data.nhits;});searches.push(promise);});$q.all(searches).then(function(results){$scope.dataSearchWorking=false;$scope.dataSearchResults=$scope.dataSearchResults.filter(function(r){return r.nhits>0;});$scope.datasetSearchDatasetsCount=Object.keys($scope.dataSearchResults).length;if($scope.dataSearchResults.length){$scope.selectResult($scope.dataSearchResults[0]);}});};var selectionQueryTimeout=null;$scope.currentResultsStartIndex=0;$scope.selectResult=function(result){$scope.selectedResult=result;$scope.currentResultsStartIndex=0;getResultRecords(result);};var getResultRecords=function(result){if(selectionQueryTimeout){selectionQueryTimeout.resolve();}
selectionQueryTimeout=$q.defer();var params=angular.extend({},result.context.parameters,{rows:10,start:$scope.currentResultsStartIndex});D4CAPI.records.search(result.context,params,selectionQueryTimeout.promise).then(function(response){selectionQueryTimeout=null;$scope.currentResults=response.data.records;});};$scope.previousResultPage=function(){$scope.currentResultsStartIndex-=10;getResultRecords($scope.selectedResult);};$scope.nextResultPage=function(){$scope.currentResultsStartIndex+=10;getResultRecords($scope.selectedResult);};$scope.stopDataSearch=function(){if(angular.isArray(searchesTimeouts)){searchesTimeouts.forEach(function(timeout){timeout.resolve();});}
searchesTimeouts=[];$scope.dataSearchActive=false;$scope.dataSearchWorking=false;};$scope.getSuggestionIcon=function(suggestion){if(suggestion._tags.indexOf('railway')>=0){return'fa fa-train';}else if(suggestion._tags.indexOf('aeroway')>=0){return'fa fa-plane';}else{return'fa fa-map-marker';}};$scope.getLocalization=function(suggestion){var localization='';['city','administrative','country'].forEach(function(prop){if(angular.isDefined(suggestion[prop])){if(localization.length>0){localization+=', ';}
localization+=suggestion[prop];}});return localization;};$scope.getResultTitle=function(dataset,record){var value;var configuredTitle=dataset.getExtraMeta('explore','map_tooltip_title');if(configuredTitle&&angular.isDefined(record.fields[configuredTitle])){return record.fields[configuredTitle];}else{var textFields=dataset.getFieldsForType('text');if(textFields.length>0&&angular.isDefined(record.fields[textFields[0].name])){return record.fields[textFields[0].name];}else{var i;for(i=0;i<dataset.fields.length;i++){if(angular.isDefined(record.fields[dataset.fields[i]])){return record.fields[dataset.fields[i]];}}
return null;}}};var resultPreviewTemplate=''+'<ul class="d4cwidget-map-search-box__data-search__result-preview">'+'   <li ng-repeat="item in items" class="d4cwidget-map-search-box__data-search__result-preview-line">'+'       <div class="d4cwidget-map-search-box__data-search__result-preview-label">{{item.label}}</div>'+'       <div class="d4cwidget-map-search-box__data-search__result-preview-value">{{item.value}}</div>'+'   </li>'+'</ul>'+'';$scope.getResultPreviewTemplate=function(dataset,record){var values=[];dataset.fields.forEach(function(f){if(values.length<3&&['text','int','double','date','datetime'].indexOf(f.type)>=0&&angular.isDefined(record.fields[f.name])){values.push({'label':f.label,'value':record.fields[f.name]});}});var localScope=$scope.$new(true);localScope.items=values;var compiledPreview=$compile(resultPreviewTemplate)(localScope);localScope.$apply();return compiledPreview.html();};}]};}]);mod.service('AlgoliaPlaces',['$http','D4CWidgetsConfig',function($http,D4CWidgetsConfig){var options={};if(D4CWidgetsConfig.algoliaPlacesApplicationId){options.headers={'X-Algolia-Application-Id':D4CWidgetsConfig.algoliaPlacesApplicationId,'X-Algolia-API-Key':D4CWidgetsConfig.algoliaPlacesAPIKey};}
return function(query,aroundLatLng){var queryOptions=angular.extend({},options);queryOptions.params={'query':query,'aroundLatLngViaIP':false,'language':D4CWidgetsConfig.language||'en','hitsPerPage':5};if(aroundLatLng){queryOptions.params.aroundLatLng=aroundLatLng;}
return $http.get('https://places-dsn.algolia.net/1/places/query',queryOptions);};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.directive('d4cDisqus',['D4CWidgetsConfig','$location','$window',function(D4CWidgetsConfig,$location,$window){return{restrict:'E',replace:true,scope:{'shortname':'@','identifier':'@'},template:'<div id="disqus_thread" class="d4cwidget"></div>',link:function(scope){$window.disqus_shortname=scope.shortname||D4CWidgetsConfig.disqusShortname;if(scope.identifier){$window.disqus_identifier=scope.identifier;}
$window.disqus_url=$location.absUrl();$window.disqus_config=function(){this.language=D4CWidgetsConfig.language;};var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+$window.disqus_shortname+'.disqus.com/embed.js';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var schemaCache={};var loadingSchemas={};mod.factory('ContextHelper',['D4CAPI','$q','QueryParameters',function(D4CAPI,$q,QueryParameters){return{getDatasetContext:function(contextName,domainId,datasetId,contextParameters,source,apikey,schema){var deferred=$q.defer();var context={'wait':function(){return deferred.promise;},'getDownloadURL':function(format,parameters){if(!this.dataset||!this.dataset.datasetid){return;}
format=format||'csv';var url=this.domainUrl+'/explore/dataset/'+this.dataset.datasetid+'/download/?format='+format;url+=this.getQueryStringURL(parameters);return url;},'getQueryStringURL':function(parameters){parameters=parameters||{};return'&'+D4C.URLUtils.getAPIQueryString(angular.extend({},this.parameters,parameters));},'toggleRefine':function(facetName,path,replace){D4C.Context.toggleRefine(this,facetName,path,replace);},getFacetValues:function(fieldName){var deferred=$q.defer();var apiParams=angular.extend({},this.parameters,{'rows':0,'facet':fieldName});D4CAPI.records.search(this,apiParams).success(function(data){var values=data.facet_groups[0].facets.map(function(category){return category.name;});deferred.resolve(values);});return deferred.promise;},'getActiveFilters':function(excludes){excludes=excludes||[];if(this.parameters){var filters=Object.keys(this.parameters);var that=this;return filters.filter(function(filter){var allowedQueryParameters=QueryParameters;var queryPattern=/q\.[^\s]*/;return(filter=='q'&&that.parameters.q&&that.parameters.q.length>0)||(allowedQueryParameters.indexOf(filter)>-1)||filter=='geofilter.polygon'||filter=='geofilter.distance'||filter.indexOf('refine.')===0||filter.match(queryPattern);}).filter(function(filter){return excludes.indexOf(filter)===-1;});}else{return[];}},'name':contextName,'type':'dataset','domain':domainId,'domainUrl':D4CAPI.getDomainURL(domainId),'apikey':apikey,'dataset':null,'parameters':contextParameters,'source':(contextParameters&&contextParameters.source)||source||null,'error':false};if(schema){context.dataset=new D4C.Dataset(schema);deferred.resolve(context.dataset);}else{var sourceParameter=(contextParameters&&contextParameters.source)||source||"";var cacheKey=(context.domain||"")+'.'+sourceParameter+'.'+datasetId+'.'+(apikey||"");if(angular.isDefined(schemaCache[cacheKey])){context.dataset=new D4C.Dataset(schemaCache[cacheKey]);deferred.resolve(context.dataset);}else if(angular.isDefined(loadingSchemas[cacheKey])){loadingSchemas[cacheKey].then(function(response){context.dataset=new D4C.Dataset(response.data);deferred.resolve(context.dataset);});}else{loadingSchemas[cacheKey]=D4CAPI.datasets.get(context,datasetId,{extrametas:true,interopmetas:true,source:sourceParameter});loadingSchemas[cacheKey].success(function(data){schemaCache[cacheKey]=data;context.dataset=new D4C.Dataset(data);deferred.resolve(context.dataset);}).error(function(data){context.error=true;deferred.reject("Failed to fetch "+contextName+" context.");});}}
return context;}};}]);}());;(function(){"use strict";var mod=angular.module('d4c-widgets');mod.provider('D4CCurrentDomain',[function(){var currentDomain={};currentDomain.domainId="";this.setDomain=function(domainId){currentDomain.domainId=domainId;};this.$get=function(){return currentDomain;};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');var loading={};var loaded=[];mod.provider('ModuleLazyLoader',function(){var lazyloading={'highcharts':{'css':[],'js':[["https://code.highcharts.com/5.0.2/highcharts.js"],["https://code.highcharts.com/5.0.2/modules/no-data-to-display.js"],["https://code.highcharts.com/5.0.2/highcharts-more.js"],["https://code.highcharts.com/5.0.2/modules/treemap.js"],["https://code.highcharts.com/5.0.2/modules/funnel.js"]]},'leaflet':{'css':["https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css","libs/d4c-map-fullscreen/d4c-map-fullscreen.css","lib/leaflet-locatecontrol/L.Control.Locate.css","libs/leaflet-control-geocoder/Control.Geocoder.css","libs/d4c-vectormarker/vectormarker.css","libs/d4c-clustermarker/clustermarker.css","libs/leaflet-draw/leaflet.draw.css","libs/leaflet-markercluster/MarkerCluster.css","libs/leaflet-markercluster/MarkerCluster.Default.css","libs/leaflet-measure/leaflet-measure.css"],'js':[["L.Control.D4CMapFullscreen@libs/d4c-map-fullscreen/d4c-map-fullscreen.js","L.Control.Locate@lib/leaflet-locatecontrol/L.Control.Locate.min.js","L.D4CMap@libs/d4c-map/d4c-map.js","L.D4CTileLayer@libs/d4c-map/d4c-tilelayer.js","L.Control.Geocoder@libs/leaflet-control-geocoder/Control.Geocoder.js","L.VectorMarker@libs/d4c-vectormarker/vectormarker.js","L.ClusterMarker@libs/d4c-clustermarker/clustermarker.js","L.Draw@libs/leaflet-draw/leaflet.draw.js","L.HeatLayer@libs/leaflet-heat/leaflet-heat.js","L.MarkerClusterGroup@libs/leaflet-markercluster/leaflet.markercluster.js","L.Control.BrowserPrint@lib/leaflet-browser-print/leaflet.browser.print.min.js","L.Control.EasyPrint@lib/leaflet-easyprint/bundle.js","L.Control.Measure@lib/leaflet-measure/leaflet-measure.fr.js"]]},'rome':{'css':['libs/rome/rome.css'],'js':['libs/rome/rome.standalone.js']},'fullcalendar':{'css':['libs/fullcalendar/fullcalendar.min.css'],'js':['libs/fullcalendar/fullcalendar.min.js'],'language_specific':{'ar':{'js':['libs/fullcalendar/lang/ar.js']},'ca':{'js':['libs/fullcalendar/lang/ca.js']},'de':{'js':['libs/fullcalendar/lang/de.js']},'es':{'js':['libs/fullcalendar/lang/es.js']},'eu':{'js':['libs/fullcalendar/lang/eu.js']},'fr':{'js':['libs/fullcalendar/lang/fr.js']},'it':{'js':['libs/fullcalendar/lang/it.js']},'nl':{'js':['libs/fullcalendar/lang/nl.js']},'pt':{'js':['libs/fullcalendar/lang/pt.js']}}},'qtip':{'css':['libs/qtip/jquery.qtip.min.css'],'js':['libs/qtip/jquery.qtip.min.js']},'simple-statistics':{'css':[],'js':['ss@https://cdnjs.cloudflare.com/ajax/libs/simple-statistics/1.0.1/simple_statistics.js']}};this.getConfig=function(){return lazyloading;};var objectIsDefined=function(scope,name){var nameParts=name.split('.');if(scope.hasOwnProperty(nameParts[0])&&angular.isDefined(scope[nameParts[0]])){if(nameParts.length===1){return true;}else{var newScope=scope[nameParts[0]];nameParts.shift();return objectIsDefined(newScope,nameParts.join('.'));}}else{return false;}};var isAlreadyAvailable=function(objectName){return objectIsDefined(window,objectName);};this.$get=['$q','D4CWidgetsConfig',function($q,D4CWidgetsConfig){var lazyload=function(type,url){if(angular.isUndefined(loading[url])){var deferred=$q.defer();loading[url]=deferred;var realURL=url.substring(0,1)==='/'||url.substring(0,7)==='http://'||url.substring(0,8)==='https://'?url:D4CWidgetsConfig.basePath+url;LazyLoad[type](realURL,function(){deferred.resolve();loaded.push(url);});loading[url]=deferred;}
return loading[url];};var loadSequence=function(type,module,deferred,i){var promises=[],step;if(angular.isUndefined(i)){i=0;}
if(i>=module.length){deferred.resolve();}else{step=module[i];if(!angular.isArray(step)){step=[step];}
for(var k=0;k<step.length;k++){var parts=step[k].split('@');var url;if(parts.length>1){if(isAlreadyAvailable(parts[0])){continue;}
url=parts[1];}else{url=parts[0];}
if(loaded.indexOf(url)===-1){promises.push(lazyload(type,url).promise);}else{promises.push(loading[url].promise);}}
$q.all(promises).then(function(){loadSequence(type,module,deferred,i+1);});}
return deferred.promise;};return function(){var promises=[];for(var i=0;i<arguments.length;i++){var module=lazyloading[arguments[i]];if(module.language_specific&&module.language_specific[D4CWidgetsConfig.language]){angular.forEach(module.language_specific[D4CWidgetsConfig.language],function(sources,type){if(module[type]){module[type]=module[type].concat(sources);}else{module[type]=sources;}});}
if(module.css){promises.push(loadSequence('css',module.css,$q.defer()));}
if(module.js){promises.push(loadSequence('js',module.js,$q.defer()));}}
return $q.all(promises);};}];});mod.factory("DebugLogger",['$window',function($window){return{log:function(){if($window.location.hash=='#debug'||$window.location.hash.indexOf('debug=')>=0||$(document.body).hasClass('showDebug')){console.log.apply(console,arguments);}}};}]);mod.factory("d4cNotificationService",function(){var callbacks={'high':[],'normal':[]};return{registerForNotifications:function(callback,priority){if(priority==='high'){callbacks['high'].push(callback);}else{callbacks['normal'].push(callback);}},unregisterForNotifications:function(callback){var index;index=callbacks['high'].indexOf(callback);if(index>-1){callbacks['high'].splice(index,1);}
index=callbacks['normal'].indexOf(callback);if(index>-1){callbacks['normal'].splice(index,1);}},sendNotification:function(notification){if(angular.isString(notification)){notification={title:'Error',type:'error',message:notification};}
angular.forEach(['high','normal'],function(priority){angular.forEach(callbacks[priority],function(callback){callback(notification);});});},markNotificationAsHandled:function(notification){if(notification){notification.handled=true;}}};});mod.provider('SVGInliner',function(){var inlineImages={};var FALLBACK='<?xml version="1.0" encoding="UTF-8" standalone="no"?>'+'<svg id="dot-icon" width="19px" height="19px" viewBox="0 0 19 19" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">'+'    <path d="M13,9.50004202 C13,11.4330618 11.4329777,13.000084 9.49995798,13.000084 C7.56693813,13.000084 5.99991595,11.4330618 5.99991595,9.50004202 C5.99991595,7.56702218 7.56693813,6 9.49995798,6 C11.4329777,6 13,7.56702218 13,9.50004202 L13,9.50004202 Z" id="path8568" fill="#000000"></path>'+'    <rect style="opacity: 0" x="0" y="0" width="19" height="19"></rect>'+'</svg>';var loadImageInline=function(element,code,color){var svg=angular.element(code);if(color){svg.css('fill',color);svg.find('path, polygon, circle, rect, text, ellipse').css('fill',color);}
element.append(svg);};this.$get=['$http','$q',function($http,$q){var retrieve=function(url,color,getPromise){var deferred;if(getPromise){deferred=$q.defer();}
var element=angular.element('<div class="d4c-svginliner__svg-container"></div>');if(!url){loadImageInline(element,FALLBACK,color);if(getPromise){deferred.resolve(element);}}else if(url.indexOf('.svg')===-1){element.append(angular.element('<img src="'+url+'"/>'));if(getPromise){deferred.resolve(element);}}else{if(inlineImages[url]){if(inlineImages[url].code){loadImageInline(element,inlineImages[url].code,color);if(getPromise){deferred.resolve(element);}}else{inlineImages[url].promise.success(function(data){loadImageInline(element,data,color);if(getPromise){deferred.resolve(element);}}).error(function(){loadImageInline(element,FALLBACK,color);if(getPromise){deferred.resolve(element);}});}}else{var promise=$http.get(url);inlineImages[url]={promise:promise};promise.success(function(data){inlineImages[url].code=data;loadImageInline(element,data,color);if(getPromise){deferred.resolve(element);}}).error(function(data,status){console.log('WARNING: Unable to fetch SVG image',url,'HTTP status:',status);inlineImages[url].code=FALLBACK;loadImageInline(element,FALLBACK,color);if(getPromise){deferred.resolve(element);}});}}
if(getPromise){return deferred.promise;}else{return element;}};return{getElement:function(url,color){return retrieve(url,color);},getPromise:function(url,color){return retrieve(url,color,true);}};}];});mod.service('PictoHelper',function(){var FONTAWESOME_3_TO_4={'ban-circle':'ban','bar-chart':'bar-chart-o','beaker':'flask','bell':'bell-o','bell-alt':'bell','bitbucket-sign':'bitbucket-square','bookmark-empty':'bookmark-o','building':'building-o (4.0.2)','calendar-empty':'calendar-o','check-empty':'square-o','check-minus':'minus-square-o','check-sign':'check-square','check':'check-square-o','chevron-sign-down':'chevron-down','chevron-sign-left':'chevron-left','chevron-sign-right':'chevron-right','chevron-sign-up':'chevron-up','circle-arrow-down':'arrow-circle-down','circle-arrow-left':'arrow-circle-left','circle-arrow-right':'arrow-circle-right','circle-arrow-up':'arrow-circle-up','circle-blank':'circle-o','cny':'rub','collapse-alt':'minus-square-o','collapse-top':'caret-square-o-up','collapse':'caret-square-o-down','comment-alt':'comment-o','comments-alt':'comments-o','copy':'files-o','cut':'scissors','dashboard':'tachometer','double-angle-down':'angle-double-down','double-angle-left':'angle-double-left','double-angle-right':'angle-double-right','double-angle-up':'angle-double-up','download':'arrow-circle-o-down','download-alt':'download','edit-sign':'pencil-square','edit':'pencil-square-o','ellipsis-horizontal':'ellipsis-h (4.0.2)','ellipsis-vertical':'ellipsis-v (4.0.2)','envelope-alt':'envelope-o','euro':'eur','exclamation-sign':'exclamation-circle','expand-alt':'plus-square-o (4.0.2)','expand':'caret-square-o-right','external-link-sign':'external-link-square','eye-close':'eye-slash','eye-open':'eye','facebook-sign':'facebook-square','facetime-video':'video-camera','file-alt':'file-o','file-text-alt':'file-text-o','flag-alt':'flag-o','folder-close-alt':'folder-o','folder-close':'folder','folder-open-alt':'folder-open-o','food':'cutlery','frown':'frown-o','fullscreen':'arrows-alt (4.0.2)','github-sign':'github-square','google-plus-sign':'google-plus-square','group':'users (4.0.2)','h-sign':'h-square','hand-down':'hand-o-down','hand-left':'hand-o-left','hand-right':'hand-o-right','hand-up':'hand-o-up','hdd':'hdd-o (4.0.1)','heart-empty':'heart-o','hospital':'hospital-o (4.0.2)','indent-left':'outdent','indent-right':'indent','info-sign':'info-circle','keyboard':'keyboard-o','legal':'gavel','lemon':'lemon-o','lightbulb':'lightbulb-o','linkedin-sign':'linkedin-square','meh':'meh-o','microphone-off':'microphone-slash','minus-sign-alt':'minus-square','minus-sign':'minus-circle','mobile-phone':'mobile','moon':'moon-o','move':'arrows (4.0.2)','off':'power-off','ok-circle':'check-circle-o','ok-sign':'check-circle','ok':'check','paper-clip':'paperclip','paste':'clipboard','phone-sign':'phone-square','picture':'picture-o','pinterest-sign':'pinterest-square','play-circle':'play-circle-o','play-sign':'play-circle','plus-sign-alt':'plus-square','plus-sign':'plus-circle','pushpin':'thumb-tack','question-sign':'question-circle','remove-circle':'times-circle-o','remove-sign':'times-circle','remove':'times','reorder':'bars (4.0.2)','resize-full':'expand (4.0.2)','resize-horizontal':'arrows-h (4.0.2)','resize-small':'compress (4.0.2)','resize-vertical':'arrows-v (4.0.2)','rss-sign':'rss-square','save':'floppy-o','screenshot':'crosshairs','share-alt':'share','share-sign':'share-square','share':'share-square-o','sign-blank':'square','signin':'sign-in','signout':'sign-out','smile':'smile-o','sort-by-alphabet-alt':'sort-alpha-desc','sort-by-alphabet':'sort-alpha-asc','sort-by-attributes-alt':'sort-amount-desc','sort-by-attributes':'sort-amount-asc','sort-by-order-alt':'sort-numeric-desc','sort-by-order':'sort-numeric-asc','sort-down':'sort-desc','sort-up':'sort-asc','stackexchange':'stack-overflow','star-empty':'star-o','star-half-empty':'star-half-o','sun':'sun-o','thumbs-down-alt':'thumbs-o-down','thumbs-up-alt':'thumbs-o-up','time':'clock-o','trash':'trash-o','tumblr-sign':'tumblr-square','twitter-sign':'twitter-square','unlink':'chain-broken','upload':'arrow-circle-o-up','upload-alt':'upload','warning-sign':'exclamation-triangle','xing-sign':'xing-square','youtube-sign':'youtube-square','zoom-in':'search-plus','zoom-out':'search-minus'};return{mapPictoToURL:function(picto,context){if(!picto){return null;}
var url=context&&context.domainUrl||'';if(picto.startsWith('icon-')){var pictoName=picto.replace('icon-','');if(FONTAWESOME_3_TO_4[pictoName]){pictoName=FONTAWESOME_3_TO_4[pictoName];}
url+='/static/pictos/img/set-v1/fa/'+pictoName+'.svg';}else if(picto.startsWith('pdpicto-')||picto.startsWith('d4cpicto-')){picto=picto.replace('pdpicto-','pdpicto/').replace('d4cpicto-','d4cpicto/');url+='/static/pictos/img/set-v1/'+picto+'.svg';}else if(picto.startsWith('d4c-')){picto=picto.replace('d4c-','');url+='/static/pictos/img/set-v3/pictos/'+picto+'.svg';}else{url+='/static/pictos/img/set-v2/'+picto+'.svg';}
return url;}};});mod.factory('URLSynchronizer',['$location','$document',function($location,$document){var suspended=false;var syncers=[];$document.bind('webkitfullscreenchange mozfullscreenchange ofullscreenchange msfullscreenchange khtmlfullscreenchange',function(){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement;if(fullscreenElement){suspended=true;}else{suspended=false;for(var i=0;i<syncers.length;i++){syncers[i]();}}});var ignoreList=[];return{addSynchronizedValue:function(scope,objName,urlName,skipHistory){ignoreList.push(objName);if(urlName){ignoreList.push(urlName);}
var urlValue=$location.search()[urlName||objName];scope.$eval(objName+'=newObj',{newObj:urlValue});var sync=function(){var val=scope.$eval(objName);if(skipHistory){$location.replace();}
$location.search(urlName||objName,val);};var unwatchObject=scope.$watch(objName,function(nv,ov){if(!suspended){sync();}},true);syncers.push(sync);var unwatchLocation=scope.$watch(function(){return $location.search()[urlName||objName];},function(nv,ov){if(nv){scope.$eval(objName+'=newObj',{newObj:nv});}},true);return function unwatch(){unwatchObject();unwatchLocation();};},addJSONSynchronizedObject:function(scope,objName,urlName){ignoreList.push(urlName||objName);var urlValue=$location.search()[urlName||objName];if(urlValue){if(urlValue[0]==='{'){scope.$eval(objName+'=newObj',{newObj:JSON.parse(urlValue)});}else{scope.$eval(objName+'=newObj',{newObj:JSON.parse(b64_to_utf8(urlValue))});}}
var last_serialization;var sync=function(){var val=scope.$eval(objName);if(typeof val==="undefined"){val="";}
last_serialization=utf8_to_b64(angular.toJson(val));$location.search(urlName||objName,last_serialization);};syncers.push(sync);var unwatch=scope.$watch(function(){return[scope.$eval(objName),$location.search()[urlName||objName]];},function(nv,ov){if(typeof nv[0]==="undefined"){nv[0]="";}
if(last_serialization!==utf8_to_b64(angular.toJson(nv[0]))&&!suspended){sync();}else if(last_serialization!==nv[1]&&nv[1]){scope.$eval(function(scope){scope[objName]=JSON.parse(b64_to_utf8(nv[1]));});}},true);return unwatch;},addSynchronizedObject:function(scope,objName,localObjectIgnoreList){localObjectIgnoreList=localObjectIgnoreList||[];var syncFromURL=function(){var nv=angular.copy($location.search());angular.forEach(nv,function(value,key){if(ignoreList.indexOf(key)>=0){delete nv[key];}});if(localObjectIgnoreList.length>0){var oldVal=scope.$eval(objName);angular.forEach(localObjectIgnoreList,function(name){if(angular.isDefined(oldVal[name])){nv[name]=oldVal[name];}});}
scope.$eval(objName+'=newVal',{newVal:nv});};var syncToURL=function(){var val=angular.copy(scope.$eval(objName));angular.forEach(localObjectIgnoreList,function(name){if(angular.isDefined(val[name])){delete val[name];}});angular.forEach($location.search(),function(value,key){if(ignoreList.indexOf(key)>=0||localObjectIgnoreList.indexOf(key)>=0){val[key]=value;}});$location.search(val);};syncFromURL();var unwatchObject=scope.$watch(objName,function(nv,ov){if(!suspended){syncToURL();}},true);syncers.push(syncToURL);var unwatchLocation=scope.$watch(function(){return $location.search();},syncFromURL,true);return function unwatch(){unwatchObject();unwatchLocation();};}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('MapRenderingShapePreview',['D4CAPI','MapLayerHelper','$q',function(D4CAPI,MapLayerHelper,$q){return{render:function(layerConfig,map,layerGroup,timeout){var deferred=$q.defer();var parameters=angular.extend({},layerConfig.context.parameters,{'rows':1000,'clusterprecision':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds())});D4CAPI.records.geopreview(layerConfig.context,parameters,timeout.promise).success(function(data){var shape;if(data.length>=parameters.rows){layerConfig._incomplete=true;}else{layerConfig._incomplete=false;}
for(var i=0;i<data.length;i++){shape=data[i];if(shape.geometry.type==='Point'){MapLayerHelper.drawPoint(layerConfig,map,[shape.geometry.coordinates[1],shape.geometry.coordinates[0]],null,layerGroup,shape.geo_digest);}else{MapLayerHelper.drawShape(layerConfig,map,shape.geometry,null,layerGroup,shape.geo_digest);}}
deferred.resolve(layerGroup);});return deferred.promise;}};}]);}());;(function(){"use strict";var mod=angular.module('d4c-widgets');mod.service('I18n',['translate',function(translate_time){return{weekdays:{shorthand:[translate_time('Sun'),translate_time('Mon'),translate_time('Tue'),translate_time('Wed'),translate_time('Thu'),translate_time('Fri'),translate_time('Sat')],longhand:[translate_time('Sunday'),translate_time('Monday'),translate_time('Tuesday'),translate_time('Wednesday'),translate_time('Thursday'),translate_time('Friday'),translate_time('Saturday')]},months:{shorthand:[translate_time('Jan'),translate_time('Feb'),translate_time('Mar'),translate_time('Apr'),translate_time('May'),translate_time('Jun'),translate_time('Jul'),translate_time('Aug'),translate_time('Sep'),translate_time('Oct'),translate_time('Nov'),translate_time('Dec')],longhand:[translate_time('January'),translate_time('February'),translate_time('March'),translate_time('April'),translate_time('May'),translate_time('June'),translate_time('July'),translate_time('August'),translate_time('September'),translate_time('October'),translate_time('November'),translate_time('December')]},fr:{timeFormat:'HH:mm',timeSeparators:[':'],dateFormat:'DD/MM/YYYY',dateSeparators:['/'],firstDayOfWeek:1},en:{timeFormat:'hh:mm A',timeSeparators:[':',' '],dateFormat:'MM/DD/YYYY',dateSeparators:['/'],firstDayOfWeek:0}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.factory('MapLayerRenderer',['D4CAPI','AggregationHelper','SVGInliner','PictoHelper','MapLayerHelper','MapRenderingAggregation','MapRenderingClustered','MapRenderingHeatmap','MapRenderingRaw','MapRenderingShapePreview','MapRenderingChoroplethAggregation','$q','$filter','$rootScope','$compile','$timeout',function(D4CAPI,AggregationHelper,SVGInliner,PictoHelper,MapLayerHelper,MapRenderingAggregation,MapRenderingClustered,MapRenderingHeatmap,MapRenderingRaw,MapRenderingShapePreview,MapRenderingChoroplethAggregation,$q,$filter,$rootScope,$compile,$timeout){return{updateDataLayer:function(layerConfig,map,deferred){var service=this;var leafletLayerGroup=new L.LayerGroup();if(layerConfig._currentRequestTimeout){layerConfig._currentRequestTimeout.resolve();}
var timeout=$q.defer();layerConfig._currentRequestTimeout=timeout;var applyLayer=function(newLayer){layerConfig._rendered=newLayer;layerConfig._currentRequestTimeout=null;layerConfig._loading=false;deferred.resolve();};if(layerConfig.context.error){console.log('ERROR: Unknown dataset "'+layerConfig.title+'"');}else if(layerConfig.display==='tiles'){if(!layerConfig._rendered){layerConfig._rendered=new L.BundleTileLayer('',{tileSize:512,minZoom:map.getMinZoom(),maxZoom:map.getMaxZoom(),gridLayer:{options:{resolution:4}}});map.addLayer(layerConfig._rendered);$timeout(function(){layerConfig._rendered.on('loading',function(){layerConfig._loading=true;$rootScope.$apply();});layerConfig._rendered.on('load',function(){layerConfig._loading=false;$rootScope.$apply();});},0);MapLayerHelper.bindTooltip(map,layerConfig._rendered,layerConfig);}
var tilesOptions={color:layerConfig.color,icon:layerConfig.picto,showmarker:layerConfig.marker};angular.extend(tilesOptions,layerConfig.context.parameters);var url = fetchPrefix() + '/d4c/api/datasets/1.0/'+layerConfig.context.dataset.datasetid+'/tiles/simple/{z}/{x}/{y}.bundle';var params='';angular.forEach(tilesOptions,function(value,key){if(value!==null){params+=params?'&':'?';params+=key+'='+encodeURIComponent(value);}});url+=params;if(layerConfig._rendered._url!==url){layerConfig._rendered.setUrl(url);}
deferred.resolve();}else if(layerConfig.display==='none'||map.getZoom()===map.getMaxZoom()&&layerConfig.display==='polygon'){layerConfig._loading=true;MapRenderingRaw.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}else if(['polygon','polygonforced','clusters'].indexOf(layerConfig.display)>=0){layerConfig._loading=true;MapRenderingClustered.render(layerConfig,map,leafletLayerGroup,timeout,true).then(applyLayer);}else if(layerConfig.display==='heatmap'){layerConfig._loading=true;MapRenderingHeatmap.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}else if(layerConfig.display==='shape'||layerConfig.display==='aggregation'){layerConfig._loading=true;MapRenderingAggregation.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}else if(layerConfig.display==='categories'){layerConfig._loading=true;MapRenderingRaw.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}else if(layerConfig.display==='choropleth'){layerConfig._loading=true;if(layerConfig.func){MapRenderingChoroplethAggregation.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}else{MapRenderingRaw.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}}else if(layerConfig.display==='auto'){layerConfig._loading=true;var parameters=angular.extend({},layerConfig.context.parameters,{'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds())});D4CAPI.records.boundingbox(layerConfig.context,parameters).success(function(data){var DOWNLOAD_CAP=200;var SHAPEPREVIEW_HIGHCAP=500000;var POLYGONCLUSTERS_HIGHCAP=500000;var returnPolygons=(data.count<POLYGONCLUSTERS_HIGHCAP);if(data.geometries&&data.geometries.Point&&data.geometries.Point>data.count/2&&(data.count<DOWNLOAD_CAP||map.getZoom()===map.getMaxZoom())){MapRenderingRaw.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}else if(data.count<SHAPEPREVIEW_HIGHCAP){if(data.geometries&&data.geometries.Point&&data.geometries.Point>data.count/2){MapRenderingClustered.render(layerConfig,map,leafletLayerGroup,timeout,returnPolygons).then(applyLayer);}else{MapRenderingShapePreview.render(layerConfig,map,leafletLayerGroup,timeout).then(applyLayer);}}else{MapRenderingClustered.render(layerConfig,map,leafletLayerGroup,timeout,returnPolygons).then(applyLayer);}});}else{console.log('ERROR: Unknown display mode "'+layerConfig.display+'"');}
return leafletLayerGroup;}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('d4cHttpErrorMessages',function(translate){this.getForStatus=function(httpStatus){switch(httpStatus){case 400:return translate('Bad request: please retry the request later or contact the administrator.');case 401:return translate('Request unauthorized: authentication is required.');case 403:return translate('Request forbidden: you may not have the necessary permissions for the requested '+'resource.');case 404:return translate('Resource not found: if you have followed a valid link, '+'please contact the administrator.');case 408:return translate('Request timeout: please retry the request later or contact the administrator.');case 429:return translate('Too many requests or API calls quota has been exceeded: '+'please retry the request later or contact the administrator.');case 503:case 504:return translate('The service is unavailable: please retry the request later or contact the '+'administrator.');default:return translate('The server encountered an internal error. Please retry the request or contact the '+'administrator.');}};});})();;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.factory("colorScale",['D4CWidgetsConfig',function(D4CWidgetsConfig){var orderedBrewer=[{label:'Accent',colors:chroma.brewer.Accent},{label:'Dark2',colors:chroma.brewer.Dark2},{label:'Pastel2',colors:chroma.brewer.Pastel2},{label:'Pastel1',colors:chroma.brewer.Pastel1},{label:'Set2',colors:chroma.brewer.Set2},{label:'Set1',colors:chroma.brewer.Set1},{label:'Paired',colors:chroma.brewer.Paired},{label:'Set3',colors:chroma.brewer.Set3},{label:'OrRd',colors:chroma.brewer.OrRd.slice(1)},{label:'PuBu',colors:chroma.brewer.PuBu.slice(1)},{label:'BuPu',colors:chroma.brewer.BuPu.slice(1)},{label:'Oranges',colors:chroma.brewer.Oranges.slice(1)},{label:'YlOrBr',colors:chroma.brewer.YlOrBr.slice(1)},{label:'YlGn',colors:chroma.brewer.YlGn.slice(1)},{label:'Reds',colors:chroma.brewer.Reds.slice(1)},{label:'RdPu',colors:chroma.brewer.RdPu.slice(1)},{label:'Greens',colors:chroma.brewer.Greens.slice(1)},{label:'YlGnBu',colors:chroma.brewer.YlGnBu.slice(1)},{label:'Purples',colors:chroma.brewer.Purples.slice(1)},{label:'GnBu',colors:chroma.brewer.GnBu.slice(1)},{label:'Greys',colors:chroma.brewer.Greys.slice(1)},{label:'YlOrRd',colors:chroma.brewer.YlOrRd.slice(1)},{label:'PuRd',colors:chroma.brewer.PuRd.slice(1)},{label:'Blues',colors:chroma.brewer.Blues.slice(1)},{label:'PuBuGn',colors:chroma.brewer.PuBuGn.slice(1)},{label:'Spectral',colors:chroma.brewer.Spectral},{label:'RdYlGn',colors:chroma.brewer.RdYlGn},{label:'RdBu',colors:chroma.brewer.RdBu},{label:'PiYG',colors:chroma.brewer.PiYG},{label:'PRGn',colors:chroma.brewer.PRGn},{label:'RdYlBu',colors:chroma.brewer.RdYlBu},{label:'BrBG',colors:chroma.brewer.BrBG},{label:'RdGy',colors:chroma.brewer.RdGy},{label:'PuOr',colors:chroma.brewer.PuOr}],defaultColorSet='Set2',domainDefaultColorSet='',colorIdx=0;if(D4CWidgetsConfig.chartColors&&D4CWidgetsConfig.chartColors.length>0){domainDefaultColorSet='custom';var localDomainColorSet=angular.copy(D4CWidgetsConfig.chartColors);if(!angular.isArray(localDomainColorSet)){localDomainColorSet=[localDomainColorSet];}
if(localDomainColorSet.length==1){localDomainColorSet.push(localDomainColorSet[0]);}
orderedBrewer.unshift({label:'custom',colors:localDomainColorSet});chroma.brewer['custom']=localDomainColorSet;}
function getBrewName(colorString){var brewName;if(!colorString){brewName=domainDefaultColorSet||defaultColorSet;}else{if(colorString.startsWith('custom-')){colorString=colorString.replace('custom-','');}
if(colorString.startsWith('range-')){colorString=colorString.replace('range-','');}else if(colorString.startsWith('single-')){colorString=colorString.replace('single-','');}
if(chroma.brewer[colorString]){brewName=colorString;}}
return brewName;}
function getScaleFromString(colorString){var colors=getColorArray(colorString);return chroma.scale().range(colors);}
function getColorArray(string){var brewName;if(string[0]==='['){return JSON.parse(string);}else{brewName=getBrewName(string);if(brewName){return chroma.brewer[brewName];}else{string=string.replace('custom-','');string=string.replace('single-','');return[string,string];}}}
return{getScale:function(colorString,min,max){var brewName,colorScale;min=typeof min!=="undefined"?min:0;max=typeof max!=="undefined"?max:1;return getScaleFromString(colorString).domain([min,max]);},getUniqueColor:function(colorString){return getScaleFromString(colorString)(1).hex();},getColorAtIndex:function(colorString,index){var colors=getColorArray(colorString);return colors[index%colors.length];},getColors:function(colorString){return getColorArray(colorString);},getColorSets:function(){return chroma.brewer;},getOrderedColorSets:function(){return orderedBrewer;},getDefaultColorSet:function(){return domainDefaultColorSet||defaultColorSet;},getDefaultColor:function(currentColor,allowedColors,index){var defaultColors=this.getColorList(allowedColors),color;if(typeof currentColor!=="undefined"&&currentColor!==""){return currentColor;}else if(typeof backupColor!=="undefined"&&backupColor!==""){return backupColor;}else{if(defaultColors[colorIdx].label.startsWith('custom-')){colorIdx=(colorIdx+1)%defaultColors.length;}
if(typeof index!=="undefined"){color=defaultColors[index%defaultColors.length].label;}else{color=defaultColors[colorIdx].label;colorIdx=(colorIdx+1)%defaultColors.length;}
return color;}},getColorList:function(allowedcolors,currentcolor){var colorlist=[];if(allowedcolors.indexOf('single')!==-1){var colors=this.getColors(this.getDefaultColorSet());angular.forEach(colors,function(color){colorlist.push({'label':color,'color':color});});}
if(allowedcolors.indexOf('range')!==-1){angular.forEach(this.getOrderedColorSets(),function(colorrange){colorlist.push({'label':'range-'+colorrange['label'],'color':colorrange['colors']});});}
return colorlist;},isColorAllowed:function(checkedColor,colorlist,allowedcolors){var found=false;if(!checkedColor){return false;}
if(allowedcolors.indexOf('range')===-1){if(checkedColor.startsWith('range-')||checkedColor.startsWith('custom-range-')){return false;}else{return true;}}
if(allowedcolors.indexOf('range')!==-1){if(checkedColor.startsWith('custom-single-')){return false;}else{angular.forEach(colorlist,function(color){if(color.label===checkedColor){found=true;}});return found;}}}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.factory('d4cTimerangeParser',function(){var parameterRE=/([\w-]+):\[(.*) TO (.*)\]/;return function(parameterValue){var matches=parameterRE.exec(decodeURIComponent(parameterValue));if(!matches){return{};}
return{field:matches[1],from:matches[2],to:matches[3]};};});mod.factory('d4cTimeboundParser',function(){var parameterRE=/([\w]+)(<|>)="(.*)"/;return function(parameterValue){var matches=parameterRE.exec(decodeURIComponent(parameterValue));if(!matches){return{};}
return{field:matches[1],date:matches[3]};};});mod.factory('d4cTimescaleParser',['translate',function(translate){var parameterRE=/([\w-]+)>=#now\((.*)=-(\w)\)/;var scaleLabels={'years':{'1':translate('Last 12 months')},'weeks':{'1':translate('Last 7 days'),'4':translate('Last 4 weeks')},'days':{'1':translate('Last 24 hours')}};return function(parameterValue){var matches=parameterRE.exec(decodeURIComponent(parameterValue));if(!matches){return{};}
return{field:matches[1],scaleLabel:scaleLabels[matches[2]][matches[3]]};};}]);}());;(function(){"use strict";var mod=angular.module('d4c-widgets');mod.service('QueryParameters',[function(){return['q.timerange','q.timescale','q.calendar_bounds','q.geographic_area','q.mapfilter','q.to_date','q.from_date','geofilter.distance','geofilter.polygon'];}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('MapRenderingHeatmap',['D4CAPI','MapLayerHelper','$q',function(D4CAPI,MapLayerHelper,$q){return{render:function(layerConfig,map,layerGroup,timeout){var deferred=$q.defer();var heatmapOptions={};if(angular.isObject(layerConfig.color)&&layerConfig.color.type==='gradient'&&layerConfig.color.steps){heatmapOptions.gradient=layerConfig.color.steps;}
var parameters=angular.extend({},layerConfig.context.parameters,{'clustermode':'heatmap','clusterdistance':15,'clusterprecision':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds())});if(layerConfig.func!=='COUNT'&&MapLayerHelper.isAnalyzeEnabledClustering(layerConfig)){parameters['y.serie1.expr']=layerConfig.expr;parameters['y.serie1.func']=layerConfig.func;}
D4CAPI.records.geo(layerConfig.context,parameters,timeout.promise).success(function(data){var records=data.clusters;heatmapOptions.radius=Math.min((1/data.clusters.length)*(4000*(layerConfig.radius/4))+20,50);var min=MapLayerHelper.getClusterMin(data,layerConfig);var max=MapLayerHelper.getClusterMax(data,layerConfig);layerConfig._bounds=[min,max];var heatmapData=[];for(var i=0;i<records.length;i++){var record=records[i];var clusterValue=MapLayerHelper.getClusterValue(record,layerConfig);if(clusterValue!==null){var ratio=D4C.CalculationUtils.getValueOnScale(clusterValue,min,max,layerConfig.sizeFunction);heatmapData.push([record.cluster_center[0],record.cluster_center[1],ratio]);}}
var heatmapLayer=null;if(heatmapData.length>0){heatmapLayer=L.heatLayer(heatmapData,heatmapOptions);layerGroup.addLayer(heatmapLayer);}
deferred.resolve(heatmapLayer);});return deferred.promise;}};}]);}());;(function(){"use strict";var mod=angular.module('d4c-widgets');mod.service('Timezones',[function(){return['UTC','Africa/Abidjan','Africa/Accra','Africa/Addis_Ababa','Africa/Algiers','Africa/Asmara','Africa/Bamako','Africa/Bangui','Africa/Banjul','Africa/Bissau','Africa/Blantyre','Africa/Brazzaville','Africa/Bujumbura','Africa/Cairo','Africa/Casablanca','Africa/Ceuta','Africa/Conakry','Africa/Dakar','Africa/Dar_es_Salaam','Africa/Djibouti','Africa/Douala','Africa/El_Aaiun','Africa/Freetown','Africa/Gaborone','Africa/Harare','Africa/Johannesburg','Africa/Juba','Africa/Kampala','Africa/Khartoum','Africa/Kigali','Africa/Kinshasa','Africa/Lagos','Africa/Libreville','Africa/Lome','Africa/Luanda','Africa/Lubumbashi','Africa/Lusaka','Africa/Malabo','Africa/Maputo','Africa/Maseru','Africa/Mbabane','Africa/Mogadishu','Africa/Monrovia','Africa/Nairobi','Africa/Ndjamena','Africa/Niamey','Africa/Nouakchott','Africa/Ouagadougou','Africa/Porto-Novo','Africa/Sao_Tome','Africa/Tripoli','Africa/Tunis','Africa/Windhoek','America/Adak','America/Anchorage','America/Anguilla','America/Antigua','America/Araguaina','America/Argentina/Buenos_Aires','America/Argentina/Catamarca','America/Argentina/Cordoba','America/Argentina/Jujuy','America/Argentina/La_Rioja','America/Argentina/Mendoza','America/Argentina/Rio_Gallegos','America/Argentina/Salta','America/Argentina/San_Juan','America/Argentina/San_Luis','America/Argentina/Tucuman','America/Argentina/Ushuaia','America/Aruba','America/Asuncion','America/Atikokan','America/Bahia','America/Bahia_Banderas','America/Barbados','America/Belem','America/Belize','America/Blanc-Sablon','America/Boa_Vista','America/Bogota','America/Boise','America/Cambridge_Bay','America/Campo_Grande','America/Cancun','America/Caracas','America/Cayenne','America/Cayman','America/Chicago','America/Chihuahua','America/Costa_Rica','America/Creston','America/Cuiaba','America/Curacao','America/Danmarkshavn','America/Dawson','America/Dawson_Creek','America/Denver','America/Detroit','America/Dominica','America/Edmonton','America/Eirunepe','America/El_Salvador','America/Fortaleza','America/Glace_Bay','America/Godthab','America/Goose_Bay','America/Grand_Turk','America/Grenada','America/Guadeloupe','America/Guatemala','America/Guayaquil','America/Guyana','America/Halifax','America/Havana','America/Hermosillo','America/Indiana/Indianapolis','America/Indiana/Knox','America/Indiana/Marengo','America/Indiana/Petersburg','America/Indiana/Tell_City','America/Indiana/Vevay','America/Indiana/Vincennes','America/Indiana/Winamac','America/Inuvik','America/Iqaluit','America/Jamaica','America/Juneau','America/Kentucky/Louisville','America/Kentucky/Monticello','America/Kralendijk','America/La_Paz','America/Lima','America/Los_Angeles','America/Lower_Princes','America/Maceio','America/Managua','America/Manaus','America/Marigot','America/Martinique','America/Matamoros','America/Mazatlan','America/Menominee','America/Merida','America/Metlakatla','America/Mexico_City','America/Miquelon','America/Moncton','America/Monterrey','America/Montevideo','America/Montreal','America/Montserrat','America/Nassau','America/New_York','America/Nipigon','America/Nome','America/Noronha','America/North_Dakota/Beulah','America/North_Dakota/Center','America/North_Dakota/New_Salem','America/Ojinaga','America/Panama','America/Pangnirtung','America/Paramaribo','America/Phoenix','America/Port-au-Prince','America/Port_of_Spain','America/Porto_Velho','America/Puerto_Rico','America/Rainy_River','America/Rankin_Inlet','America/Recife','America/Regina','America/Resolute','America/Rio_Branco','America/Santa_Isabel','America/Santarem','America/Santiago','America/Santo_Domingo','America/Sao_Paulo','America/Scoresbysund','America/Shiprock','America/Sitka','America/St_Barthelemy','America/St_Johns','America/St_Kitts','America/St_Lucia','America/St_Thomas','America/St_Vincent','America/Swift_Current','America/Tegucigalpa','America/Thule','America/Thunder_Bay','America/Tijuana','America/Toronto','America/Tortola','America/Vancouver','America/Whitehorse','America/Winnipeg','America/Yakutat','America/Yellowknife','Antarctica/Casey','Antarctica/Davis','Antarctica/DumontDUrville','Antarctica/Macquarie','Antarctica/Mawson','Antarctica/McMurdo','Antarctica/Palmer','Antarctica/Rothera','Antarctica/South_Pole','Antarctica/Syowa','Antarctica/Vostok','Arctic/Longyearbyen','Asia/Aden','Asia/Almaty','Asia/Amman','Asia/Anadyr','Asia/Aqtau','Asia/Aqtobe','Asia/Ashgabat','Asia/Baghdad','Asia/Bahrain','Asia/Baku','Asia/Bangkok','Asia/Beirut','Asia/Bishkek','Asia/Brunei','Asia/Choibalsan','Asia/Chongqing','Asia/Colombo','Asia/Damascus','Asia/Dhaka','Asia/Dili','Asia/Dubai','Asia/Dushanbe','Asia/Gaza','Asia/Harbin','Asia/Hebron','Asia/Ho_Chi_Minh','Asia/Hong_Kong','Asia/Hovd','Asia/Irkutsk','Asia/Jakarta','Asia/Jayapura','Asia/Jerusalem','Asia/Kabul','Asia/Kamchatka','Asia/Karachi','Asia/Kashgar','Asia/Kathmandu','Asia/Khandyga','Asia/Kolkata','Asia/Krasnoyarsk','Asia/Kuala_Lumpur','Asia/Kuching','Asia/Kuwait','Asia/Macau','Asia/Magadan','Asia/Makassar','Asia/Manila','Asia/Muscat','Asia/Nicosia','Asia/Novokuznetsk','Asia/Novosibirsk','Asia/Omsk','Asia/Oral','Asia/Phnom_Penh','Asia/Pontianak','Asia/Pyongyang','Asia/Qatar','Asia/Qyzylorda','Asia/Rangoon','Asia/Riyadh','Asia/Sakhalin','Asia/Samarkand','Asia/Seoul','Asia/Shanghai','Asia/Singapore','Asia/Taipei','Asia/Tashkent','Asia/Tbilisi','Asia/Tehran','Asia/Thimphu','Asia/Tokyo','Asia/Ulaanbaatar','Asia/Urumqi','Asia/Ust-Nera','Asia/Vientiane','Asia/Vladivostok','Asia/Yakutsk','Asia/Yekaterinburg','Asia/Yerevan','Atlantic/Azores','Atlantic/Bermuda','Atlantic/Canary','Atlantic/Cape_Verde','Atlantic/Faroe','Atlantic/Madeira','Atlantic/Reykjavik','Atlantic/South_Georgia','Atlantic/St_Helena','Atlantic/Stanley','Australia/Adelaide','Australia/Brisbane','Australia/Broken_Hill','Australia/Currie','Australia/Darwin','Australia/Eucla','Australia/Hobart','Australia/Lindeman','Australia/Lord_Howe','Australia/Melbourne','Australia/Perth','Australia/Sydney','Canada/Atlantic','Canada/Central','Canada/Eastern','Canada/Mountain','Canada/Newfoundland','Canada/Pacific','Europe/Amsterdam','Europe/Andorra','Europe/Athens','Europe/Belgrade','Europe/Berlin','Europe/Bratislava','Europe/Brussels','Europe/Bucharest','Europe/Budapest','Europe/Busingen','Europe/Chisinau','Europe/Copenhagen','Europe/Dublin','Europe/Gibraltar','Europe/Guernsey','Europe/Helsinki','Europe/Isle_of_Man','Europe/Istanbul','Europe/Jersey','Europe/Kaliningrad','Europe/Kiev','Europe/Lisbon','Europe/Ljubljana','Europe/London','Europe/Luxembourg','Europe/Madrid','Europe/Malta','Europe/Mariehamn','Europe/Minsk','Europe/Monaco','Europe/Moscow','Europe/Oslo','Europe/Paris','Europe/Podgorica','Europe/Prague','Europe/Riga','Europe/Rome','Europe/Samara','Europe/San_Marino','Europe/Sarajevo','Europe/Simferopol','Europe/Skopje','Europe/Sofia','Europe/Stockholm','Europe/Tallinn','Europe/Tirane','Europe/Uzhgorod','Europe/Vaduz','Europe/Vatican','Europe/Vienna','Europe/Vilnius','Europe/Volgograd','Europe/Warsaw','Europe/Zagreb','Europe/Zaporozhye','Europe/Zurich','Indian/Antananarivo','Indian/Chagos','Indian/Christmas','Indian/Cocos','Indian/Comoro','Indian/Kerguelen','Indian/Mahe','Indian/Maldives','Indian/Mauritius','Indian/Mayotte','Indian/Reunion','Pacific/Apia','Pacific/Auckland','Pacific/Chatham','Pacific/Chuuk','Pacific/Easter','Pacific/Efate','Pacific/Enderbury','Pacific/Fakaofo','Pacific/Fiji','Pacific/Funafuti','Pacific/Galapagos','Pacific/Gambier','Pacific/Guadalcanal','Pacific/Guam','Pacific/Honolulu','Pacific/Johnston','Pacific/Kiritimati','Pacific/Kosrae','Pacific/Kwajalein','Pacific/Majuro','Pacific/Marquesas','Pacific/Midway','Pacific/Nauru','Pacific/Niue','Pacific/Norfolk','Pacific/Noumea','Pacific/Pago_Pago','Pacific/Palau','Pacific/Pitcairn','Pacific/Pohnpei','Pacific/Port_Moresby','Pacific/Rarotonga','Pacific/Saipan','Pacific/Tahiti','Pacific/Tarawa','Pacific/Tongatapu','Pacific/Wake','Pacific/Wallis','US/Alaska','US/Arizona','US/Central','US/Eastern','US/Hawaii','US/Mountain','US/Pacific'];}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('MapRenderingAggregation',['D4CAPI','MapLayerHelper','AggregationHelper','$q',function(D4CAPI,MapLayerHelper,AggregationHelper,$q){return{render:function(layerConfig,map,layerGroup,timeout){var deferred=$q.defer();var shapeLayerGroup=layerGroup;var getShape,getItems,parameters;if(layerConfig.joinContext){var localKey=layerConfig.localKey;var remoteKey=layerConfig.remoteKey;if(!localKey||!remoteKey){console.error('An aggregation layer with a remote dataset requires a local-key and a remote-key');}
var shapefields=layerConfig.joinContext.dataset.getFieldsForType('geo_shape');if(!shapefields.length){console.error('You can only join an aggregation layer with a dataset that contains a geo_shape field.');}
var shapefield=shapefields[0].name;getShape=function(item){if(angular.isArray(item.x)&&item.x[0].fields){return item.x[0].fields[shapefield];}else{return null;}};getItems=function(rawResult){return rawResult.results;};var joinedFields=shapefield;if(layerConfig.hoverField){joinedFields+=','+layerConfig.hoverField;}
parameters=angular.extend({},layerConfig.context.parameters,{'clusterprecision':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds()),'join.agg1.fields':joinedFields,'join.agg1.remotedataset':layerConfig.joinContext.dataset.datasetid,'join.agg1.remotekey':remoteKey,'join.agg1.localkey':localKey,'agg.agg1.func':'MIN,MAX','agg.agg1.expr':'serie1','y.serie1.expr':layerConfig.expr,'y.serie1.func':layerConfig.func});D4CAPI.records.analyze(layerConfig.context,parameters,timeout.promise).success(handleResult);}else{getShape=function(item){return item.cluster;};getItems=function(rawResult){return rawResult.clusters;};parameters=angular.extend({},layerConfig.context.parameters,{'clusterprecision':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds())});if(layerConfig.func!=='COUNT'&&MapLayerHelper.isAnalyzeEnabledClustering(layerConfig)){parameters['y.serie1.expr']=layerConfig.expr;parameters['y.serie1.func']=layerConfig.func;}
D4CAPI.records.geopolygon(layerConfig.context,parameters,timeout.promise).success(handleResult);}
function handleResult(rawResult){var records=getItems(rawResult);if(records.length===0){deferred.resolve(shapeLayerGroup);return;}
var min=MapLayerHelper.getClusterMin(rawResult,layerConfig);var max=MapLayerHelper.getClusterMax(rawResult,layerConfig);var values=MapLayerHelper.getClusterValues(rawResult,layerConfig);var colorScale=function(value){return MapLayerHelper.getColor(value,layerConfig,min,max,values.length);};var geojsonOptions={radius:3,color:"#fff",weight:1,opacity:0.9,fillOpacity:0.5};if(!(angular.isObject(layerConfig.color)&&layerConfig.color.type==='range')&&((layerConfig.func!=='COUNT'&&MapLayerHelper.isAnalyzeEnabledClustering(layerConfig))||min!==max)){L.Legend=L.Control.extend({initialize:function(options){L.Control.prototype.initialize.call(this,options);},onAdd:function(map){var grades=chroma.scale().domain([min,max],Math.min(10,values.length),layerConfig.colorFunction).domain(),htmlContent='';var legendDiv=L.DomUtil.create('div','d4cwidget-map__legend');var datasetTitle=layerConfig.context.dataset.datasetid;var fieldName=layerConfig.expr;if(fieldName){fieldName=layerConfig.context.dataset.getFieldLabel(layerConfig.expr);}
datasetTitle=layerConfig.context.dataset.metas.title;htmlContent+='<div class="d4cwidget-map__legend-title">'+datasetTitle+'<br/>'+AggregationHelper.getFunctionLabel(layerConfig.func);if(layerConfig.func!=='COUNT'){htmlContent+=' '+fieldName;}
htmlContent+='</div>';htmlContent+='<div class="d4cwidget-map__legend-colors">';if(values.length===1){htmlContent+='<i class="color_0" style="width: 90%; background-color:'+colorScale((grades[0]+grades[1])/2)+'; opacity: 1;"></i>';htmlContent+='</div><div class="d4cwidget-map__legend-counts">';htmlContent+='<span class="d4cwidget-map__legend-value">';htmlContent+=MapLayerHelper.formatNumber(grades[0]);htmlContent+='</span>';}else{var widthPercent=90/(grades.length-1);for(var i=0;i<grades.length-1;i++){htmlContent+='<i class="d4cwidget-map__legend-color" style="width:'+widthPercent+'%; background-color:'+colorScale((grades[i]+grades[i+1])/2)+'; opacity: 1;"></i>';}
htmlContent+='</div><div>';htmlContent+='<span class="d4cwidget-map__legend-value">';htmlContent+=MapLayerHelper.formatNumber(grades[0]);htmlContent+='</span>';htmlContent+='<span class="d4cwidget-map__legend-value">';htmlContent+=MapLayerHelper.formatNumber(grades[grades.length-1]);htmlContent+='</span>';}
htmlContent+='</div>';legendDiv.innerHTML=htmlContent;return legendDiv;}});var legend=new L.Legend({position:'bottomleft'});var addLegend=function(e){if(e.layer===shapeLayerGroup){map.addControl(legend);map.off('layeradd',addLegend);}};map.on('layeradd',addLegend);var removeLegend=function(e){if(e.layer===shapeLayerGroup){map.removeControl(legend);map.off('layerremove',removeLegend);}};map.on('layerremove',removeLegend);}
var bindMarkerOver=function(layerConfig,marker,record,recordid){marker.on('mouseover',function(e){var layer=e.target;layer.setStyle({weight:2});});marker.on('mouseout',function(e){var layer=e.target;layer.setStyle({weight:1});});};for(var i=0;i<records.length;i++){var record=records[i];var value=MapLayerHelper.getClusterValue(record,layerConfig);var shapeLayer,shape;var pointToLayer=function(feature,latlng){return L.circleMarker(latlng,geojsonOptions);};if(value!==null){shape=getShape(record);if(shape){shapeLayer=new L.GeoJSON(shape,{pointToLayer:pointToLayer,highlight:MapLayerHelper.getColor(value,layerConfig,min,max,values.length),style:function(feature){var opts=angular.copy(geojsonOptions);opts.fillColor=colorScale(value);var optionsMap={'shapeOpacity':'fillOpacity','size':'radius','borderSize':'weight','borderOpacity':'opacity','borderColor':'color'};for(var prop in optionsMap){if(optionsMap.hasOwnProperty(prop)&&angular.isDefined(layerConfig[prop])){opts[optionsMap[prop]]=layerConfig[prop];}}
if(feature.geometry.type==='LineString'||feature.geometry.type==='MultiLineString'){opts.weight=5;opts.color=colorScale(value);}
return opts;}});if(shape.type!=='LineString'&&shape.type!=='MultiLineString'){bindMarkerOver(layerConfig,shapeLayer,record,null);}
if(layerConfig.joinContext&&layerConfig.hoverField){if(record.x[0].fields[layerConfig.hoverField]){shapeLayer.bindLabel(record.x[0].fields[layerConfig.hoverField]);if(layerConfig.refineOnClick){MapLayerHelper.bindTooltip(map,shapeLayer,layerConfig,shape,null,record.geo_digest,record.x[0].fields[layerConfig.hoverField]);}}else{if(layerConfig.refineOnClick){MapLayerHelper.bindTooltip(map,shapeLayer,layerConfig,shape,null,record.geo_digest);}}}else{if((layerConfig.func!=='COUNT'&&MapLayerHelper.isAnalyzeEnabledClustering(layerConfig))||min!==max){shapeLayer.bindLabel(MapLayerHelper.formatNumber(value));}
MapLayerHelper.bindTooltip(map,shapeLayer,layerConfig,shape,null,record.geo_digest);}
shapeLayerGroup.addLayer(shapeLayer);}}}
deferred.resolve(shapeLayerGroup);}
return deferred.promise;}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('MapRenderingRaw',['D4CAPI','MapLayerHelper','SVGInliner','PictoHelper','$q',function(D4CAPI,MapLayerHelper,SVGInliner,PictoHelper,$q){return{render:function(layerConfig,map,layerGroup,timeout){var deferred=$q.defer();var markerLayerGroup=layerGroup;var parameters=angular.extend({},layerConfig.context.parameters,{'rows':1000,'format':'json','geo_simplify':true,'geo_simplify_zoom':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds())});var shapeFields=layerConfig.context.dataset.getFieldsForType('geo_shape');var shapeField=shapeFields.length?shapeFields[0].name:null;var includedFields=[];if(shapeField){includedFields.push(shapeField);}else{includedFields.push(layerConfig.context.dataset.getFieldsForType('geo_point_2d')[0].name);}
if(layerConfig.color.field){includedFields.push(layerConfig.color.field);}
parameters.fields=includedFields.join(',');D4CAPI.records.download(layerConfig.context,parameters,timeout.promise).success(function(data){layerConfig._incomplete=false;if(data.length>=parameters.rows){layerConfig._incomplete=true;}
for(var i=0;i<data.length;i++){var record=data[i];var geoJSON;if(shapeField){if(record.fields[shapeField]){geoJSON=record.fields[shapeField];if(geoJSON.type==='Point'&&angular.isDefined(record.geometry)){geoJSON=record.geometry;}}else{return;}}else if(record.geometry){geoJSON=record.geometry;}else{return;}
if(geoJSON.type==='Point'){MapLayerHelper.drawPoint(layerConfig,map,[geoJSON.coordinates[1],geoJSON.coordinates[0]],record,markerLayerGroup);}else{MapLayerHelper.drawShape(layerConfig,map,geoJSON,record,markerLayerGroup);}}
deferred.resolve(markerLayerGroup);});return deferred.promise;}};}]);}());;(function(){"use strict";var mod=angular.module('d4c-widgets');mod.service('ValueDisplay',['$filter','translate','D4CWidgetsConfig','$sce',function($filter,translate,D4CWidgetsConfig,$sce){var valueFormatters={'language':function(value){return $filter('isocode_to_language')(D4C.StringUtils.escapeHTML(value));},'visualization':function(value){switch(value){case'analyze':return'<i class="d4cwidget-facet__value-icon fa fa-bar-chart"></i> '+translate('Analyze');case'calendar':return'<i class="d4cwidget-facet__value-icon fa fa-calendar"></i> '+translate('Calendar');case'geo':return'<i class="d4cwidget-facet__value-icon fa fa-globe"></i> '+translate('Map');case'image':return'<i class="d4cwidget-facet__value-icon fa fa-picture-o"></i> '+translate('Image');case'api':return'<i class="d4cwidget-facet__value-icon fa fa-cogs"></i> '+translate('API');case'custom_view':return'<i class="d4cwidget-facet__value-icon fa fa-'+D4CWidgetsConfig.defaultCustomViewConfig.icon
+'"></i> '+D4C.StringUtils.escapeHTML(D4CWidgetsConfig.defaultCustomViewConfig.title);default:return D4C.StringUtils.escapeHTML(value);}},'date':function(value,path){if(path.match(/^[0-9]{4}\/[0-9]{2}$/)){return D4C.StringUtils.capitalize(moment.months()[parseInt(value,10)-1]);}
return D4C.StringUtils.escapeHTML(value);}};return{format:function(value,valueType,path){if(angular.isDefined(valueFormatters)){return valueFormatters[valueType](value,path);}
console.log('Warning (ValueDisplay): unknown value formatter "'+valueType+'"');return $sce.trustAsHtml(value);}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.factory('MapLayerHelper',['$rootScope','$compile','$filter','D4CAPI','PictoHelper','SVGInliner',function($rootScope,$compile,$filter,D4CAPI,PictoHelper,SVGInliner){return{getRecordColor:function(record,layerConfig){var value,color;if(angular.isUndefined(layerConfig.color)){return"#C32D1C";}
if(angular.isString(layerConfig.color)){return layerConfig.color;}else if(layerConfig.color.type==='range'){if(layerConfig.color.field){value=record&&record.fields&&record.fields[layerConfig.color.field];if(angular.isUndefined(value)){return layerConfig.color.colors[0];}
return this.getColor(value,layerConfig);}else{console.error('Range coloring requires a field');return layerConfig.color.colors[0];}}else if(layerConfig.color.type==='categories'){value=record&&record.fields&&record.fields[layerConfig.color.field];color=layerConfig.color.categories[value];if(angular.isUndefined(color)){return layerConfig.color.otherCategories||'#000000';}else{return color;}}else if(layerConfig.color.type==='field'){color=record&&record.fields&&record.fields[layerConfig.color.field];if(!color){return'#000000';}
try{return chroma(color).hex();}catch(err){return'#000000';}}else if(layerConfig.color.type==='choropleth'){var rangesUpperBounds=Object.keys(layerConfig.color.ranges).sort(function(a,b){return parseFloat(a)-parseFloat(b);}),highestBoundColor=layerConfig.color.ranges[rangesUpperBounds[rangesUpperBounds.length-1]],splitComplementaryColors=this.getSplitComplementaryColors(highestBoundColor);if(layerConfig.func){value=record;}else{value=record&&record.fields&&record.fields[layerConfig.color.field];}
value=D4C.NumberUtils.limitDecimals(value,5);if(angular.isUndefined(value)){return layerConfig.color.undefinedColor||splitComplementaryColors[1];}
if(!angular.isNumber(value)){console.warn(value,'is not a numeric value to display in choropleth mode.');return layerConfig.color.undefinedColor||splitComplementaryColors[1];}
if(value<layerConfig.color.minValue||value>rangesUpperBounds[rangesUpperBounds.length-1]){return layerConfig.color.outOfBoundsColor||splitComplementaryColors[0];}
var i;for(i=0;i<rangesUpperBounds.length;i++){if(value<=rangesUpperBounds[i]){return layerConfig.color.ranges[rangesUpperBounds[i]];}}}else{console.error('Scale coloring is not supported for simple records');return chroma.scale(layerConfig.color.scale).out('hex').scale(0);}},getClusterColor:function(cluster,layerConfig){if(angular.isUndefined(layerConfig.color)){return"#C32D1C";}
if(angular.isString(layerConfig.color)){return layerConfig.color;}else{return layerConfig.color.colors[0];}},getColor:function(value,layerConfig,min,max,scaleSteps){scaleSteps=scaleSteps||10;if(angular.isUndefined(layerConfig.color)){return"#C32D1C";}
if(angular.isString(layerConfig.color)){if(angular.isDefined(min)&&angular.isDefined(max)){return chroma.scale([chroma(layerConfig.color).brighten(50),layerConfig.color]).domain([min,max],Math.min(10,scaleSteps),layerConfig.colorFunction).out('hex')(value);}else{return layerConfig.color;}}else{if(layerConfig.color.type==='scale'){return chroma.scale(layerConfig.color.scale).domain([min,max],Math.min(10,scaleSteps),layerConfig.colorFunction).out('hex')(value);}else if(layerConfig.color.type==='range'){var i;for(i=0;i<layerConfig.color.ranges.length;i++){if(value<layerConfig.color.ranges[i]){return layerConfig.color.colors[i];}}
return layerConfig.color.colors[layerConfig.color.colors.length-1];}}},bindTooltip:function(map,feature,layerConfig,clusterShape,recordid,geoDigest,fieldValue){var service=this;if(angular.isArray(clusterShape)){clusterShape={type:"Point",coordinates:[clusterShape[1],clusterShape[0]]};}
if(layerConfig.refineOnClick){feature.on('click',function(e){$rootScope.$broadcast('d4c-map-interactive-click');if(map.isDrawing){return;}
service.refineContextOnClick(layerConfig,clusterShape,geoDigest,fieldValue,recordid);});}else if(!layerConfig.tooltipDisabled){feature.on('click',function(e){if(map.isDrawing){return;}
$rootScope.$broadcast('d4cMapInteractiveClick');if(!clusterShape&&!recordid&&!geoDigest&&!e.data){return;}
var latLng,yOffset;if(angular.isDefined(e.target.getLatLng)){latLng=e.target.getLatLng();yOffset=service.getMarkerTooltipYOffset(e.target,layerConfig);}else{latLng=e.latlng;yOffset=0;}
service.showPopup(map,layerConfig,latLng,clusterShape,recordid,geoDigest,yOffset,e.data||null);});}},refineContextOnClick:function(layerConfig,shape,digest,fieldValue,recordid){var refineContext=function(refineConfig){var contextField=refineConfig.contextField;var mapField=refineConfig.mapField;var context=refineConfig.context;var replaceRefine=refineConfig.replaceRefine;if(!mapField&&!contextField){$rootScope.$apply(function(){D4C.GeoFilter.addGeoFilterFromSpatialObject(context.parameters,shape);});}else{if(angular.isDefined(fieldValue)&&mapField==layerConfig.hoverField){$rootScope.$apply(function(){context.toggleRefine(contextField,fieldValue,replaceRefine);});}else{var options={format:'json'};if(digest){if(layerConfig.geoField){options['geo_digest.'+layerConfig.geoField]=digest;}else{options.geo_digest=digest;}}else if(recordid){options.q='recordid:'+recordid;}else{D4C.GeoFilter.addGeoFilterFromSpatialObject(options,shape);}
angular.extend(options,layerConfig.context.parameters,{rows:1});D4CAPI.records.download(layerConfig.context,options).success(function(data){if(angular.isDefined(data[0].fields[mapField])){context.toggleRefine(contextField,data[0].fields[mapField],replaceRefine);}});}}};angular.forEach(layerConfig.refineOnClick,refineContext);},bindZoomable:function(map,feature,layerConfig){var that=this;feature.on('click',function(e){if(map.isDrawing){return;}
if(map.getZoom()===map.getMaxZoom()&&!layerConfig.tooltipDisabled){that.showPopup(map,layerConfig,e.target.getLatLng(),e.target.getClusterShape());}else{map.setView(e.latlng,map.getZoom()+2);}});},showPopup:function(map,layerConfig,latLng,shape,recordid,geoDigest,yOffset,gridData){var service=this;var newScope=$rootScope.$new(true);if(recordid){newScope.recordid=recordid;}
if(shape){newScope.shape=shape;}
if(gridData){newScope.gridData=gridData;}
var dataset=layerConfig.context.dataset;newScope.map=map;newScope.template=layerConfig.tooltipTemplate||dataset.extra_metas&&dataset.extra_metas.visualization&&!dataset.extra_metas.visualization.map_tooltip_disabled&&dataset.extra_metas.visualization.map_tooltip_html_enabled&&dataset.extra_metas.visualization.map_tooltip_html||'';newScope.context=layerConfig.context;var popupOptions={offset:[0,angular.isDefined(yOffset)?yOffset:-30],maxWidth:250,minWidth:250};var popupHeight=330;var tooltipTemplate='<d4c-map-tooltip tooltip-sort="'+(layerConfig.tooltipSort||'')+'" shape="shape" recordid="recordid" context="context" map="map" template="{{ template }}" grid-data="gridData" geo-digest="'+(geoDigest||'')+'"></d4c-map-tooltip>';var compiledTemplate=$compile(tooltipTemplate)(newScope)[0];service._handleTopOverflow(map,popupOptions,latLng,popupHeight);service._handleBoundsOverflow(map,popupOptions,latLng,popupHeight);var popup=new L.Popup(popupOptions).setLatLng(latLng).setContent(compiledTemplate);popup.openOn(map);},formatNumber:function(number){number=Math.round(number*100)/100;number=$filter('number')(number);return number;},getClusterValue:function(cluster,layerConfig){if(layerConfig.display==='aggregation'&&layerConfig.joinContext){return cluster.serie1;}
if(['COUNT',null].indexOf(layerConfig.func)===-1&&this.isAnalyzeEnabledClustering(layerConfig)){if(cluster.series){return cluster.series.serie1;}else{return null;}}else{return cluster.count;}},getClusterMin:function(apiResult,layerConfig){if(layerConfig.display==='aggregation'&&layerConfig.joinContext){return apiResult.aggregations.agg1.min;}
if(['COUNT',null].indexOf(layerConfig.func)===-1&&this.isAnalyzeEnabledClustering(layerConfig)){return apiResult.series.serie1.min;}else if(apiResult.count){return apiResult.count.min;}},getClusterMax:function(apiResult,layerConfig){if(layerConfig.display==='aggregation'&&layerConfig.joinContext){return apiResult.aggregations.agg1.max;}
if(['COUNT',null].indexOf(layerConfig.func)===-1&&this.isAnalyzeEnabledClustering(layerConfig)){return apiResult.series.serie1.max;}else if(apiResult.count){return apiResult.count.max;}},getClusterValues:function(apiResult,layerConfig){var values=[],i;if(layerConfig.display==='aggregation'&&layerConfig.joinContext){for(i=0;i<apiResult.results.length;i++){values.push(apiResult.results[i].serie1);}}else if(['COUNT',null].indexOf(layerConfig.func)===-1&&this.isAnalyzeEnabledClustering(layerConfig)){for(i=0;i<apiResult.clusters.length;i++){if(apiResult.clusters[i].series){values.push(apiResult.clusters[i].series.serie1);}}}else{for(i=0;i<apiResult.clusters.length;i++){values.push(apiResult.clusters[i].count);}}
return values;},isAnalyzeEnabledClustering:function(layerConfig){return['heatmap','polygonforced','shape','aggregation','clusters','choropleth'].indexOf(layerConfig.display)>=0;},doesLayerRefreshOnLocationChange:function(layerConfig){if(layerConfig.display==='tiles'){return false;}else if((layerConfig.display==='shape'||layerConfig.display==='aggregation')&&layerConfig.joinContext){return false;}else{return true;}},getMarkerTooltipYOffset:function(targetElement,layerConfig){var yOffset=0;var verticalTargetSize=targetElement.options.icon.options.iconSize.y;var distanceLeafletPopupTipToBottom=10;var distanceMarkerFromIconToTop=targetElement.options.size+1;var verticalAnchorSize=targetElement.options.icon.options.iconAnchor.y;if(targetElement.options.marker){yOffset=-verticalTargetSize+distanceMarkerFromIconToTop+distanceLeafletPopupTipToBottom;}else{if(layerConfig.picto==="dot"){yOffset=0;}else{yOffset=-verticalTargetSize+verticalAnchorSize+distanceLeafletPopupTipToBottom;}}
return yOffset;},drawPoint:function(layerConfig,map,coords,record,targetLayer,geoDigest){var service=this;SVGInliner.getPromise(PictoHelper.mapPictoToURL(layerConfig.picto,layerConfig.context),layerConfig.marker?'white':service.getRecordColor(record,layerConfig)).then(function(svg){var clickable=layerConfig.refineOnClick||(angular.isDefined(layerConfig.tooltipDisabled)?!layerConfig.tooltipDisabled:true);var singleMarker=new L.VectorMarker(coords,{color:service.getRecordColor(record,layerConfig),icon:svg,marker:layerConfig.marker,opacity:layerConfig.pointOpacity,size:layerConfig.size,clickable:clickable,});targetLayer.addLayer(singleMarker);if(clickable){if(angular.isObject(record)){service.bindTooltip(map,singleMarker,layerConfig,coords,record.recordid);}else{service.bindTooltip(map,singleMarker,layerConfig,coords,null,geoDigest);}}});},drawShape:function(layerConfig,map,geoJSON,record,targetLayer,geoDigest){var service=this;var clickable=layerConfig.refineOnClick||(angular.isDefined(layerConfig.tooltipDisabled)?!layerConfig.tooltipDisabled:true);var shapeLayer=new L.GeoJSON(geoJSON,{clickable:clickable,style:function(feature){var opts={};opts.radius=3;if(layerConfig.borderPattern&&layerConfig.borderPattern!=='solid'){opts.dashArray=service.patternToDashArray(layerConfig.borderPattern);}
if(feature.geometry.type==='LineString'||feature.geometry.type==='MultiLineString'){opts.weight=layerConfig.lineWidth;opts.color=service.getRecordColor(record,layerConfig);if(angular.isDefined(layerConfig.shapeOpacity)){opts.opacity=layerConfig.shapeOpacity;}else{opts.opacity=0.5;}}else{opts.fillColor=service.getRecordColor(record,layerConfig);if(angular.isDefined(layerConfig.borderSize)){opts.weight=layerConfig.borderSize;}else{opts.weight=1;}
if(angular.isDefined(layerConfig.shapeOpacity)){opts.fillOpacity=layerConfig.shapeOpacity;}else{opts.fillOpacity=0.5;}
if(angular.isDefined(layerConfig.borderOpacity)){opts.opacity=layerConfig.borderOpacity;}else{opts.opacity=1;}
if(angular.isDefined(layerConfig.borderColor)){opts.color=layerConfig.borderColor;}else{opts.color="#fff";}
if(layerConfig.borderPattern&&layerConfig.borderPattern!=='solid'){opts.dashArray=service.patternToDashArray(layerConfig.borderPattern);}}
return opts;}});if(clickable){if(angular.isObject(record)){service.bindTooltip(map,shapeLayer,layerConfig,geoJSON,record.recordid);}else{service.bindTooltip(map,shapeLayer,layerConfig,geoJSON,null,geoDigest);}}
targetLayer.addLayer(shapeLayer);},patternToDashArray:function(pattern){var dashArray;var DOT=1;var SHORT=5;var MEDIUM=15;var LONG=30;switch(pattern){case'long-dashes':dashArray=[LONG,MEDIUM];break;case'medium-dashes':dashArray=[MEDIUM,MEDIUM];break;case'short-dashes':dashArray=[SHORT,MEDIUM];break;case'dots':dashArray=[DOT,MEDIUM];break;case'short-dot':dashArray=[DOT,SHORT,SHORT];break;case'short-dot-dot':dashArray=[DOT,SHORT,SHORT,DOT,SHORT];break;case'medium-short':dashArray=[MEDIUM,SHORT,SHORT,SHORT];break;default:console.error('Unknown border pattern',pattern);break;}
return dashArray.join(', ');},_splitComplimentaryColors:{},_generateSplitComplimentaryColors:function(baseColor){var angles=[150,210];var colors=[];var color;for(var i=0;i<angles.length;i++){color=chroma(baseColor).hsl();color.splice(0,1,color[0]+angles[i]);color=chroma.apply(null,color.concat(['hsl']));colors.push(color.hex());}
return colors;},getSplitComplementaryColors:function(baseColor){if(!this._splitComplimentaryColors[baseColor]){this._splitComplimentaryColors[baseColor]=this._generateSplitComplimentaryColors(baseColor);}
return this._splitComplimentaryColors[baseColor]},_handleTopOverflow:function(map,popupOptions,latLng,popupMaxHeight){var markerPixelPosition=map.latLngToContainerPoint(latLng);var markerVerticalOffset=Math.abs(popupOptions.offset[1]);var totalHeight=popupMaxHeight+markerVerticalOffset;var distanceToTop=markerPixelPosition.y-totalHeight;if(distanceToTop<0){map.panBy([0,distanceToTop-5]);}},_handleBoundsOverflow:function(map,popupOptions,latLng,popupMaxHeight){var markerPixelPosition=map.project(latLng);var NorthOverflow=markerPixelPosition.y<popupMaxHeight;if(NorthOverflow){popupOptions.className='d4cwidget-map-tooltip--reverse';popupOptions.offset=[0,10];}}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('MapRenderingClustered',['D4CAPI','MapLayerHelper','SVGInliner','PictoHelper','$q',function(D4CAPI,MapLayerHelper,SVGInliner,PictoHelper,$q){return{render:function(layerConfig,map,layerGroup,timeout,showPolygons){var deferred=$q.defer();var parameters=angular.extend({},layerConfig.context.parameters,{'clusterdistance':50,'clusterprecision':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds()),'return_polygons':showPolygons});if(layerConfig.func!=='COUNT'&&MapLayerHelper.isAnalyzeEnabledClustering(layerConfig)){parameters['y.serie1.expr']=layerConfig.expr;parameters['y.serie1.func']=layerConfig.func;}
D4CAPI.records.geo(layerConfig.context,parameters,timeout.promise).success(function(data){var records=data.clusters;for(var i=0;i<records.length;i++){var record=records[i];if(record.count===1&&layerConfig.display!=='polygonforced'&&layerConfig.display!=='clusters'){MapLayerHelper.drawPoint(layerConfig,map,record.cluster_center,record,layerGroup);}else{var clusterValue=MapLayerHelper.getClusterValue(record,layerConfig);if(clusterValue!==null){var clusterMarker=new L.ClusterMarker(record.cluster_center,{geojson:record.cluster,value:MapLayerHelper.getClusterValue(record,layerConfig),min:MapLayerHelper.getClusterMin(data,layerConfig),max:MapLayerHelper.getClusterMax(data,layerConfig),color:MapLayerHelper.getClusterColor(record,layerConfig),opacity:layerConfig.pointOpacity,numberFormattingFunction:MapLayerHelper.formatNumber,minSize:layerConfig.minSize,maxSize:layerConfig.maxSize,borderOpacity:layerConfig.borderOpacity,borderSize:layerConfig.borderSize,borderColor:layerConfig.borderColor,sizeFunction:layerConfig.sizeFunction});MapLayerHelper.bindZoomable(map,clusterMarker,layerConfig);layerGroup.addLayer(clusterMarker);}}}
deferred.resolve(layerGroup);});return deferred.promise;}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('MapRenderingChoroplethAggregation',['D4CAPI','MapLayerHelper','AggregationHelper','$q',function(D4CAPI,MapLayerHelper,AggregationHelper,$q){return{render:function(layerConfig,map,layerGroup,timeout){var deferred=$q.defer();var shapeLayerGroup=layerGroup;var parameters=angular.extend({},layerConfig.context.parameters,{'clusterprecision':map.getZoom(),'geofilter.bbox':D4C.GeoFilter.getBoundsAsBboxParameter(map.getBounds())});if(layerConfig.geoField){parameters['geo_field']=layerConfig.geoField;}
if(layerConfig.func!=='COUNT'&&MapLayerHelper.isAnalyzeEnabledClustering(layerConfig)){parameters['y.serie1.expr']=layerConfig.expr;parameters['y.serie1.func']=layerConfig.func;}
D4CAPI.records.geopolygon(layerConfig.context,parameters,timeout.promise).success(handleResult);function handleResult(rawResult){var records=rawResult.clusters;for(var i=0;i<records.length;i++){var record=records[i];var value=MapLayerHelper.getClusterValue(record,layerConfig);var shape=record.cluster;if(shape.type==='Point'){MapLayerHelper.drawPoint(layerConfig,map,[shape.coordinates[1],shape.coordinates[0]],value,shapeLayerGroup,record.geo_digest);}else{MapLayerHelper.drawShape(layerConfig,map,shape,value,shapeLayerGroup,record.geo_digest);}}
deferred.resolve(shapeLayerGroup);}
return deferred.promise;}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.service('D4CAPI',['$http','D4CWidgetsConfig','d4cNotificationService','d4cHttpErrorMessages',function($http,D4CWidgetsConfig,d4cNotificationService,d4cHttpErrorMessages){var request=function(context,path,params,timeout){var url=context?context.domainUrl:'';url+=path;params=D4C.URLUtils.cleanupAPIParams(params)||{};params.timezone=jstz.determine().name();if(context&&context.apikey){params.apikey=context.apikey;}
if(context&&context.source){params.source=context.source;}
var options={params:params,paramSerializer:function(params){return D4C.URLUtils.getAPIQueryString(params);}};if(timeout){options.timeout=timeout;}
if(!url.startsWith('http://')){if(D4CWidgetsConfig.customAPIHeaders){options.headers=D4CWidgetsConfig.customAPIHeaders;}else{options.headers={};}
options.headers['D4C-Widgets-Version']=D4CWidgetsConfig.D4CWidgetsVersion;}
if(!context.domainUrl||Modernizr.cors){return $http.get(url,options).error(function(data,status){if(data){d4cNotificationService.sendNotification(data);}else if(status>=400){d4cNotificationService.sendNotification(d4cHttpErrorMessages.getForStatus(status));}});}else{url+=url.indexOf('?')>-1?'&':'?';url+='callback=JSON_CALLBACK';return $http.jsonp(url,options);}};return{'getDomainURL':function(domain){var root=null;if(angular.isUndefined(domain)||domain===null||domain===''){root=D4CWidgetsConfig.defaultDomain;}else{if(domain.substr(0,1)!=='/'&&domain.indexOf('.')===-1){root=domain+'.data4citizen.com';}else{root=domain;}
if(root.substr(0,1)!=='/'&&root.indexOf('http://')===-1&&root.indexOf('https://')===-1){root='https://'+root;}}
if(root.substr(-1)==='/'){root=root.substr(0,root.length-1);}
return root;},'datasets':{'get':function(context,datasetID,parameters){return request(context, fetchPrefix() + '/d4c/api/datasets/1.0/'+datasetID+'/',parameters);},'search':function(context,parameters){var queryParameters=angular.extend({},context.parameters,parameters);return request(context, fetchPrefix() + '/d4c/api/datasets/1.0/search/',queryParameters);},'facets':function(context,facetName){return this.search(context,{'rows':0,'facet':facetName});}},'records':{'analyze':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/analyze/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout).success(function(data,status,headers,config){if(headers()['d4c-analyze-truncated']){d4cNotificationService.sendNotification(translate("An analysis request hit the maximum number of results limit. Returned data is incomplete and not trustworthy."));}});},'search':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/search/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout);},'download':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/download/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout);},'geo':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/geocluster/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout);},'geopreview':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/geopreview/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout);},'boundingbox':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/boundingbox/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout);},'geopolygon':function(context,parameters,timeout){return request(context, fetchPrefix() + '/d4c/api/records/1.0/geopolygon/',angular.extend({},parameters,{dataset:context.dataset.datasetid}),timeout);}},'reuses':function(context,parameters){return request(context,'/api/reuses/',parameters);}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.factory('MapHelper',['D4CWidgetsConfig','D4CAPI','$q','AggregationHelper','translate',function(D4CWidgetsConfig,D4CAPI,$q,AggregationHelper,translate){var locationAccuracy=5;var locationDelimiter=',';var defaultMarkerColor="#C32D1C";var defaultRangeColors=["#FC9272","#A5211B"];return{WORLD_BOUNDS:[[-60,-180],[80,180]],DEFAULT_MARKER_COLOR:defaultMarkerColor,DEFAULT_RANGE_COLORS:defaultRangeColors,retrieveBounds:function(contextList){var service=this;var deferred=$q.defer();if(contextList.length===0){deferred.resolve(null);}else{var promises=[];angular.forEach(contextList,function(ctx){var options={};jQuery.extend(options,ctx.parameters);promises.push(D4CAPI.records.boundingbox(ctx,options));});$q.all(promises).then(function(results){var bounds;angular.forEach(results,function(result){var data=result.data;var newBounds=[[data.bbox[1],data.bbox[0]],[data.bbox[3],data.bbox[2]]];if(data.count>0){if(!bounds){bounds=L.latLngBounds(newBounds);}else{bounds.extend(newBounds);}}});if(bounds&&bounds.isValid()){deferred.resolve(bounds);}else{deferred.resolve(service.WORLD_BOUNDS);}});}
return deferred.promise;},getLocationStructure:function(location){var tokens=location.split(locationDelimiter);return{center:[tokens[1],tokens[2]],zoom:tokens[0]};},getLocationParameter:function(center,zoom){if(angular.isArray(center)){center=L.latLng(center);}
var lat=L.Util.formatNum(center.lat,locationAccuracy);var lng=L.Util.formatNum(center.lng,locationAccuracy);return zoom+locationDelimiter+lat+locationDelimiter+lng;},_getDatasetFieldBound:function(context,fieldName,orderPrefix){var service=this;var deferred=$q.defer();var apiParams=angular.extend({},context.parameters,{'rows':1});var sort=fieldName;if(orderPrefix){sort=orderPrefix+sort;}
D4CAPI.records.search(context,angular.extend(apiParams,{sort:sort})).then(function(result){deferred.resolve(service.boundAsNumber(result.data.records[0].fields[fieldName]));});return deferred.promise;},getDatasetFieldBoundMin:function(context,fieldName){return this._getDatasetFieldBound(context,fieldName,'-');},getDatasetFieldBoundMax:function(context,fieldName){return this._getDatasetFieldBound(context,fieldName);},getDatasetFieldBounds:function(context,fieldName){var service=this;var calls=[this.getDatasetFieldBoundMin(context,fieldName),this.getDatasetFieldBoundMax(context,fieldName)];var deferred=$q.defer();$q.all(calls).then(function(results){var values=results.sort(D4C.ArrayUtils.sortNumbers);var minValue=values[0];var maxValue=values[1];deferred.resolve([minValue,maxValue]);});return deferred.promise;},getDatasetAggregationBounds:function(context,aggregationFunction,fieldName){var service=this;var apiParams=angular.extend({},context.parameters);var deferred=$q.defer();apiParams.maxpoints=1;if(aggregationFunction!=='COUNT'){apiParams['y.serie.expr']=fieldName;apiParams['y.serie.func']=aggregationFunction;}
D4CAPI.records.geopolygon(context,apiParams).then(function(result){var data=result.data;if(aggregationFunction!=='COUNT'){deferred.resolve([data.series.serie.min,data.series.serie.max]);}else{deferred.resolve([data.count.min,data.count.max]);}});return deferred.promise;},boundAsNumber:function(number){return parseFloat(number);},getLayerLegendLabel:function(layerConfig){var label=null;if(['choropleth','categories','heatmap','clusters'].indexOf(layerConfig.display)>=0){var field;if(layerConfig.display==='categories'||(layerConfig.display==='choropleth'&&layerConfig.color.field)){field=layerConfig.context.dataset.getField(layerConfig.color.field);}else if(layerConfig.func.toUpperCase()!=='COUNT'){field=layerConfig.context.dataset.getField(layerConfig.expr);}
if(field){label=field.label;var addendums=[];if(layerConfig.func){addendums.push(AggregationHelper.getFunctionLabel(layerConfig.func));}
var unit=layerConfig.context.dataset.getFieldAnnotation(field,'unit');if(unit){var unitLabel=translate('in {unit}');addendums.push(format_string(unitLabel,{unit:unit.args[0]}));}
if(addendums.length){label+=' ('+addendums.join(', ')+')';}}else{label=translate('Number of elements');}
return label;}},MapConfiguration:{getActiveContextList:function(config,options){options=options||{};var contexts=[];angular.forEach(config.groups,function(group){if(group.displayed){angular.forEach(group.layers,function(datasetConfig){if(!datasetConfig.context.error){if(!options.geoOnly||datasetConfig.context.dataset.hasGeoField()){if(!(datasetConfig.excludeFromRefit&&options.skipExcludedFromRefit)){contexts.push(datasetConfig.context);}}}});}});return contexts;},getContextList:function(config){var contexts=[];angular.forEach(config.groups,function(group){angular.forEach(group.layers,function(datasetConfig){if(datasetConfig.context&&datasetConfig.context.dataset&&datasetConfig.context.dataset.hasGeoField()){contexts.push(datasetConfig.context);}});});return contexts;},createLayerGroupConfiguration:function(){return{"color":null,"title":null,"description":null,"displayed":true,"picto":null,"layers":[]};},createLayerConfiguration:function(template,config){if(angular.isUndefined(config)){config={};}
var display=config.display||'auto';if(display==='clusters'||display==='clustersforced'){display='polygonforced';}
if(display==='raw'){display='none';}
config.size=Math.min(config.size,10);config.radius=Math.min(config.radius,10);var layer={"context":null,"color":config.color,"colorFunction":config.colorFunction,"picto":config.picto,"display":display,"func":config['function']||null,"expr":config.expression||null,"marker":null,"size":config.size||null,"radius":config.radius||null,"tooltipDisabled":angular.isDefined(config.tooltipDisabled)?config.tooltipDisabled:false,"tooltipTemplate":template,"localKey":config.localKey||null,"remoteKey":config.remoteKey||null,"tooltipSort":config.tooltipSort,"hoverField":config.hoverField||null,"shapeOpacity":config.shapeOpacity||null,"pointOpacity":config.pointOpacity||null,"lineWidth":config.lineWidth||null,"borderOpacity":config.borderOpacity||null,"borderColor":config.borderColor,"borderSize":config.borderSize||null,"borderPattern":config.borderPattern||null,"excludeFromRefit":config.excludeFromRefit,"caption":angular.isDefined(config.caption)?config.caption:false,"captionTitle":config.captionTitle||null,"captionPictoIcon":config.captionPictoIcon||null,"captionPictoColor":config.captionPictoColor||null,"title":config.title||null,"description":config.description||null,"showZoomMin":config.showZoomMin||null,"showZoomMax":config.showZoomMax||null,"minSize":config.minSize||null,"maxSize":config.maxSize||null,"sizeFunction":config.sizeFunction||null,"geoField":config.geoField};if(!layer.func&&['shape','aggregation'].indexOf(layer.display)>-1){layer.func='COUNT';}
this.createLayerId(layer);return layer;},setLayerDisplaySettingsFromDefault:function(layer){if(angular.isUndefined(layer.marker)||layer.marker===null){if(layer.context.dataset.getExtraMeta('visualization','map_marker_hidemarkershape')!==null){layer.marker=!layer.context.dataset.getExtraMeta('visualization','map_marker_hidemarkershape');}else{layer.marker=true;}}
layer.color=layer.color||layer.context.dataset.getExtraMeta('visualization','map_marker_color')||defaultMarkerColor;layer.picto=layer.picto||layer.context.dataset.getExtraMeta('visualization','map_marker_picto')||(layer.marker?"d4c-circle":"dot");if(layer.marker){layer.size=layer.size||4;}else{layer.size=layer.size||7;}
if(angular.isUndefined(layer.shapeOpacity)||layer.shapeOpacity===null){layer.shapeOpacity=layer.shapeOpacity||0.5;}
if(angular.isUndefined(layer.pointOpacity)||layer.pointOpacity===null){layer.pointOpacity=layer.pointOpacity||1;}
layer.radius=layer.radius||4;layer.lineWidth=layer.lineWidth||5;layer.borderOpacity=layer.borderOpacity||1;layer.borderColor=layer.borderColor||'#FFFFFF';layer.borderSize=layer.borderSize||1;layer.borderPattern=layer.borderPattern||'solid';layer.sizeFunction=layer.sizeFunction||'linear';layer.minSize=layer.minSize||3;layer.maxSize=layer.maxSize||5;this.createLayerId(layer);},getVisibleLayerIds:function(config){var layerIds=[];angular.forEach(config.groups,function(group){if(group.displayed){angular.forEach(group.layers,function(layer){layerIds.push(layer._runtimeId);});}});return layerIds;},createLayerId:function(layer){if(angular.isUndefined(layer._runtimeId)){layer._runtimeId=D4C.StringUtils.getRandomUUID();}}}};}]);}());;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.factory('AggregationHelper',['translate',function(translate){var availableFunctions=[{label:translate('Count'),func:'COUNT'},{label:translate('Average'),func:'AVG'},{label:translate('Minimum'),func:'MIN'},{label:translate('Maximum'),func:'MAX'},{label:translate('Standard deviation'),func:'STDDEV'},{label:translate('Sum'),func:'SUM'},{label:translate('Percentile'),func:'QUANTILES'},{label:translate('Constant value'),func:'CONSTANT'}];return{getAvailableFunctions:function(availableYCount){if(availableYCount===0){return[availableFunctions[0],availableFunctions[availableFunctions.length-1]];}else{return availableFunctions;}},getAvailableFunction:function(f){return availableFunctions[f];},getFunctionLabel:function(func){func=func.toUpperCase();return $.grep(availableFunctions,function(f){return func===f.func;})[0].label;}};}]);mod.factory('ChartHelper',['translate','AggregationHelper','D4CWidgetsConfig','D4CCurrentDomain','colorScale',function(translate,AggregationHelper,D4CWidgetsConfig,D4CCurrentDomain,colorScale){var availableX={},availableY={},availableFunctions=[],timescales_label={'year':translate('Year'),'month':translate('Month'),'day':translate('Day'),'hour':translate('Hour'),'minute':translate('Minute'),'month month':translate('Month of year'),'day day':translate('Day of month'),'day weekday':translate('Day of week'),'hour weekday':translate('Hour per weekday'),'day month':translate('Day of year'),'hour hour':translate('Hour of day')},callbacks={},initialized=[],positions={'top left':{center:['15%','20%'],size:'25%'},'top right':{center:['85%','20%'],size:'25%'},'bottom left':{center:['15%','80%'],size:'25%'},'bottom right':{center:['85%','80%'],size:'25%'},'center':{}},defaultColors=D4CWidgetsConfig.chartColors||chroma.brewer.Set2,availableCharts=[{label:translate('Line'),type:'line',group:translate('line charts')},{label:translate('Spline'),type:'spline',group:translate('line charts')},{label:translate('Range'),type:'arearange',group:translate('Area charts'),filter:'hasNumericField'},{label:translate('Range spline'),type:'areasplinerange',group:translate('Area charts'),filter:'hasNumericField'},{label:translate('Column range'),type:'columnrange',group:translate('Area charts'),filter:'hasNumericField'},{label:translate('Treemap'),type:'treemap',group:translate('Special')},{label:translate('Area'),type:'area',group:translate('Area charts')},{label:translate('Area spline'),type:'areaspline',group:translate('Area charts')},{label:translate('Column chart'),type:'column',group:translate('Bar charts')},{label:translate('Bar chart'),type:'bar',group:translate('Bar charts')},{label:translate('Pie chart'),type:'pie',group:translate('Pie charts')},{label:translate('Scatter plot'),type:'scatter',group:translate('line charts')},{label:translate('Spiderweb chart'),type:'spiderweb',group:translate('Pie charts')},{label:translate('Polar chart'),type:'polar',group:translate('Pie charts')},{label:translate('Funnel chart'),type:'funnel',group:translate('Pyramid charts')},{label:translate('Boxplot'),type:'boxplot',group:translate('Boxplot charts')}],timeserie_precision_tab=["year","month","day","hour","minute"],advanced_precision_tab=['month month','day day','day weekday','hour weekday','day month','hour hour'],colorIdx=0,fields={},datasets={},timeSeries;var getAvailableTimescalesFromPrecision=function(precision,type,fullList){var forced=false;if(!precision){precision=type=='date'?'day':'hour';}else{forced=true;}
var res=[];for(var i=0;i<=timeserie_precision_tab.indexOf(precision);i++){res.push({name:timeserie_precision_tab[i],label:timescales_label[timeserie_precision_tab[i]]});if(type==='date'&&timeserie_precision_tab[i]=='day'){break;}
if(type==='datetime'&&!forced&&timeserie_precision_tab[i]=='hour'){break;}
if(type==='datetime'&&forced&&timeserie_precision_tab[i]=='minute'){break;}}
if(fullList){for(var j=0;j<advanced_precision_tab.length;j++){res.push({name:advanced_precision_tab[j],label:timescales_label[advanced_precision_tab[j]]});if(type==='date'&&timeserie_precision_tab[j]=='day month'){break;}}}
return res;};return{getDatasetUniqueId:function(datasetid){var dataset;angular.forEach(datasets,function(value,key){if(key.endsWith(datasetid)){dataset=value;}
return false;});if(dataset){return dataset.getUniqueId();}else{throw"dataset "+datasetid+" not loaded yet.";}},getDataset:function(uniqueid){var dataset;angular.forEach(datasets,function(value,key){if(uniqueid===key){dataset=value;}
return false;});return dataset;},isChartSortable:function(chartType){return!this.isRangeChart(chartType);},isRangeChart:function(chartType){return['arearange','areasplinerange','columnrange'].indexOf(chartType)>-1;},getAllTimescales:function(){return getAvailableTimescalesFromPrecision('minute','datetime',true);},getAvailableX:function(datasetid,i){var that=this;if(typeof i==="undefined"){return availableX[datasetid];}
return availableX[datasetid][i];},getAvailableBreakDowns:function(datasetid,currentX){if(!currentX){return[];}
var xIsDatetime=(['date','datetime'].indexOf(this.getFieldType(datasetid,currentX))!==-1);var a=[];for(var i=0;i<availableX[datasetid].length;i++){if(availableX[datasetid][i].name!==currentX){if(!xIsDatetime||['date','datetime'].indexOf(this.getFieldType(datasetid,availableX[datasetid][i].name))===-1){a.push({label:availableX[datasetid][i].label,name:availableX[datasetid][i].name});}}}
return a;},getAvailableY:function(datasetid,i){if(typeof i==="undefined")
return availableY[datasetid];return availableY[datasetid][i];},getTimescales:function(datasetid,fieldName,advanced){var precision;var field;for(var i=0;i<fields[datasetid].length;i++){if(fields[datasetid][i].name===fieldName){field=fields[datasetid][i];break;}}
if(!field){return;}
if(field.annotations){for(var annotation=0;annotation<field.annotations.length;annotation++){if(field.annotations[annotation].name=='timeserie_precision'){precision=field.annotations[annotation].args[0];break;}}}
return getAvailableTimescalesFromPrecision(precision,field.type,advanced);},getDatasetId:function(context){return(context.domain||D4CCurrentDomain.domainId)+"."+context.dataset.datasetid;},init:function(context,limitToTimeSeries,force){if(typeof force==="undefined"){force=false;}
var availableX=[],availableY=[];var datasetid=this.getDatasetId(context);if(!force&&!!(datasetid in initialized)){return;}
fields[datasetid]=context.dataset.fields;var numericalXs=[];for(var i=0;i<fields[datasetid].length;i++){var field=fields[datasetid][i];if(field.type=='int'||field.type=='double'){availableY.push(field);}
if(field.type=='datetime'||field.type=='date'){availableX.unshift(field);}else if(field.type=='double'||field.type=='int'){numericalXs.push(field);}else{if(field.annotations){for(var a=0;a<field.annotations.length;a++){var anno=field.annotations[a];if(anno.name==='facet'||anno.name==='analyse'){availableX.push(field);}}}}}
availableX=availableX.concat(numericalXs);this.setAvailableX(datasetid,availableX);this.setAvailableY(datasetid,availableY);initialized[datasetid]=true;datasets[datasetid]=context.dataset;this.load(datasetid);},isInitialized:function(datasetid){if(datasetid===''){return!!(initialized.length);}else{return!!(datasetid in initialized);}},load:function(datasetid){if(callbacks[datasetid]){for(var i=0;i<callbacks[datasetid].length;i++){callbacks[datasetid][i]();}}
callbacks[datasetid]=[];var callback;if(callbacks['']){while(callbacks[''].length){callback=callbacks[''].pop();setTimeout(callback);}}},onLoad:function(datasetid,f){if(typeof datasetid==="function"){f=datasetid;datasetid='';}
if(this.isInitialized(datasetid)){f();}else{if(!(datasetid in callbacks)){callbacks[datasetid]=[];}
if(callbacks[datasetid].indexOf(f)<0){callbacks[datasetid].push(f);}}},setAvailableX:function(datasetid,x){availableX[datasetid]=x;},setAvailableY:function(datasetid,y){availableY[datasetid]=y;},resolvePosition:function(position){if(isNullOrUndefined(position)){position="center";}
if(!(position in positions)){position="center";}
return positions[position];},getPieChartPositions:function(){return $.map(positions,function(v,k){return k;});},getDefaultColors:function(){return defaultColors;},getDefaultColor:function(currentColor,serieType,breakdown,index){return colorScale.getDefaultColor(currentColor,this.getAllowedColors(serieType,breakdown),index);},getAllowedColors:function(serietype,breakdown){var allowedColors=[];if(breakdown||this.isMultiColorChart(serietype)){allowedColors.push('range');}
if(!breakdown&&!this.isMultiColorChart(serietype)){allowedColors.push('single');}
return allowedColors;},getAvailableChartTypes:function(datasetid,stacked){var availableChartTypes=[];if(datasets[datasetid]){for(var i=0;i<availableCharts.length;i++){if((stacked&&['column','area','areaspline','line','spline','bar','polar'].indexOf(availableCharts[i].type)!==-1)||!stacked){if(typeof availableCharts[i].filter==='undefined'){availableChartTypes.push(availableCharts[i]);}else if(datasets[datasetid][availableCharts[i].filter]()){availableChartTypes.push(availableCharts[i]);}}}}
return availableChartTypes;},getSerieTemplate:function(){return angular.copy({});},setChartDefaultValues:function(datasetid,chart,conservative,advanced){var cumulatedQueriesTimescale='',xType,i;if(typeof conservative==="undefined"){conservative=false;}
if(typeof advanced==="undefined"){advanced=false;}
for(i=0;i<chart.queries.length;i++){xType=this.getFieldType(datasetid,chart.queries[i].xAxis);if(chart.queries[i].timescale&&(xType==='date'||xType==="datetime")){cumulatedQueriesTimescale=chart.queries[i].timescale;}}
if(!cumulatedQueriesTimescale){chart.timescale='';}else if(!chart.timescale&&advanced){chart.timescale=cumulatedQueriesTimescale;}
if(chart.timescale){for(i=0;i<chart.queries.length;i++){if(!chart.queries[i].timescale){chart.queries[i].timescale=chart.timescale;}}}
if(!chart.singleAxis){delete(chart.singleAxisLabel);delete(chart.singleAxisScale);delete(chart.yRangeMin);delete(chart.yRangeMax);}
if(typeof chart.displayLegend==="undefined"){chart.displayLegend=true;}
if(!conservative){delete chart.xLabel;}},setDefaultQueryValues:function(datasetid,query,advancedFeatures,dontTouchMaxpoints,globalTimescale,conservative){if(!query){query={};}
var searchOptions={};var defaultX=searchOptions.x||this.getAvailableX(datasetid,0).name;var defaultMaxpoints=50;var defaultTimescale='';if(!query.xAxis){query.xAxis=defaultX;}
if(this.getFieldType(datasetid,query.xAxis)=='date'||this.getFieldType(datasetid,query.xAxis)=='datetime'){defaultMaxpoints='';defaultTimescale=searchOptions.timescale||'year';}
if(typeof query.maxpoints==="undefined"){query.maxpoints=defaultMaxpoints;}
if(!query.charts){query.charts=[];}
var xAxis=query.xAxis;var xType=this.getFieldType(datasetid,xAxis);if(xType=='date'||xType=='datetime'){if(!query.timescale||this.getTimescales(datasetid,xAxis,advancedFeatures).map(function(t){return t.name;}).indexOf(query.timescale)===-1){query.timescale='year';if(advancedFeatures&&globalTimescale){query.timescale=globalTimescale;}else{query.timescale='year';}}}else{if(query.timescale){query.timescale='';}}
if(query.seriesBreakdown===xAxis){query.seriesBreakdown='';query.seriesBreakdownTimescale='';}
var forceBreakdownRemoval=false;for(var i=0;i<query.charts.length;i++){if(['treemap','pie'].indexOf(query.charts[i].type)!==-1){forceBreakdownRemoval=true;}}
if(forceBreakdownRemoval){query.seriesBreakdown='';query.seriesBreakdownTimescale='';}
if(!query.seriesBreakdown&&query.charts.length<2){delete query.stacked;}
if(!query.sort||query.seriesBreakdown){query.sort='';}},setSerieDefaultValues:function(datasetid,chart,xAxis,conservative){var i,subsets;if(typeof xAxis==="undefined"){return;}
var availableY=this.getAvailableY(datasetid);if(!chart.type){chart.type='column';if(xAxis&&(this.getFieldType(datasetid,xAxis)=='date'||this.getFieldType(datasetid,xAxis)=='datetime')){chart.type='line';}}
if(!chart.func){chart.func=availableY.length>0?'AVG':'COUNT';}
if(typeof chart.expr!=="undefined"&&typeof chart.yAxis==="undefined"){chart.yAxis=chart.expr;delete chart.expr;}
if(typeof chart.yAxis==="undefined"||chart.yAxis===""){if(availableY.length===0&&['COUNT','CONSTANT','CUSTOM'].indexOf(chart.func)===-1){chart.func='COUNT';}
if(!conservative&&['COUNT','CONSTANT','CUSTOM'].indexOf(chart.func)===-1){chart.yAxis=availableY[0].name;}}else{if(!conservative&&['COUNT','CONSTANT','CUSTOM'].indexOf(chart.func)===-1){if($.grep(availableY,function(y){return y.name===chart.yAxis;}).length===0){chart.yAxis=availableY[0].name;}}}
if(chart.type&&this.isRangeChart(chart.type)){chart.func='COUNT';subsets=[5,95];if(!chart.charts){chart.charts=[{func:'MIN',yAxis:chart.yAxis},{func:'MAX',yAxis:chart.yAxis}];}
if(chart.charts.length===5){chart.charts[1]=angular.copy(chart.charts[4]);chart.charts.splice(2,3);}
for(i=0;i<2;i++){if(typeof chart.charts[i].yAxis==="undefined"||chart.charts[i].yAxis===""){chart.charts[i].yAxis=chart.charts[i].expr||chart.yAxis;delete chart.charts[i].expr;}
if(chart.charts[i].func==='QUANTILES'&&(chart.charts[i].subsets===""||typeof chart.charts[i].subsets==="undefined")){chart.charts[i].subsets=subsets[i];}
if(chart.charts[i].func!=='QUANTILES'&&chart.charts[i].subsets){delete chart.charts[i].subsets;}}}else if(chart.type&&chart.type==='boxplot'){chart.func='COUNT';subsets=[1,25,50,75,100];if(!chart.charts){chart.charts=[];}
if(chart.charts.length===2){chart.charts[4]=angular.copy(chart.charts[1]);chart.charts[1]=undefined;}
if(typeof chart.charts[0]==="undefined"){chart.charts[0]={func:'MIN',yAxis:chart.yAxis};}
for(i=1;i<4;i++){if(typeof chart.charts[i]==="undefined"){chart.charts[i]={func:'QUANTILES',yAxis:chart.yAxis,subsets:subsets[i]};}}
if(typeof chart.charts[4]==="undefined"){chart.charts[4]={func:'MAX',yAxis:chart.yAxis};}
for(i=0;i<5;i++){if(typeof chart.charts[i].yAxis==="undefined"||chart.charts[i].yAxis===""){chart.charts[i].yAxis=chart.charts[i].expr||chart.charts[i].yAxis||chart.yAxis;delete chart.charts[i].expr;}
if(chart.charts[i].func==='QUANTILES'&&(chart.charts[i].subsets===""||typeof chart.charts[i].subsets==="undefined")){chart.charts[i].subsets=subsets[i];}
if(chart.charts[i].func!=='QUANTILES'&&chart.charts[i].subsets){delete chart.charts[i].subsets;}}}else{if(chart.charts){delete chart.charts;}
if(chart.func==='QUANTILES'){if(!chart.subsets){chart.subsets=50;}}else{if(chart.subsets){delete chart.subsets;}}}
if(chart.type==="pie"&&!chart.position){chart.position="center";}
if(chart.type!=='column'&&chart.type!=='bar'&&chart.displayStackValues){chart.displayStackValues=false;}
if(typeof chart.scientificDisplay==="undefined"){chart.scientificDisplay=true;}
delete chart.yLabel;delete chart.extras;},setSerieDefaultColors:function(serie,breakdown,index){serie.color=this.getDefaultColor(serie.color,serie.type,breakdown,index);},getXLabel:function(datasetid,xAxis,timescale,precision){var xType=this.getFieldType(datasetid,xAxis);var xLabel=this.getFieldLabel(datasetid,xAxis);if((xType==='date'||xType==='datetime')&&timescale){return xLabel+' ('+timescales_label[timescale]+')';}else{return xLabel;}},getYLabel:function(datasetid,chart){if(chart.yLabelOverride){return chart.yLabelOverride;}else{if(this.isRangeChart(chart.type)){return this.getYLabel(datasetid,chart.charts[0])+" / "+this.getYLabel(datasetid,chart.charts[1]);}else if(chart.type==='boxplot'){return translate('Boxplot');}else{var funcLabel=AggregationHelper.getFunctionLabel(chart.func);var nameY=chart.yAxis||chart.expr;var possibleYAxis=$.grep(this.getAvailableY(datasetid),function(y){return y.name==nameY;});if(possibleYAxis.length>0&&chart.func!=="COUNT"&&chart.func!=="CONSTANT"&&chart.func!=="CUSTOM"){return funcLabel+' '+possibleYAxis[0].label;}else{return funcLabel;}}}},getField:function(datasetid,fieldName){if(!fields[datasetid])return null;for(var i=0;i<fields[datasetid].length;i++){var field=fields[datasetid][i];if(field.name==fieldName){return field;}}
return undefined;},getFieldLabel:function(datasetid,fieldName){var field=this.getField(datasetid,fieldName);if(!field){return field;}
return field.label;},getFieldType:function(datasetid,fieldName){var field=this.getField(datasetid,fieldName);if(!field){return field;}
return field.type;},getFieldUnit:function(datasetid,fieldName){var field=this.getField(datasetid,fieldName);if(field&&field.annotations){for(var i=0;i<field.annotations.length;i++){if(field.annotations[i].name==="unit"){return field.annotations[i].args[0];}}
return field.annotations.unit;}
return false;},getDecimals:function(datasetid,fieldName){var field=this.getField(datasetid,fieldName);if(field&&field.annotations){for(var i=0;i<field.annotations.length;i++){if(field.annotations[i].name==="decimals"){return field.annotations[i].args[0];}}
return false;}
return false;},getAvailableFunctions:function(datasetid){return AggregationHelper.getAvailableFunctions(this.getAvailableY(datasetid).length);},allowThresholds:function(type){return['column','bar','scatter'].indexOf(type)!==-1;},isMultiColorChart:function(type){return['pie','treemap','funnel','polar'].indexOf(type)!==-1;}};}]);}());;var mod=angular.module('infinite-scroll',[]);mod.directive('infiniteScroll',['$rootScope','$window','$timeout',function($rootScope,$window,$timeout){return{link:function(scope,elem,attrs){$timeout(function(){$window=angular.element($window);var $scrollParent,checkWhenEnabled,elementTop,handler,scrollDistance,scrollEnabled,parentTop;$scrollParent=elem.parents().filter(function(){return/(auto|scroll)/.test($.css(this,'overflow')+$.css(this,'overflow-y'));}).eq(0);if($scrollParent.length===0){$scrollParent=$window;}
if(attrs.infiniteScrollSelf!=null){$scrollParent=elem;}
scrollDistance=0;if(attrs.infiniteScrollDistance!=null){scope.$watch(attrs.infiniteScrollDistance,function(value){return scrollDistance=parseFloat(value,10);});}
scrollEnabled=true;checkWhenEnabled=false;if(attrs.infiniteScrollDisabled!=null){scope.$watch(attrs.infiniteScrollDisabled,function(value){scrollEnabled=!value;if(scrollEnabled&&checkWhenEnabled){checkWhenEnabled=false;return handler();}});}
parentTop=$scrollParent!==$window?$scrollParent.position().top:0;elementTop=elem.position().top-parentTop;handler=function(){var elementBottom,remaining,scrollBottom,shouldScroll;if(elem==$scrollParent){remaining=elem[0].scrollHeight-elem.scrollTop()-elem.height();shouldScroll=remaining<=(elem[0].scrollHeight*scrollDistance);}else{elementBottom=elementTop+elem.height();scrollBottom=$scrollParent.height()+$scrollParent.scrollTop();remaining=elementBottom-scrollBottom;shouldScroll=remaining<=($scrollParent.height()*scrollDistance);}
if(shouldScroll&&scrollEnabled){if($rootScope.$$phase){return scope.$eval(attrs.infiniteScroll);}else{return scope.$apply(attrs.infiniteScroll);}}else if(shouldScroll){return checkWhenEnabled=true;}};$scrollParent.on('scroll',handler);scope.$on('$destroy',function(){return $scrollParent.off('scroll',handler);});return $timeout((function(){if(attrs.infiniteScrollImmediateCheck){if(scope.$eval(attrs.infiniteScrollImmediateCheck)){return handler();}}else{return handler();}}),0);},0);}};}]);;angular.module('gettext',[]);angular.module('gettext').constant('gettext',function(str){return str;});angular.module('gettext').service('translate',["gettextCatalog",function(gettextCatalog){return function(input){return gettextCatalog.getString(input);}}]);angular.module('gettext').service('translatePlural',["gettextCatalog",function(gettextCatalog){return function(count,string,stringPlural){var scope={'$count':count};return gettextCatalog.getPlural(count,string,stringPlural,scope);}}]);angular.module('gettext').factory('gettextCatalog',["gettextPlurals","gettextFallbackLanguage","$http","$cacheFactory","$interpolate","$rootScope",function(gettextPlurals,gettextFallbackLanguage,$http,$cacheFactory,$interpolate,$rootScope){var catalog;var noContext='$$noContext';var test='<span id="test" title="test" class="tested">test</span>';var isHTMLModified=(angular.element('<span>'+test+'</span>').html()!==test);var prefixDebug=function(string){if(catalog.debug&&catalog.currentLanguage!==catalog.baseLanguage){return catalog.debugPrefix+string;}else{return string;}};var addTranslatedMarkers=function(string){if(catalog.showTranslatedMarkers){return catalog.translatedMarkerPrefix+string+catalog.translatedMarkerSuffix;}else{return string;}};function broadcastUpdated(){$rootScope.$broadcast('gettextLanguageChanged');}
catalog={debug:false,debugPrefix:'[MISSING]: ',showTranslatedMarkers:false,translatedMarkerPrefix:'[',translatedMarkerSuffix:']',strings:{},baseLanguage:'en',currentLanguage:'en',cache:$cacheFactory('strings'),setCurrentLanguage:function(lang){this.currentLanguage=lang;broadcastUpdated();},getCurrentLanguage:function(){return this.currentLanguage;},setStrings:function(language,strings){if(!this.strings[language]){this.strings[language]={};}
for(var key in strings){var val=strings[key];if(isHTMLModified){key=angular.element('<span>'+key+'</span>').html();}
if(angular.isString(val)||angular.isArray(val)){var obj={};obj[noContext]=val;val=obj;}
var defaultPlural=gettextPlurals(language,1);for(var context in val){var str=val[context];if(!angular.isArray(str)){val[context]=[];val[context][defaultPlural]=str;}}
this.strings[language][key]=val;}
broadcastUpdated();},getStringFormFor:function(language,string,n,context){if(!language){return null;}
var stringTable=this.strings[language]||{};var contexts=stringTable[string]||{};var plurals=contexts[context||noContext]||[];return plurals[gettextPlurals(language,n)];},getString:function(string,scope,context){var fallbackLanguage=gettextFallbackLanguage(this.currentLanguage);string=this.getStringFormFor(this.currentLanguage,string,1,context)||this.getStringFormFor(fallbackLanguage,string,1,context)||prefixDebug(string);string=scope?$interpolate(string)(scope):string;return addTranslatedMarkers(string);},getPlural:function(n,string,stringPlural,scope,context){var fallbackLanguage=gettextFallbackLanguage(this.currentLanguage);string=this.getStringFormFor(this.currentLanguage,string,n,context)||this.getStringFormFor(fallbackLanguage,string,n,context)||prefixDebug(n===1?string:stringPlural);if(scope){scope.$count=n;string=$interpolate(string)(scope);}
return addTranslatedMarkers(string);},loadRemote:function(url){return $http({method:'GET',url:url,cache:catalog.cache}).then(function(response){var data=response.data;for(var lang in data){catalog.setStrings(lang,data[lang]);}
return response;});}};return catalog;}]);angular.module('gettext').directive('translate',["gettextCatalog","$parse","$animate","$compile","$window",function(gettextCatalog,$parse,$animate,$compile,$window){var trim=(function(){if(!String.prototype.trim){return function(value){return(typeof value==='string')?value.replace(/^\s*/,'').replace(/\s*$/,''):value;};}
return function(value){return(typeof value==='string')?value.trim():value;};})();var compact=(function(){return function(value){if(typeof value!=='string'){return value;}
value=trim(value);value=value.replace("\n"," ");while(value.indexOf("  ")>-1){value=value.replace("  "," ");}
return value;};})();function assert(condition,missing,found){if(!condition){throw new Error('You should add a '+missing+' attribute whenever you add a '+found+' attribute.');}}
var msie=parseInt((/msie (\d+)/.exec(angular.lowercase($window.navigator.userAgent))||[])[1],10);return{restrict:'AE',compile:function compile(element,attrs){assert(!attrs.translatePlural||attrs.translateN,'translate-n','translate-plural');assert(!attrs.translateN||attrs.translatePlural,'translate-plural','translate-n');var msgid,attrToTranslate;if(attrs.translate){attrToTranslate=attrs.$normalize(attrs.translate)
msgid=compact(attrs[attrToTranslate]);}else{msgid=compact(element.html());}
var translatePlural=attrs.translatePlural;var translateContext=attrs.translateContext;if(msie<=8){if(msgid.slice(-13)==='<!--IE fix-->'){msgid=msgid.slice(0,-13);}}
return{post:function(scope,element,attrs){var countFn=$parse(attrs.translateN);var pluralScope=null;var linking=true;function update(){var translated;if(translatePlural){scope=pluralScope||(pluralScope=scope.$new());scope.$count=countFn(scope);translated=gettextCatalog.getPlural(scope.$count,msgid,translatePlural,null,translateContext);}else{translated=gettextCatalog.getString(msgid,null,translateContext);}
if(attrs.translate){if(element.attr(attrs.translate)===translated){return;}
element.attr(attrs.translate,translated);}else{var oldContents=element.contents();if(oldContents.length===0){return;}
if(translated===compact(oldContents.html())){if(linking){$compile(oldContents)(scope);}
return;}
var newWrapper=angular.element('<span>'+translated+'</span>');$compile(newWrapper.contents())(scope);var newContents=newWrapper.contents();$animate.enter(newContents,element);$animate.leave(oldContents);}}
if(attrs.translateN){scope.$watch(attrs.translateN,update);}
scope.$on('gettextLanguageChanged',update);update();linking=false;}};}};}]);angular.module("gettext").factory("gettextFallbackLanguage",function(){var cache={};var pattern=/([^_]+)_[^_]+$/;return function(langCode){if(cache[langCode]){return cache[langCode];}
var matches=pattern.exec(langCode);if(matches){cache[langCode]=matches[1];return matches[1];}
return null;};});angular.module('gettext').filter('translate',["gettextCatalog",function(gettextCatalog){function filter(input,context){return gettextCatalog.getString(input,null,context);}
filter.$stateful=true;return filter;}]);angular.module("gettext").factory("gettextPlurals",function(){return function(langCode,n){switch(langCode){case"ay":case"bo":case"cgg":case"dz":case"fa":case"id":case"ja":case"jbo":case"ka":case"kk":case"km":case"ko":case"ky":case"lo":case"ms":case"my":case"sah":case"su":case"th":case"tt":case"ug":case"vi":case"wo":case"zh":return 0;case"is":return(n%10!=1||n%100==11)?1:0;case"jv":return n!=0?1:0;case"mk":return n==1||n%10==1?0:1;case"ach":case"ak":case"am":case"arn":case"br":case"fil":case"fr":case"gun":case"ln":case"mfe":case"mg":case"mi":case"oc":case"pt_BR":case"tg":case"ti":case"tr":case"uz":case"wa":case"zh":return n>1?1:0;case"lv":return(n%10==1&&n%100!=11?0:n!=0?1:2);case"lt":return(n%10==1&&n%100!=11?0:n%10>=2&&(n%100<10||n%100>=20)?1:2);case"be":case"bs":case"hr":case"ru":case"sr":case"uk":return(n%10==1&&n%100!=11?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2);case"mnk":return(n==0?0:n==1?1:2);case"ro":return(n==1?0:(n==0||(n%100>0&&n%100<20))?1:2);case"pl":return(n==1?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2);case"cs":case"sk":return(n==1)?0:(n>=2&&n<=4)?1:2;case"sl":return(n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0);case"mt":return(n==1?0:n==0||(n%100>1&&n%100<11)?1:(n%100>10&&n%100<20)?2:3);case"gd":return(n==1||n==11)?0:(n==2||n==12)?1:(n>2&&n<20)?2:3;case"cy":return(n==1)?0:(n==2)?1:(n!=8&&n!=11)?2:3;case"kw":return(n==1)?0:(n==2)?1:(n==3)?2:3;case"ga":return n==1?0:n==2?1:n<7?2:n<11?3:4;case"ar":return(n==0?0:n==1?1:n==2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5);default:return n!=1?1:0;}}});;(function($){'use strict';var definer=$('<div dir="rtl" style="font-size: 14px; width: 4px; height: 1px; position: absolute; top: -1000px; overflow: scroll">ABCD</div>'),type='reverse';definer.appendTo('body');if(definer.scrollLeft>0){type='default';}else{definer.scrollLeft=1;if(definer.scrollLeft===0){type='negative';}}
$(definer).remove();$.support.rtlScrollType=type;}(jQuery));;(function(root){var jstz=(function(){'use strict';var HEMISPHERE_SOUTH='s',get_date_offset=function(date){var offset=-date.getTimezoneOffset();return(offset!==null?offset:0);},get_date=function(year,month,date){var d=new Date();if(year!==undefined){d.setFullYear(year);}
d.setMonth(month);d.setDate(date);return d;},get_january_offset=function(year){return get_date_offset(get_date(year,0,2));},get_june_offset=function(year){return get_date_offset(get_date(year,5,2));},date_is_dst=function(date){var is_southern=date.getMonth()>7,base_offset=is_southern?get_june_offset(date.getFullYear()):get_january_offset(date.getFullYear()),date_offset=get_date_offset(date),is_west=base_offset<0,dst_offset=base_offset-date_offset;if(!is_west&&!is_southern){return dst_offset<0;}
return dst_offset!==0;},lookup_key=function(){var january_offset=get_january_offset(),june_offset=get_june_offset(),diff=january_offset-june_offset;if(diff<0){return january_offset+",1";}else if(diff>0){return june_offset+",1,"+HEMISPHERE_SOUTH;}
return january_offset+",0";},determine=function(){var key=lookup_key();return new jstz.TimeZone(jstz.olson.timezones[key]);},dst_start_for=function(tz_name){var ru_pre_dst_change=new Date(2010,6,15,1,0,0,0),dst_starts={'America/Denver':new Date(2011,2,13,3,0,0,0),'America/Mazatlan':new Date(2011,3,3,3,0,0,0),'America/Chicago':new Date(2011,2,13,3,0,0,0),'America/Mexico_City':new Date(2011,3,3,3,0,0,0),'America/Asuncion':new Date(2012,9,7,3,0,0,0),'America/Santiago':new Date(2012,9,3,3,0,0,0),'America/Campo_Grande':new Date(2012,9,21,5,0,0,0),'America/Montevideo':new Date(2011,9,2,3,0,0,0),'America/Sao_Paulo':new Date(2011,9,16,5,0,0,0),'America/Los_Angeles':new Date(2011,2,13,8,0,0,0),'America/Santa_Isabel':new Date(2011,3,5,8,0,0,0),'America/Havana':new Date(2012,2,10,2,0,0,0),'America/New_York':new Date(2012,2,10,7,0,0,0),'Europe/Helsinki':new Date(2013,2,31,5,0,0,0),'Pacific/Auckland':new Date(2011,8,26,7,0,0,0),'America/Halifax':new Date(2011,2,13,6,0,0,0),'America/Goose_Bay':new Date(2011,2,13,2,1,0,0),'America/Miquelon':new Date(2011,2,13,5,0,0,0),'America/Godthab':new Date(2011,2,27,1,0,0,0),'Europe/Moscow':ru_pre_dst_change,'Asia/Amman':new Date(2013,2,29,1,0,0,0),'Asia/Beirut':new Date(2013,2,31,2,0,0,0),'Asia/Damascus':new Date(2013,3,6,2,0,0,0),'Asia/Jerusalem':new Date(2013,2,29,5,0,0,0),'Asia/Yekaterinburg':ru_pre_dst_change,'Asia/Omsk':ru_pre_dst_change,'Asia/Krasnoyarsk':ru_pre_dst_change,'Asia/Irkutsk':ru_pre_dst_change,'Asia/Yakutsk':ru_pre_dst_change,'Asia/Vladivostok':ru_pre_dst_change,'Asia/Baku':new Date(2013,2,31,4,0,0),'Asia/Yerevan':new Date(2013,2,31,3,0,0),'Asia/Kamchatka':ru_pre_dst_change,'Asia/Gaza':new Date(2010,2,27,4,0,0),'Africa/Cairo':new Date(2010,4,1,3,0,0),'Europe/Minsk':ru_pre_dst_change,'Pacific/Apia':new Date(2010,10,1,1,0,0,0),'Pacific/Fiji':new Date(2010,11,1,0,0,0),'Australia/Perth':new Date(2008,10,1,1,0,0,0)};return dst_starts[tz_name];};return{determine:determine,date_is_dst:date_is_dst,dst_start_for:dst_start_for};}());jstz.TimeZone=function(tz_name){'use strict';var AMBIGUITIES={'America/Denver':['America/Denver','America/Mazatlan'],'America/Chicago':['America/Chicago','America/Mexico_City'],'America/Santiago':['America/Santiago','America/Asuncion','America/Campo_Grande'],'America/Montevideo':['America/Montevideo','America/Sao_Paulo'],'Asia/Beirut':['Asia/Amman','Asia/Jerusalem','Asia/Beirut','Europe/Helsinki','Asia/Damascus'],'Pacific/Auckland':['Pacific/Auckland','Pacific/Fiji'],'America/Los_Angeles':['America/Los_Angeles','America/Santa_Isabel'],'America/New_York':['America/Havana','America/New_York'],'America/Halifax':['America/Goose_Bay','America/Halifax'],'America/Godthab':['America/Miquelon','America/Godthab'],'Asia/Dubai':['Europe/Moscow'],'Asia/Dhaka':['Asia/Yekaterinburg'],'Asia/Jakarta':['Asia/Omsk'],'Asia/Shanghai':['Asia/Krasnoyarsk','Australia/Perth'],'Asia/Tokyo':['Asia/Irkutsk'],'Australia/Brisbane':['Asia/Yakutsk'],'Pacific/Noumea':['Asia/Vladivostok'],'Pacific/Tarawa':['Asia/Kamchatka','Pacific/Fiji'],'Pacific/Tongatapu':['Pacific/Apia'],'Asia/Baghdad':['Europe/Minsk'],'Asia/Baku':['Asia/Yerevan','Asia/Baku'],'Africa/Johannesburg':['Asia/Gaza','Africa/Cairo']},timezone_name=tz_name,ambiguity_check=function(){var ambiguity_list=AMBIGUITIES[timezone_name],length=ambiguity_list.length,i=0,tz=ambiguity_list[0];for(;i<length;i+=1){tz=ambiguity_list[i];if(jstz.date_is_dst(jstz.dst_start_for(tz))){timezone_name=tz;return;}}},is_ambiguous=function(){return typeof(AMBIGUITIES[timezone_name])!=='undefined';};if(is_ambiguous()){ambiguity_check();}
return{name:function(){return timezone_name;}};};jstz.olson={};jstz.olson.timezones={'-720,0':'Pacific/Majuro','-660,0':'Pacific/Pago_Pago','-600,1':'America/Adak','-600,0':'Pacific/Honolulu','-570,0':'Pacific/Marquesas','-540,0':'Pacific/Gambier','-540,1':'America/Anchorage','-480,1':'America/Los_Angeles','-480,0':'Pacific/Pitcairn','-420,0':'America/Phoenix','-420,1':'America/Denver','-360,0':'America/Guatemala','-360,1':'America/Chicago','-360,1,s':'Pacific/Easter','-300,0':'America/Bogota','-300,1':'America/New_York','-270,0':'America/Caracas','-240,1':'America/Halifax','-240,0':'America/Santo_Domingo','-240,1,s':'America/Santiago','-210,1':'America/St_Johns','-180,1':'America/Godthab','-180,0':'America/Argentina/Buenos_Aires','-180,1,s':'America/Montevideo','-120,0':'America/Noronha','-120,1':'America/Noronha','-60,1':'Atlantic/Azores','-60,0':'Atlantic/Cape_Verde','0,0':'UTC','0,1':'Europe/London','60,1':'Europe/Berlin','60,0':'Africa/Lagos','60,1,s':'Africa/Windhoek','120,1':'Asia/Beirut','120,0':'Africa/Johannesburg','180,0':'Asia/Baghdad','180,1':'Europe/Moscow','210,1':'Asia/Tehran','240,0':'Asia/Dubai','240,1':'Asia/Baku','270,0':'Asia/Kabul','300,1':'Asia/Yekaterinburg','300,0':'Asia/Karachi','330,0':'Asia/Kolkata','345,0':'Asia/Kathmandu','360,0':'Asia/Dhaka','360,1':'Asia/Omsk','390,0':'Asia/Rangoon','420,1':'Asia/Krasnoyarsk','420,0':'Asia/Jakarta','480,0':'Asia/Shanghai','480,1':'Asia/Irkutsk','525,0':'Australia/Eucla','525,1,s':'Australia/Eucla','540,1':'Asia/Yakutsk','540,0':'Asia/Tokyo','570,0':'Australia/Darwin','570,1,s':'Australia/Adelaide','600,0':'Australia/Brisbane','600,1':'Asia/Vladivostok','600,1,s':'Australia/Sydney','630,1,s':'Australia/Lord_Howe','660,1':'Asia/Kamchatka','660,0':'Pacific/Noumea','690,0':'Pacific/Norfolk','720,1,s':'Pacific/Auckland','720,0':'Pacific/Tarawa','765,1,s':'Pacific/Chatham','780,0':'Pacific/Tongatapu','780,1,s':'Pacific/Apia','840,0':'Pacific/Kiritimati'};if(typeof exports!=='undefined'){exports.jstz=jstz;}else{root.jstz=jstz;}})(this);;;window.Modernizr=(function(window,document,undefined){var version='2.8.3',Modernizr={},enableClasses=true,docElement=document.documentElement,mod='modernizr',modElem=document.createElement(mod),mStyle=modElem.style,inputElem,toString={}.toString,ns={'svg':'http://www.w3.org/2000/svg'},tests={},inputs={},attrs={},classes=[],slice=classes.slice,featureName,_hasOwnProperty=({}).hasOwnProperty,hasOwnProp;if(!is(_hasOwnProperty,'undefined')&&!is(_hasOwnProperty.call,'undefined')){hasOwnProp=function(object,property){return _hasOwnProperty.call(object,property);};}
else{hasOwnProp=function(object,property){return((property in object)&&is(object.constructor.prototype[property],'undefined'));};}
if(!Function.prototype.bind){Function.prototype.bind=function bind(that){var target=this;if(typeof target!="function"){throw new TypeError();}
var args=slice.call(arguments,1),bound=function(){if(this instanceof bound){var F=function(){};F.prototype=target.prototype;var self=new F();var result=target.apply(self,args.concat(slice.call(arguments)));if(Object(result)===result){return result;}
return self;}else{return target.apply(that,args.concat(slice.call(arguments)));}};return bound;};}
function setCss(str){mStyle.cssText=str;}
function setCssAll(str1,str2){return setCss(prefixes.join(str1+';')+(str2||''));}
function is(obj,type){return typeof obj===type;}
function contains(str,substr){return!!~(''+str).indexOf(substr);}
function testDOMProps(props,obj,elem){for(var i in props){var item=obj[props[i]];if(item!==undefined){if(elem===false)return props[i];if(is(item,'function')){return item.bind(elem||obj);}
return item;}}
return false;}
tests['geolocation']=function(){return'geolocation'in navigator;};tests['svg']=function(){return!!document.createElementNS&&!!document.createElementNS(ns.svg,'svg').createSVGRect;};tests['inlinesvg']=function(){var div=document.createElement('div');div.innerHTML='<svg/>';return(div.firstChild&&div.firstChild.namespaceURI)==ns.svg;};for(var feature in tests){if(hasOwnProp(tests,feature)){featureName=feature.toLowerCase();Modernizr[featureName]=tests[feature]();classes.push((Modernizr[featureName]?'':'no-')+featureName);}}
Modernizr.addTest=function(feature,test){if(typeof feature=='object'){for(var key in feature){if(hasOwnProp(feature,key)){Modernizr.addTest(key,feature[key]);}}}else{feature=feature.toLowerCase();if(Modernizr[feature]!==undefined){return Modernizr;}
test=typeof test=='function'?test():test;if(typeof enableClasses!=="undefined"&&enableClasses){docElement.className+=' '+(test?'':'no-')+feature;}
Modernizr[feature]=test;}
return Modernizr;};setCss('');modElem=inputElem=null;;(function(window,document){var version='3.7.0';var options=window.html5||{};var reSkip=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;var saveClones=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;var supportsHtml5Styles;var expando='_html5shiv';var expanID=0;var expandoData={};var supportsUnknownElements;(function(){try{var a=document.createElement('a');a.innerHTML='<xyz></xyz>';supportsHtml5Styles=('hidden'in a);supportsUnknownElements=a.childNodes.length==1||(function(){(document.createElement)('a');var frag=document.createDocumentFragment();return(typeof frag.cloneNode=='undefined'||typeof frag.createDocumentFragment=='undefined'||typeof frag.createElement=='undefined');}());}catch(e){supportsHtml5Styles=true;supportsUnknownElements=true;}}());function addStyleSheet(ownerDocument,cssText){var p=ownerDocument.createElement('p'),parent=ownerDocument.getElementsByTagName('head')[0]||ownerDocument.documentElement;p.innerHTML='x<style>'+cssText+'</style>';return parent.insertBefore(p.lastChild,parent.firstChild);}
function getElements(){var elements=html5.elements;return typeof elements=='string'?elements.split(' '):elements;}
function getExpandoData(ownerDocument){var data=expandoData[ownerDocument[expando]];if(!data){data={};expanID++;ownerDocument[expando]=expanID;expandoData[expanID]=data;}
return data;}
function createElement(nodeName,ownerDocument,data){if(!ownerDocument){ownerDocument=document;}
if(supportsUnknownElements){return ownerDocument.createElement(nodeName);}
if(!data){data=getExpandoData(ownerDocument);}
var node;if(data.cache[nodeName]){node=data.cache[nodeName].cloneNode();}else if(saveClones.test(nodeName)){node=(data.cache[nodeName]=data.createElem(nodeName)).cloneNode();}else{node=data.createElem(nodeName);}
return node.canHaveChildren&&!reSkip.test(nodeName)&&!node.tagUrn?data.frag.appendChild(node):node;}
function createDocumentFragment(ownerDocument,data){if(!ownerDocument){ownerDocument=document;}
if(supportsUnknownElements){return ownerDocument.createDocumentFragment();}
data=data||getExpandoData(ownerDocument);var clone=data.frag.cloneNode(),i=0,elems=getElements(),l=elems.length;for(;i<l;i++){clone.createElement(elems[i]);}
return clone;}
function shivMethd4c(ownerDocument,data){if(!data.cache){data.cache={};data.createElem=ownerDocument.createElement;data.createFrag=ownerDocument.createDocumentFragment;data.frag=data.createFrag();}
ownerDocument.createElement=function(nodeName){if(!html5.shivMethd4c){return data.createElem(nodeName);}
return createElement(nodeName,ownerDocument,data);};ownerDocument.createDocumentFragment=Function('h,f','return function(){'+'var n=f.cloneNode(),c=n.createElement;'+'h.shivMethd4c&&('+
getElements().join().replace(/[\w\-]+/g,function(nodeName){data.createElem(nodeName);data.frag.createElement(nodeName);return'c("'+nodeName+'")';})+');return n}')(html5,data.frag);}
function shivDocument(ownerDocument){if(!ownerDocument){ownerDocument=document;}
var data=getExpandoData(ownerDocument);if(html5.shivCSS&&!supportsHtml5Styles&&!data.hasCSS){data.hasCSS=!!addStyleSheet(ownerDocument,'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}'+'mark{background:#FF0;color:#000}'+'template{display:none}');}
if(!supportsUnknownElements){shivMethd4c(ownerDocument,data);}
return ownerDocument;}
var html5={'elements':options.elements||'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video','version':version,'shivCSS':(options.shivCSS!==false),'supportsUnknownElements':supportsUnknownElements,'shivMethd4c':(options.shivMethd4c!==false),'type':'default','shivDocument':shivDocument,createElement:createElement,createDocumentFragment:createDocumentFragment};window.html5=html5;shivDocument(document);}(this,document));Modernizr._version=version;docElement.className=docElement.className.replace(/(^|\s)no-js(\s|$)/,'$1$2')+
(enableClasses?' js '+classes.join(' '):'');return Modernizr;})(this,this.document);(function(a,b,c){function d(a){return"[object Function]"==o.call(a)}function e(a){return"string"==typeof a}function f(){}function g(a){return!a||"loaded"==a||"complete"==a||"uninitialized"==a}function h(){var a=p.shift();q=1,a?a.t?m(function(){("c"==a.t?B.injectCss:B.injectJs)(a.s,0,a.a,a.x,a.e,1)},0):(a(),h()):q=0}function i(a,c,d,e,f,i,j){function k(b){if(!o&&g(l.readyState)&&(u.r=o=1,!q&&h(),l.onload=l.onreadystatechange=null,b)){"img"!=a&&m(function(){t.removeChild(l)},50);for(var d in y[c])y[c].hasOwnProperty(d)&&y[c][d].onload()}}var j=j||B.errorTimeout,l=b.createElement(a),o=0,r=0,u={t:d,s:c,e:f,a:i,x:j};1===y[c]&&(r=1,y[c]=[]),"object"==a?l.data=c:(l.src=c,l.type=a),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){k.call(this,r)},p.splice(e,0,u),"img"!=a&&(r||2===y[c]?(t.insertBefore(l,s?null:n),m(k,j)):y[c].push(l))}function j(a,b,c,d,f){return q=0,b=b||"j",e(a)?i("c"==b?v:u,a,b,this.i++,c,d,f):(p.splice(this.i++,0,a),1==p.length&&h()),this}function k(){var a=B;return a.loader={load:j,i:0},a}var l=b.documentElement,m=a.setTimeout,n=b.getElementsByTagName("script")[0],o={}.toString,p=[],q=0,r="MozAppearance"in l.style,s=r&&!!b.createRange().compareNode,t=s?l:n.parentNode,l=a.opera&&"[object Opera]"==o.call(a.opera),l=!!b.attachEvent&&!l,u=r?"object":l?"script":"img",v=l?"script":u,w=Array.isArray||function(a){return"[object Array]"==o.call(a)},x=[],y={},z={timeout:function(a,b){return b.length&&(a.timeout=b[0]),a}},A,B;B=function(a){function b(a){var a=a.split("!"),b=x.length,c=a.pop(),d=a.length,c={url:c,origUrl:c,prefixes:a},e,f,g;for(f=0;f<d;f++)g=a[f].split("="),(e=z[g.shift()])&&(c=e(c,g));for(f=0;f<b;f++)c=x[f](c);return c}function g(a,e,f,g,h){var i=b(a),j=i.autoCallback;i.url.split(".").pop().split("?").shift(),i.bypass||(e&&(e=d(e)?e:e[a]||e[g]||e[a.split("/").pop().split("?")[0]]),i.instead?i.instead(a,e,f,g,h):(y[i.url]?i.noexec=!0:y[i.url]=1,f.load(i.url,i.forceCSS||!i.forceJS&&"css"==i.url.split(".").pop().split("?").shift()?"c":c,i.noexec,i.attrs,i.timeout),(d(e)||d(j))&&f.load(function(){k(),e&&e(i.origUrl,h,g),j&&j(i.origUrl,h,g),y[i.url]=2})))}function h(a,b){function c(a,c){if(a){if(e(a))c||(j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}),g(a,j,b,0,h);else if(Object(a)===a)for(n in m=function(){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b}(),a)a.hasOwnProperty(n)&&(!c&&!--m&&(d(j)?j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}:j[n]=function(a){return function(){var b=[].slice.call(arguments);a&&a.apply(this,b),l()}}(k[n])),g(a[n],j,b,n,h))}else!c&&l()}var h=!!a.test,i=a.load||a.both,j=a.callback||f,k=j,l=a.complete||f,m,n;c(h?a.yep:a.nope,!!i),i&&c(i)}var i,j,l=this.yepnope.loader;if(e(a))g(a,0,l,0);else if(w(a))for(i=0;i<a.length;i++)j=a[i],e(j)?g(j,0,l,0):w(j)?B(j):Object(j)===j&&h(j,l);else Object(a)===a&&h(a,l)},B.addPrefix=function(a,b){z[a]=b},B.addFilter=function(a){x.push(a)},B.errorTimeout=1e4,null==b.readyState&&b.addEventListener&&(b.readyState="loading",b.addEventListener("DOMContentLoaded",A=function(){b.removeEventListener("DOMContentLoaded",A,0),b.readyState="complete"},0)),a.yepnope=k(),a.yepnope.executeStack=h,a.yepnope.injectJs=function(a,c,d,e,i,j){var k=b.createElement("script"),l,o,e=e||B.errorTimeout;k.src=a;for(o in d)k.setAttribute(o,d[o]);c=j?h:c||f,k.onreadystatechange=k.onload=function(){!l&&g(k.readyState)&&(l=1,c(),k.onload=k.onreadystatechange=null)},m(function(){l||(l=1,c(1))},e),i?k.onload():n.parentNode.insertBefore(k,n)},a.yepnope.injectCss=function(a,c,d,e,g,i){var e=b.createElement("link"),j,c=i?h:c||f;e.href=a,e.rel="stylesheet",e.type="text/css";for(j in d)e.setAttribute(j,d[j]);g||(n.parentNode.insertBefore(e,n),m(c,0))}})(this,document);Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0));};Modernizr.addTest('cors',!!(window.XMLHttpRequest&&'withCredentials'in new XMLHttpRequest()));;;LazyLoad=(function(doc){var env,head,pending={},pollCount=0,queue={css:[],js:[]},styleSheets=doc.styleSheets;function createNode(name,attrs){var node=doc.createElement(name),attr;for(attr in attrs){if(attrs.hasOwnProperty(attr)){node.setAttribute(attr,attrs[attr]);}}
return node;}
function finish(type){var p=pending[type],callback,urls;if(p){callback=p.callback;urls=p.urls;urls.shift();pollCount=0;if(!urls.length){callback&&callback.call(p.context,p.obj);pending[type]=null;queue[type].length&&load(type);}}}
function getEnv(){var ua=navigator.userAgent;env={async:doc.createElement('script').async===true};(env.webkit=/AppleWebKit\//.test(ua))||(env.ie=/MSIE|Trident/.test(ua))||(env.opera=/Opera/.test(ua))||(env.gecko=/Gecko\//.test(ua))||(env.unknown=true);}
function load(type,urls,callback,obj,context){var _finish=function(){finish(type);},isCSS=type==='css',nodes=[],i,len,node,p,pendingUrls,url;env||getEnv();if(urls){urls=typeof urls==='string'?[urls]:urls.concat();if(isCSS||env.async||env.gecko||env.opera){queue[type].push({urls:urls,callback:callback,obj:obj,context:context});}else{for(i=0,len=urls.length;i<len;++i){queue[type].push({urls:[urls[i]],callback:i===len-1?callback:null,obj:obj,context:context});}}}
if(pending[type]||!(p=pending[type]=queue[type].shift())){return;}
head||(head=doc.head||doc.getElementsByTagName('head')[0]);pendingUrls=p.urls.concat();for(i=0,len=pendingUrls.length;i<len;++i){url=pendingUrls[i];if(isCSS){node=env.gecko?createNode('style'):createNode('link',{href:url,rel:'stylesheet'});}else{node=createNode('script',{src:url});node.async=false;}
node.className='lazyload';node.setAttribute('charset','utf-8');if(env.ie&&!isCSS&&'onreadystatechange'in node&&!('draggable'in node)){node.onreadystatechange=function(){if(/loaded|complete/.test(node.readyState)){node.onreadystatechange=null;_finish();}};}else if(isCSS&&(env.gecko||env.webkit)){if(env.webkit){p.urls[i]=node.href;pollWebKit();}else{node.innerHTML='@import "'+url+'";';pollGecko(node);}}else{node.onload=node.onerror=_finish;}
nodes.push(node);}
for(i=0,len=nodes.length;i<len;++i){head.appendChild(nodes[i]);}}
function pollGecko(node){var hasRules;try{hasRules=!!node.sheet.cssRules;}catch(ex){pollCount+=1;if(pollCount<200){setTimeout(function(){pollGecko(node);},50);}else{hasRules&&finish('css');}
return;}
finish('css');}
function pollWebKit(){var css=pending.css,i;if(css){i=styleSheets.length;while(--i>=0){if(styleSheets[i].href===css.urls[0]){finish('css');break;}}
pollCount+=1;if(css){if(pollCount<200){setTimeout(pollWebKit,50);}else{finish('css');}}}}
return{css:function(urls,callback,obj,context){load('css',urls,callback,obj,context);},js:function(urls,callback,obj,context){load('js',urls,callback,obj,context);}};})(this.document);;(function(undefined){var moment,VERSION="2.7.0",globalScope=typeof global!=='undefined'?global:this,oldGlobalMoment,round=Math.round,i,YEAR=0,MONTH=1,DATE=2,HOUR=3,MINUTE=4,SECOND=5,MILLISECOND=6,languages={},momentProperties={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_tzm:null,_isUTC:null,_offset:null,_pf:null,_lang:null},hasModule=(typeof module!=='undefined'&&module.exports),aspNetJsonRegex=/^\/?Date\((\-?\d+)/i,aspNetTimeSpanJsonRegex=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,isoDurationRegex=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,formattingTokens=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,parseTokenOneOrTwoDigits=/\d\d?/,parseTokenOneToThreeDigits=/\d{1,3}/,parseTokenOneToFourDigits=/\d{1,4}/,parseTokenOneToSixDigits=/[+\-]?\d{1,6}/,parseTokenDigits=/\d+/,parseTokenWord=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,parseTokenTimezone=/Z|[\+\-]\d\d:?\d\d/gi,parseTokenT=/T/i,parseTokenTimestampMs=/[\+\-]?\d+(\.\d{1,3})?/,parseTokenOrdinal=/\d{1,2}/,parseTokenOneDigit=/\d/,parseTokenTwoDigits=/\d\d/,parseTokenThreeDigits=/\d{3}/,parseTokenFourDigits=/\d{4}/,parseTokenSixDigits=/[+-]?\d{6}/,parseTokenSignedNumber=/[+-]?\d+/,isoRegex=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,isoFormat='YYYY-MM-DDTHH:mm:ssZ',isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d{2}-\d{2}/],['YYYY-MM-DD',/\d{4}-\d{2}-\d{2}/],['GGGG-[W]WW-E',/\d{4}-W\d{2}-\d/],['GGGG-[W]WW',/\d{4}-W\d{2}/],['YYYY-DDD',/\d{4}-\d{3}/]],isoTimes=[['HH:mm:ss.SSSS',/(T| )\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss',/(T| )\d\d:\d\d:\d\d/],['HH:mm',/(T| )\d\d:\d\d/],['HH',/(T| )\d\d/]],parseTimezoneChunker=/([\+\-]|\d\d)/gi,proxyGettersAndSetters='Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),unitMillisecondFactors={'Milliseconds':1,'Seconds':1e3,'Minutes':6e4,'Hours':36e5,'Days':864e5,'Months':2592e6,'Years':31536e6},unitAliases={ms:'millisecond',s:'second',m:'minute',h:'hour',d:'day',D:'date',w:'week',W:'isoWeek',M:'month',Q:'quarter',y:'year',DDD:'dayOfYear',e:'weekday',E:'isoWeekday',gg:'weekYear',GG:'isoWeekYear'},camelFunctions={dayofyear:'dayOfYear',isoweekday:'isoWeekday',isoweek:'isoWeek',weekyear:'weekYear',isoweekyear:'isoWeekYear'},formatFunctions={},relativeTimeThresholds={s:45,m:45,h:22,d:26,M:11},ordinalizeTokens='DDD w W M D d'.split(' '),paddedTokens='M D H h m s w W'.split(' '),formatTokenFunctions={M:function(){return this.month()+1;},MMM:function(format){return this.lang().monthsShort(this,format);},MMMM:function(format){return this.lang().months(this,format);},D:function(){return this.date();},DDD:function(){return this.dayOfYear();},d:function(){return this.day();},dd:function(format){return this.lang().weekdaysMin(this,format);},ddd:function(format){return this.lang().weekdaysShort(this,format);},dddd:function(format){return this.lang().weekdays(this,format);},w:function(){return this.week();},W:function(){return this.isoWeek();},YY:function(){return leftZeroFill(this.year()%100,2);},YYYY:function(){return leftZeroFill(this.year(),4);},YYYYY:function(){return leftZeroFill(this.year(),5);},YYYYYY:function(){var y=this.year(),sign=y>=0?'+':'-';return sign+leftZeroFill(Math.abs(y),6);},gg:function(){return leftZeroFill(this.weekYear()%100,2);},gggg:function(){return leftZeroFill(this.weekYear(),4);},ggggg:function(){return leftZeroFill(this.weekYear(),5);},GG:function(){return leftZeroFill(this.isoWeekYear()%100,2);},GGGG:function(){return leftZeroFill(this.isoWeekYear(),4);},GGGGG:function(){return leftZeroFill(this.isoWeekYear(),5);},e:function(){return this.weekday();},E:function(){return this.isoWeekday();},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),true);},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),false);},H:function(){return this.hours();},h:function(){return this.hours()%12||12;},m:function(){return this.minutes();},s:function(){return this.seconds();},S:function(){return toInt(this.milliseconds()/100);},SS:function(){return leftZeroFill(toInt(this.milliseconds()/10),2);},SSS:function(){return leftZeroFill(this.milliseconds(),3);},SSSS:function(){return leftZeroFill(this.milliseconds(),3);},Z:function(){var a=-this.zone(),b="+";if(a<0){a=-a;b="-";}
return b+leftZeroFill(toInt(a/60),2)+":"+leftZeroFill(toInt(a)%60,2);},ZZ:function(){var a=-this.zone(),b="+";if(a<0){a=-a;b="-";}
return b+leftZeroFill(toInt(a/60),2)+leftZeroFill(toInt(a)%60,2);},z:function(){return this.zoneAbbr();},zz:function(){return this.zoneName();},X:function(){return this.unix();},Q:function(){return this.quarter();}},lists=['months','monthsShort','weekdays','weekdaysShort','weekdaysMin'];function dfl(a,b,c){switch(arguments.length){case 2:return a!=null?a:b;case 3:return a!=null?a:b!=null?b:c;default:throw new Error("Implement me");}}
function defaultParsingFlags(){return{empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false};}
function deprecate(msg,fn){var firstTime=true;function printMsg(){if(moment.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn("Deprecation warning: "+msg);}}
return extend(function(){if(firstTime){printMsg();firstTime=false;}
return fn.apply(this,arguments);},fn);}
function padToken(func,count){return function(a){return leftZeroFill(func.call(this,a),count);};}
function ordinalizeToken(func,period){return function(a){return this.lang().ordinal(func.call(this,a),period);};}
while(ordinalizeTokens.length){i=ordinalizeTokens.pop();formatTokenFunctions[i+'o']=ordinalizeToken(formatTokenFunctions[i],i);}
while(paddedTokens.length){i=paddedTokens.pop();formatTokenFunctions[i+i]=padToken(formatTokenFunctions[i],2);}
formatTokenFunctions.DDDD=padToken(formatTokenFunctions.DDD,3);function Language(){}
function Moment(config){checkOverflow(config);extend(this,config);}
function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._milliseconds=+milliseconds+
seconds*1e3+
minutes*6e4+
hours*36e5;this._days=+days+
weeks*7;this._months=+months+
quarters*3+
years*12;this._data={};this._bubble();}
function extend(a,b){for(var i in b){if(b.hasOwnProperty(i)){a[i]=b[i];}}
if(b.hasOwnProperty("toString")){a.toString=b.toString;}
if(b.hasOwnProperty("valueOf")){a.valueOf=b.valueOf;}
return a;}
function cloneMoment(m){var result={},i;for(i in m){if(m.hasOwnProperty(i)&&momentProperties.hasOwnProperty(i)){result[i]=m[i];}}
return result;}
function absRound(number){if(number<0){return Math.ceil(number);}else{return Math.floor(number);}}
function leftZeroFill(number,targetLength,forceSign){var output=''+Math.abs(number),sign=number>=0;while(output.length<targetLength){output='0'+output;}
return(sign?(forceSign?'+':''):'-')+output;}
function positiveMomentsDifference(base,other){var res={milliseconds:0,months:0};res.months=other.month()-base.month()+
(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}
res.milliseconds=+other-+(base.clone().add(res.months,'M'));return res;}
function momentsDifference(base,other){var res;other=makeAs(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}
return res;}
function addOrSubtractDurationFromMoment(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=duration._days,months=duration._months;updateOffset=updateOffset==null?true:updateOffset;if(milliseconds){mom._d.setTime(+mom._d+milliseconds*isAdding);}
if(days){rawSetter(mom,'Date',rawGetter(mom,'Date')+days*isAdding);}
if(months){rawMonthSetter(mom,rawGetter(mom,'Month')+months*isAdding);}
if(updateOffset){moment.updateOffset(mom,days||months);}}
function isArray(input){return Object.prototype.toString.call(input)==='[object Array]';}
function isDate(input){return Object.prototype.toString.call(input)==='[object Date]'||input instanceof Date;}
function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if((dontConvert&&array1[i]!==array2[i])||(!dontConvert&&toInt(array1[i])!==toInt(array2[i]))){diffs++;}}
return diffs+lengthDiff;}
function normalizeUnits(units){if(units){var lowered=units.toLowerCase().replace(/(.)s$/,'$1');units=unitAliases[units]||camelFunctions[lowered]||lowered;}
return units;}
function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(inputObject.hasOwnProperty(prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}
return normalizedInput;}
function makeList(field){var count,setter;if(field.indexOf('week')===0){count=7;setter='day';}
else if(field.indexOf('month')===0){count=12;setter='month';}
else{return;}
moment[field]=function(format,index){var i,getter,method=moment.fn._lang[field],results=[];if(typeof format==='number'){index=format;format=undefined;}
getter=function(i){var m=moment().utc().set(setter,i);return method.call(moment.fn._lang,m,format||'');};if(index!=null){return getter(index);}
else{for(i=0;i<count;i++){results.push(getter(i));}
return results;}};}
function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){if(coercedNumber>=0){value=Math.floor(coercedNumber);}else{value=Math.ceil(coercedNumber);}}
return value;}
function daysInMonth(year,month){return new Date(Date.UTC(year,month+1,0)).getUTCDate();}
function weeksInYear(year,dow,doy){return weekOfYear(moment([year,11,31+dow-doy]),dow,doy).week;}
function daysInYear(year){return isLeapYear(year)?366:365;}
function isLeapYear(year){return(year%4===0&&year%100!==0)||year%400===0;}
function checkOverflow(m){var overflow;if(m._a&&m._pf.overflow===-2){overflow=m._a[MONTH]<0||m._a[MONTH]>11?MONTH:m._a[DATE]<1||m._a[DATE]>daysInMonth(m._a[YEAR],m._a[MONTH])?DATE:m._a[HOUR]<0||m._a[HOUR]>23?HOUR:m._a[MINUTE]<0||m._a[MINUTE]>59?MINUTE:m._a[SECOND]<0||m._a[SECOND]>59?SECOND:m._a[MILLISECOND]<0||m._a[MILLISECOND]>999?MILLISECOND:-1;if(m._pf._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}
m._pf.overflow=overflow;}}
function isValid(m){if(m._isValid==null){m._isValid=!isNaN(m._d.getTime())&&m._pf.overflow<0&&!m._pf.empty&&!m._pf.invalidMonth&&!m._pf.nullInput&&!m._pf.invalidFormat&&!m._pf.userInvalidated;if(m._strict){m._isValid=m._isValid&&m._pf.charsLeftOver===0&&m._pf.unusedTokens.length===0;}}
return m._isValid;}
function normalizeLanguage(key){return key?key.toLowerCase().replace('_','-'):key;}
function makeAs(input,model){return model._isUTC?moment(input).zone(model._offset||0):moment(input).local();}
extend(Language.prototype,{set:function(config){var prop,i;for(i in config){prop=config[i];if(typeof prop==='function'){this[i]=prop;}else{this['_'+i]=prop;}}},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(m){return this._months[m.month()];},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(m){return this._monthsShort[m.month()];},monthsParse:function(monthName){var i,mom,regex;if(!this._monthsParse){this._monthsParse=[];}
for(i=0;i<12;i++){if(!this._monthsParse[i]){mom=moment.utc([2000,i]);regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}
if(this._monthsParse[i].test(monthName)){return i;}}},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(m){return this._weekdays[m.day()];},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(m){return this._weekdaysShort[m.day()];},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(m){return this._weekdaysMin[m.day()];},weekdaysParse:function(weekdayName){var i,mom,regex;if(!this._weekdaysParse){this._weekdaysParse=[];}
for(i=0;i<7;i++){if(!this._weekdaysParse[i]){mom=moment([2000,1]).day(i);regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}
if(this._weekdaysParse[i].test(weekdayName)){return i;}}},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(key){var output=this._longDateFormat[key];if(!output&&this._longDateFormat[key.toUpperCase()]){output=this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});this._longDateFormat[key]=output;}
return output;},isPM:function(input){return((input+'').toLowerCase().charAt(0)==='p');},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}},_calendar:{sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'},calendar:function(key,mom){var output=this._calendar[key];return typeof output==='function'?output.apply(mom):output;},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return(typeof output==='function')?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);},pastFuture:function(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return typeof format==='function'?format(output):format.replace(/%s/i,output);},ordinal:function(number){return this._ordinal.replace("%d",number);},_ordinal:"%d",preparse:function(string){return string;},postformat:function(string){return string;},week:function(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;},_week:{dow:0,doy:6},_invalidDate:'Invalid date',invalidDate:function(){return this._invalidDate;}});function loadLang(key,values){values.abbr=key;if(!languages[key]){languages[key]=new Language();}
languages[key].set(values);return languages[key];}
function unloadLang(key){delete languages[key];}
function getLangDefinition(key){var i=0,j,lang,next,split,get=function(k){if(!languages[k]&&hasModule){try{require('./lang/'+k);}catch(e){}}
return languages[k];};if(!key){return moment.fn._lang;}
if(!isArray(key)){lang=get(key);if(lang){return lang;}
key=[key];}
while(i<key.length){split=normalizeLanguage(key[i]).split('-');j=split.length;next=normalizeLanguage(key[i+1]);next=next?next.split('-'):null;while(j>0){lang=get(split.slice(0,j).join('-'));if(lang){return lang;}
if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){break;}
j--;}
i++;}
return moment.fn._lang;}
function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,"");}
return input.replace(/\\/g,"");}
function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}
return function(mom){var output="";for(i=0;i<length;i++){output+=array[i]instanceof Function?array[i].call(mom,format):array[i];}
return output;};}
function formatMoment(m,format){if(!m.isValid()){return m.lang().invalidDate();}
format=expandFormat(format,m.lang());if(!formatFunctions[format]){formatFunctions[format]=makeFormatFunction(format);}
return formatFunctions[format](m);}
function expandFormat(format,lang){var i=5;function replaceLongDateFormatTokens(input){return lang.longDateFormat(input)||input;}
localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}
return format;}
function getParseRegexForToken(token,config){var a,strict=config._strict;switch(token){case'Q':return parseTokenOneDigit;case'DDDD':return parseTokenThreeDigits;case'YYYY':case'GGGG':case'gggg':return strict?parseTokenFourDigits:parseTokenOneToFourDigits;case'Y':case'G':case'g':return parseTokenSignedNumber;case'YYYYYY':case'YYYYY':case'GGGGG':case'ggggg':return strict?parseTokenSixDigits:parseTokenOneToSixDigits;case'S':if(strict){return parseTokenOneDigit;}
case'SS':if(strict){return parseTokenTwoDigits;}
case'SSS':if(strict){return parseTokenThreeDigits;}
case'DDD':return parseTokenOneToThreeDigits;case'MMM':case'MMMM':case'dd':case'ddd':case'dddd':return parseTokenWord;case'a':case'A':return getLangDefinition(config._l)._meridiemParse;case'X':return parseTokenTimestampMs;case'Z':case'ZZ':return parseTokenTimezone;case'T':return parseTokenT;case'SSSS':return parseTokenDigits;case'MM':case'DD':case'YY':case'GG':case'gg':case'HH':case'hh':case'mm':case'ss':case'ww':case'WW':return strict?parseTokenTwoDigits:parseTokenOneOrTwoDigits;case'M':case'D':case'd':case'H':case'h':case'm':case's':case'w':case'W':case'e':case'E':return parseTokenOneOrTwoDigits;case'Do':return parseTokenOrdinal;default:a=new RegExp(regexpEscape(unescapeFormat(token.replace('\\','')),"i"));return a;}}
function timezoneMinutesFromString(string){string=string||"";var possibleTzMatches=(string.match(parseTokenTimezone)||[]),tzChunk=possibleTzMatches[possibleTzMatches.length-1]||[],parts=(tzChunk+'').match(parseTimezoneChunker)||['-',0,0],minutes=+(parts[1]*60)+toInt(parts[2]);return parts[0]==='+'?-minutes:minutes;}
function addTimeToArrayFromToken(token,input,config){var a,datePartArray=config._a;switch(token){case'Q':if(input!=null){datePartArray[MONTH]=(toInt(input)-1)*3;}
break;case'M':case'MM':if(input!=null){datePartArray[MONTH]=toInt(input)-1;}
break;case'MMM':case'MMMM':a=getLangDefinition(config._l).monthsParse(input);if(a!=null){datePartArray[MONTH]=a;}else{config._pf.invalidMonth=input;}
break;case'D':case'DD':if(input!=null){datePartArray[DATE]=toInt(input);}
break;case'Do':if(input!=null){datePartArray[DATE]=toInt(parseInt(input,10));}
break;case'DDD':case'DDDD':if(input!=null){config._dayOfYear=toInt(input);}
break;case'YY':datePartArray[YEAR]=moment.parseTwoDigitYear(input);break;case'YYYY':case'YYYYY':case'YYYYYY':datePartArray[YEAR]=toInt(input);break;case'a':case'A':config._isPm=getLangDefinition(config._l).isPM(input);break;case'H':case'HH':case'h':case'hh':datePartArray[HOUR]=toInt(input);break;case'm':case'mm':datePartArray[MINUTE]=toInt(input);break;case's':case'ss':datePartArray[SECOND]=toInt(input);break;case'S':case'SS':case'SSS':case'SSSS':datePartArray[MILLISECOND]=toInt(('0.'+input)*1000);break;case'X':config._d=new Date(parseFloat(input)*1000);break;case'Z':case'ZZ':config._useUTC=true;config._tzm=timezoneMinutesFromString(input);break;case'dd':case'ddd':case'dddd':a=getLangDefinition(config._l).weekdaysParse(input);if(a!=null){config._w=config._w||{};config._w['d']=a;}else{config._pf.invalidWeekday=input;}
break;case'w':case'ww':case'W':case'WW':case'd':case'e':case'E':token=token.substr(0,1);case'gggg':case'GGGG':case'GGGGG':token=token.substr(0,2);if(input){config._w=config._w||{};config._w[token]=toInt(input);}
break;case'gg':case'GG':config._w=config._w||{};config._w[token]=moment.parseTwoDigitYear(input);}}
function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,lang;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;weekYear=dfl(w.GG,config._a[YEAR],weekOfYear(moment(),1,4).year);week=dfl(w.W,1);weekday=dfl(w.E,1);}else{lang=getLangDefinition(config._l);dow=lang._week.dow;doy=lang._week.doy;weekYear=dfl(w.gg,config._a[YEAR],weekOfYear(moment(),dow,doy).year);week=dfl(w.w,1);if(w.d!=null){weekday=w.d;if(weekday<dow){++week;}}else if(w.e!=null){weekday=w.e+dow;}else{weekday=dow;}}
temp=dayOfYearFromWeeks(weekYear,week,weekday,doy,dow);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}
function dateFromConfig(config){var i,date,input=[],currentDate,yearToUse;if(config._d){return;}
currentDate=currentDateArray(config);if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}
if(config._dayOfYear){yearToUse=dfl(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)){config._pf._overflowDayOfYear=true;}
date=makeUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}
for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}
for(;i<7;i++){config._a[i]=input[i]=(config._a[i]==null)?(i===2?1:0):config._a[i];}
config._d=(config._useUTC?makeUTCDate:makeDate).apply(null,input);if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()+config._tzm);}}
function dateFromObject(config){var normalizedInput;if(config._d){return;}
normalizedInput=normalizeObjectUnits(config._i);config._a=[normalizedInput.year,normalizedInput.month,normalizedInput.day,normalizedInput.hour,normalizedInput.minute,normalizedInput.second,normalizedInput.millisecond];dateFromConfig(config);}
function currentDateArray(config){var now=new Date();if(config._useUTC){return[now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate()];}else{return[now.getFullYear(),now.getMonth(),now.getDate()];}}
function makeDateFromStringAndFormat(config){if(config._f===moment.ISO_8601){parseISO(config);return;}
config._a=[];config._pf.empty=true;var lang=getLangDefinition(config._l),string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,lang).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){config._pf.unusedInput.push(skipped);}
string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}
if(formatTokenFunctions[token]){if(parsedInput){config._pf.empty=false;}
else{config._pf.unusedTokens.push(token);}
addTimeToArrayFromToken(token,parsedInput,config);}
else if(config._strict&&!parsedInput){config._pf.unusedTokens.push(token);}}
config._pf.charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){config._pf.unusedInput.push(string);}
if(config._isPm&&config._a[HOUR]<12){config._a[HOUR]+=12;}
if(config._isPm===false&&config._a[HOUR]===12){config._a[HOUR]=0;}
dateFromConfig(config);checkOverflow(config);}
function unescapeFormat(s){return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;});}
function regexpEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}
function makeDateFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){config._pf.invalidFormat=true;config._d=new Date(NaN);return;}
for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=extend({},config);tempConfig._pf=defaultParsingFlags();tempConfig._f=config._f[i];makeDateFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}
currentScore+=tempConfig._pf.charsLeftOver;currentScore+=tempConfig._pf.unusedTokens.length*10;tempConfig._pf.score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}
extend(config,bestMoment||tempConfig);}
function parseISO(config){var i,l,string=config._i,match=isoRegex.exec(string);if(match){config._pf.iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(string)){config._f=isoDates[i][0]+(match[6]||" ");break;}}
for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(string)){config._f+=isoTimes[i][0];break;}}
if(string.match(parseTokenTimezone)){config._f+="Z";}
makeDateFromStringAndFormat(config);}else{config._isValid=false;}}
function makeDateFromString(config){parseISO(config);if(config._isValid===false){delete config._isValid;moment.createFromInputFallback(config);}}
function makeDateFromInput(config){var input=config._i,matched;if(input===undefined){config._d=new Date();}else if(isDate(input)){config._d=new Date(+input);}else if((matched=aspNetJsonRegex.exec(input))!==null){config._d=new Date(+matched[1]);}else if(typeof input==='string'){makeDateFromString(config);}else if(isArray(input)){config._a=input.slice(0);dateFromConfig(config);}else if(typeof(input)==='object'){dateFromObject(config);}else if(typeof(input)==='number'){config._d=new Date(input);}else{moment.createFromInputFallback(config);}}
function makeDate(y,m,d,h,M,s,ms){var date=new Date(y,m,d,h,M,s,ms);if(y<1970){date.setFullYear(y);}
return date;}
function makeUTCDate(y){var date=new Date(Date.UTC.apply(null,arguments));if(y<1970){date.setUTCFullYear(y);}
return date;}
function parseWeekday(input,language){if(typeof input==='string'){if(!isNaN(input)){input=parseInt(input,10);}
else{input=language.weekdaysParse(input);if(typeof input!=='number'){return null;}}}
return input;}
function substituteTimeAgo(string,number,withoutSuffix,isFuture,lang){return lang.relativeTime(number||1,!!withoutSuffix,string,isFuture);}
function relativeTime(posNegDuration,withoutSuffix,lang){var duration=moment.duration(posNegDuration).abs(),seconds=round(duration.as('s')),minutes=round(duration.as('m')),hours=round(duration.as('h')),days=round(duration.as('d')),months=round(duration.as('M')),years=round(duration.as('y')),args=seconds<relativeTimeThresholds.s&&['s',seconds]||minutes===1&&['m']||minutes<relativeTimeThresholds.m&&['mm',minutes]||hours===1&&['h']||hours<relativeTimeThresholds.h&&['hh',hours]||days===1&&['d']||days<relativeTimeThresholds.d&&['dd',days]||months===1&&['M']||months<relativeTimeThresholds.M&&['MM',months]||years===1&&['y']||['yy',years];args[2]=withoutSuffix;args[3]=+posNegDuration>0;args[4]=lang;return substituteTimeAgo.apply({},args);}
function weekOfYear(mom,firstDayOfWeek,firstDayOfWeekOfYear){var end=firstDayOfWeekOfYear-firstDayOfWeek,daysToDayOfWeek=firstDayOfWeekOfYear-mom.day(),adjustedMoment;if(daysToDayOfWeek>end){daysToDayOfWeek-=7;}
if(daysToDayOfWeek<end-7){daysToDayOfWeek+=7;}
adjustedMoment=moment(mom).add('d',daysToDayOfWeek);return{week:Math.ceil(adjustedMoment.dayOfYear()/7),year:adjustedMoment.year()};}
function dayOfYearFromWeeks(year,week,weekday,firstDayOfWeekOfYear,firstDayOfWeek){var d=makeUTCDate(year,0,1).getUTCDay(),daysToAdd,dayOfYear;d=d===0?7:d;weekday=weekday!=null?weekday:firstDayOfWeek;daysToAdd=firstDayOfWeek-d+(d>firstDayOfWeekOfYear?7:0)-(d<firstDayOfWeek?7:0);dayOfYear=7*(week-1)+(weekday-firstDayOfWeek)+daysToAdd+1;return{year:dayOfYear>0?year:year-1,dayOfYear:dayOfYear>0?dayOfYear:daysInYear(year-1)+dayOfYear};}
function makeMoment(config){var input=config._i,format=config._f;if(input===null||(format===undefined&&input==='')){return moment.invalid({nullInput:true});}
if(typeof input==='string'){config._i=input=getLangDefinition().preparse(input);}
if(moment.isMoment(input)){config=cloneMoment(input);config._d=new Date(+input._d);}else if(format){if(isArray(format)){makeDateFromStringAndArray(config);}else{makeDateFromStringAndFormat(config);}}else{makeDateFromInput(config);}
return new Moment(config);}
moment=function(input,format,lang,strict){var c;if(typeof(lang)==="boolean"){strict=lang;lang=undefined;}
c={};c._isAMomentObject=true;c._i=input;c._f=format;c._l=lang;c._strict=strict;c._isUTC=false;c._pf=defaultParsingFlags();return makeMoment(c);};moment.suppressDeprecationWarnings=false;moment.createFromInputFallback=deprecate("moment construction falls back to js Date. This is "+"discouraged and will be removed in upcoming major "+"release. Please refer to "+"https://github.com/moment/moment/issues/1407 for more info.",function(config){config._d=new Date(config._i);});function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}
if(!moments.length){return moment();}
res=moments[0];for(i=1;i<moments.length;++i){if(moments[i][fn](res)){res=moments[i];}}
return res;}
moment.min=function(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);};moment.max=function(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);};moment.utc=function(input,format,lang,strict){var c;if(typeof(lang)==="boolean"){strict=lang;lang=undefined;}
c={};c._isAMomentObject=true;c._useUTC=true;c._isUTC=true;c._l=lang;c._i=input;c._f=format;c._strict=strict;c._pf=defaultParsingFlags();return makeMoment(c).utc();};moment.unix=function(input){return moment(input*1000);};moment.duration=function(input,key){var duration=input,match=null,sign,ret,parseIso,diffRes;if(moment.isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(typeof input==='number'){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetTimeSpanJsonRegex.exec(input))){sign=(match[1]==="-")?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(match[MILLISECOND])*sign};}else if(!!(match=isoDurationRegex.exec(input))){sign=(match[1]==="-")?-1:1;parseIso=function(inp){var res=inp&&parseFloat(inp.replace(',','.'));return(isNaN(res)?0:res)*sign;};duration={y:parseIso(match[2]),M:parseIso(match[3]),d:parseIso(match[4]),h:parseIso(match[5]),m:parseIso(match[6]),s:parseIso(match[7]),w:parseIso(match[8])};}else if(typeof duration==="object"&&("from"in duration||"to"in duration)){diffRes=momentsDifference(moment(duration.from),moment(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}
ret=new Duration(duration);if(moment.isDuration(input)&&input.hasOwnProperty('_lang')){ret._lang=input._lang;}
return ret;};moment.version=VERSION;moment.defaultFormat=isoFormat;moment.ISO_8601=function(){};moment.momentProperties=momentProperties;moment.updateOffset=function(){};moment.relativeTimeThreshold=function(threshold,limit){if(relativeTimeThresholds[threshold]===undefined){return false;}
if(limit===undefined){return relativeTimeThresholds[threshold];}
relativeTimeThresholds[threshold]=limit;return true;};moment.lang=function(key,values){var r;if(!key){return moment.fn._lang._abbr;}
if(values){loadLang(normalizeLanguage(key),values);}else if(values===null){unloadLang(key);key='en';}else if(!languages[key]){getLangDefinition(key);}
r=moment.duration.fn._lang=moment.fn._lang=getLangDefinition(key);return r._abbr;};moment.langData=function(key){if(key&&key._lang&&key._lang._abbr){key=key._lang._abbr;}
return getLangDefinition(key);};moment.isMoment=function(obj){return obj instanceof Moment||(obj!=null&&obj.hasOwnProperty('_isAMomentObject'));};moment.isDuration=function(obj){return obj instanceof Duration;};for(i=lists.length-1;i>=0;--i){makeList(lists[i]);}
moment.normalizeUnits=function(units){return normalizeUnits(units);};moment.invalid=function(flags){var m=moment.utc(NaN);if(flags!=null){extend(m._pf,flags);}
else{m._pf.userInvalidated=true;}
return m;};moment.parseZone=function(){return moment.apply(null,arguments).parseZone();};moment.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};extend(moment.fn=Moment.prototype,{clone:function(){return moment(this);},valueOf:function(){return+this._d+((this._offset||0)*60000);},unix:function(){return Math.floor(+this/1000);},toString:function(){return this.clone().lang('en').format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");},toDate:function(){return this._offset?new Date(+this):this._d;},toISOString:function(){var m=moment(this).utc();if(0<m.year()&&m.year()<=9999){return formatMoment(m,'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}else{return formatMoment(m,'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}},toArray:function(){var m=this;return[m.year(),m.month(),m.date(),m.hours(),m.minutes(),m.seconds(),m.milliseconds()];},isValid:function(){return isValid(this);},isDSTShifted:function(){if(this._a){return this.isValid()&&compareArrays(this._a,(this._isUTC?moment.utc(this._a):moment(this._a)).toArray())>0;}
return false;},parsingFlags:function(){return extend({},this._pf);},invalidAt:function(){return this._pf.overflow;},utc:function(keepLocalTime){return this.zone(0,keepLocalTime);},local:function(keepLocalTime){if(this._isUTC){this.zone(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.add(this._d.getTimezoneOffset(),'m');}}
return this;},format:function(inputString){var output=formatMoment(this,inputString||moment.defaultFormat);return this.lang().postformat(output);},add:function(input,val){var dur;if(typeof input==='string'&&typeof val==='string'){dur=moment.duration(isNaN(+val)?+input:+val,isNaN(+val)?val:input);}else if(typeof input==='string'){dur=moment.duration(+val,input);}else{dur=moment.duration(input,val);}
addOrSubtractDurationFromMoment(this,dur,1);return this;},subtract:function(input,val){var dur;if(typeof input==='string'&&typeof val==='string'){dur=moment.duration(isNaN(+val)?+input:+val,isNaN(+val)?val:input);}else if(typeof input==='string'){dur=moment.duration(+val,input);}else{dur=moment.duration(input,val);}
addOrSubtractDurationFromMoment(this,dur,-1);return this;},diff:function(input,units,asFloat){var that=makeAs(input,this),zoneDiff=(this.zone()-that.zone())*6e4,diff,output;units=normalizeUnits(units);if(units==='year'||units==='month'){diff=(this.daysInMonth()+that.daysInMonth())*432e5;output=((this.year()-that.year())*12)+(this.month()-that.month());output+=((this-moment(this).startOf('month'))-
(that-moment(that).startOf('month')))/diff;output-=((this.zone()-moment(this).startOf('month').zone())-
(that.zone()-moment(that).startOf('month').zone()))*6e4/diff;if(units==='year'){output=output/12;}}else{diff=(this-that);output=units==='second'?diff/1e3:units==='minute'?diff/6e4:units==='hour'?diff/36e5:units==='day'?(diff-zoneDiff)/864e5:units==='week'?(diff-zoneDiff)/6048e5:diff;}
return asFloat?output:absRound(output);},from:function(time,withoutSuffix){return moment.duration({to:this,from:time}).lang(this.lang()._abbr).humanize(!withoutSuffix);},fromNow:function(withoutSuffix){return this.from(moment(),withoutSuffix);},calendar:function(time){var now=time||moment(),sod=makeAs(now,this).startOf('day'),diff=this.diff(sod,'days',true),format=diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';return this.format(this.lang().calendar(format,this));},isLeapYear:function(){return isLeapYear(this.year());},isDST:function(){return(this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone());},day:function(input){var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.lang());return this.add(input-day,'days');}else{return day;}},month:makeAccessor('Month',true),startOf:function(units){units=normalizeUnits(units);switch(units){case'year':this.month(0);case'quarter':case'month':this.date(1);case'week':case'isoWeek':case'day':this.hours(0);case'hour':this.minutes(0);case'minute':this.seconds(0);case'second':this.milliseconds(0);}
if(units==='week'){this.weekday(0);}else if(units==='isoWeek'){this.isoWeekday(1);}
if(units==='quarter'){this.month(Math.floor(this.month()/3)*3);}
return this;},endOf:function(units){units=normalizeUnits(units);return this.startOf(units).add((units==='isoWeek'?'week':units),1).subtract('ms',1);},isAfter:function(input,units){units=typeof units!=='undefined'?units:'millisecond';return+this.clone().startOf(units)>+moment(input).startOf(units);},isBefore:function(input,units){units=typeof units!=='undefined'?units:'millisecond';return+this.clone().startOf(units)<+moment(input).startOf(units);},isSame:function(input,units){units=units||'ms';return+this.clone().startOf(units)===+makeAs(input,this).startOf(units);},min:deprecate("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(other){other=moment.apply(null,arguments);return other<this?this:other;}),max:deprecate("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(other){other=moment.apply(null,arguments);return other>this?this:other;}),zone:function(input,keepLocalTime){var offset=this._offset||0,localAdjust;if(input!=null){if(typeof input==="string"){input=timezoneMinutesFromString(input);}
if(Math.abs(input)<16){input=input*60;}
if(!this._isUTC&&keepLocalTime){localAdjust=this._d.getTimezoneOffset();}
this._offset=input;this._isUTC=true;if(localAdjust!=null){this.subtract(localAdjust,'m');}
if(offset!==input){if(!keepLocalTime||this._changeInProgress){addOrSubtractDurationFromMoment(this,moment.duration(offset-input,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;moment.updateOffset(this,true);this._changeInProgress=null;}}}else{return this._isUTC?offset:this._d.getTimezoneOffset();}
return this;},zoneAbbr:function(){return this._isUTC?"UTC":"";},zoneName:function(){return this._isUTC?"Coordinated Universal Time":"";},parseZone:function(){if(this._tzm){this.zone(this._tzm);}else if(typeof this._i==='string'){this.zone(this._i);}
return this;},hasAlignedHourOffset:function(input){if(!input){input=0;}
else{input=moment(input).zone();}
return(this.zone()-input)%60===0;},daysInMonth:function(){return daysInMonth(this.year(),this.month());},dayOfYear:function(input){var dayOfYear=round((moment(this).startOf('day')-moment(this).startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add("d",(input-dayOfYear));},quarter:function(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);},weekYear:function(input){var year=weekOfYear(this,this.lang()._week.dow,this.lang()._week.doy).year;return input==null?year:this.add("y",(input-year));},isoWeekYear:function(input){var year=weekOfYear(this,1,4).year;return input==null?year:this.add("y",(input-year));},week:function(input){var week=this.lang().week(this);return input==null?week:this.add("d",(input-week)*7);},isoWeek:function(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add("d",(input-week)*7);},weekday:function(input){var weekday=(this.day()+7-this.lang()._week.dow)%7;return input==null?weekday:this.add("d",input-weekday);},isoWeekday:function(input){return input==null?this.day()||7:this.day(this.day()%7?input:input-7);},isoWeeksInYear:function(){return weeksInYear(this.year(),1,4);},weeksInYear:function(){var weekInfo=this._lang._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);},get:function(units){units=normalizeUnits(units);return this[units]();},set:function(units,value){units=normalizeUnits(units);if(typeof this[units]==='function'){this[units](value);}
return this;},lang:function(key){if(key===undefined){return this._lang;}else{this._lang=getLangDefinition(key);return this;}}});function rawMonthSetter(mom,value){var dayOfMonth;if(typeof value==='string'){value=mom.lang().monthsParse(value);if(typeof value!=='number'){return mom;}}
dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}
function rawGetter(mom,unit){return mom._d['get'+(mom._isUTC?'UTC':'')+unit]();}
function rawSetter(mom,unit,value){if(unit==='Month'){return rawMonthSetter(mom,value);}else{return mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}
function makeAccessor(unit,keepTime){return function(value){if(value!=null){rawSetter(this,unit,value);moment.updateOffset(this,keepTime);return this;}else{return rawGetter(this,unit);}};}
moment.fn.millisecond=moment.fn.milliseconds=makeAccessor('Milliseconds',false);moment.fn.second=moment.fn.seconds=makeAccessor('Seconds',false);moment.fn.minute=moment.fn.minutes=makeAccessor('Minutes',false);moment.fn.hour=moment.fn.hours=makeAccessor('Hours',true);moment.fn.date=makeAccessor('Date',true);moment.fn.dates=deprecate("dates accessor is deprecated. Use date instead.",makeAccessor('Date',true));moment.fn.year=makeAccessor('FullYear',true);moment.fn.years=deprecate("years accessor is deprecated. Use year instead.",makeAccessor('FullYear',true));moment.fn.days=moment.fn.day;moment.fn.months=moment.fn.month;moment.fn.weeks=moment.fn.week;moment.fn.isoWeeks=moment.fn.isoWeek;moment.fn.quarters=moment.fn.quarter;moment.fn.toJSON=moment.fn.toISOString;function daysToYears(days){return days*400/146097;}
function yearsToDays(years){return years*146097/400;}
extend(moment.duration.fn=Duration.prototype,{_bubble:function(){var milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data,seconds,minutes,hours,years=0;data.milliseconds=milliseconds%1000;seconds=absRound(milliseconds/1000);data.seconds=seconds%60;minutes=absRound(seconds/60);data.minutes=minutes%60;hours=absRound(minutes/60);data.hours=hours%24;days+=absRound(hours/24);years=absRound(daysToYears(days));days-=absRound(yearsToDays(years));months+=absRound(days/30);days%=30;years+=absRound(months/12);months%=12;data.days=days;data.months=months;data.years=years;},abs:function(){this._milliseconds=Math.abs(this._milliseconds);this._days=Math.abs(this._days);this._months=Math.abs(this._months);this._data.milliseconds=Math.abs(this._data.milliseconds);this._data.seconds=Math.abs(this._data.seconds);this._data.minutes=Math.abs(this._data.minutes);this._data.hours=Math.abs(this._data.hours);this._data.months=Math.abs(this._data.months);this._data.years=Math.abs(this._data.years);return this;},weeks:function(){return absRound(this.days()/7);},valueOf:function(){return this._milliseconds+
this._days*864e5+
(this._months%12)*2592e6+
toInt(this._months/12)*31536e6;},humanize:function(withSuffix){var output=relativeTime(this,!withSuffix,this.lang());if(withSuffix){output=this.lang().pastFuture(+this,output);}
return this.lang().postformat(output);},add:function(input,val){var dur=moment.duration(input,val);this._milliseconds+=dur._milliseconds;this._days+=dur._days;this._months+=dur._months;this._bubble();return this;},subtract:function(input,val){var dur=moment.duration(input,val);this._milliseconds-=dur._milliseconds;this._days-=dur._days;this._months-=dur._months;this._bubble();return this;},get:function(units){units=normalizeUnits(units);return this[units.toLowerCase()+'s']();},as:function(units){var days,months;units=normalizeUnits(units);days=this._days+this._milliseconds/864e5;if(units==='month'||units==='year'){months=this._months+daysToYears(days)*12;return units==='month'?months:months/12;}else{days+=yearsToDays(this._months/12);switch(units){case'week':return days/7;case'day':return days;case'hour':return days*24;case'minute':return days*24*60;case'second':return days*24*60*60;case'millisecond':return days*24*60*60*1000;default:throw new Error("Unknown unit "+units);}}},lang:moment.fn.lang,toIsoString:function(){var years=Math.abs(this.years()),months=Math.abs(this.months()),days=Math.abs(this.days()),hours=Math.abs(this.hours()),minutes=Math.abs(this.minutes()),seconds=Math.abs(this.seconds()+this.milliseconds()/1000);if(!this.asSeconds()){return'P0D';}
return(this.asSeconds()<0?'-':'')+'P'+
(years?years+'Y':'')+
(months?months+'M':'')+
(days?days+'D':'')+
((hours||minutes||seconds)?'T':'')+
(hours?hours+'H':'')+
(minutes?minutes+'M':'')+
(seconds?seconds+'S':'');}});function makeDurationGetter(name){moment.duration.fn[name]=function(){return this._data[name];};}
for(i in unitMillisecondFactors){if(unitMillisecondFactors.hasOwnProperty(i)){makeDurationGetter(i.toLowerCase());}}
moment.duration.fn.asMilliseconds=function(){return this.as('ms');};moment.duration.fn.asSeconds=function(){return this.as('s');};moment.duration.fn.asMinutes=function(){return this.as('m');};moment.duration.fn.asHours=function(){return this.as('h');};moment.duration.fn.asDays=function(){return this.as('d');};moment.duration.fn.asWeeks=function(){return this.as('weeks');};moment.duration.fn.asMonths=function(){return this.as('M');};moment.duration.fn.asYears=function(){return this.as('y');};moment.lang('en',{ordinal:function(number){var b=number%10,output=(toInt(number%100/10)===1)?'th':(b===1)?'st':(b===2)?'nd':(b===3)?'rd':'th';return number+output;}});function makeGlobal(shouldDeprecate){if(typeof ender!=='undefined'){return;}
oldGlobalMoment=globalScope.moment;if(shouldDeprecate){globalScope.moment=deprecate("Accessing Moment through the global scope is "+"deprecated, and will be removed in an upcoming "+"release.",moment);}else{globalScope.moment=moment;}}
if(hasModule){module.exports=moment;}else if(typeof define==="function"&&define.amd){define("moment",function(require,exports,module){if(module.config&&module.config()&&module.config().noGlobal===true){globalScope.moment=oldGlobalMoment;}
return moment;});makeGlobal(true);}else{makeGlobal();}}).call(this);;(function(){var Color,K,PITHIRD,TWOPI,X,Y,Z,bezier,brewer,chroma,clip_rgb,colors,cos,css2rgb,hex2rgb,hsi2rgb,hsl2rgb,hsv2rgb,lab2lch,lab2rgb,lab_xyz,lch2lab,lch2rgb,limit,luminance,luminance_x,rgb2hex,rgb2hsi,rgb2hsl,rgb2hsv,rgb2lab,rgb2lch,rgb_xyz,root,type,unpack,xyz_lab,xyz_rgb,_ref;chroma=function(x,y,z,m){return new Color(x,y,z,m);};if((typeof module!=="undefined"&&module!==null)&&(module.exports!=null)){module.exports=chroma;}
if(typeof define==='function'&&define.amd){define([],function(){return chroma;});}else{root=typeof exports!=="undefined"&&exports!==null?exports:this;root.chroma=chroma;}
chroma.color=function(x,y,z,m){return new Color(x,y,z,m);};chroma.hsl=function(h,s,l,a){return new Color(h,s,l,a,'hsl');};chroma.hsv=function(h,s,v,a){return new Color(h,s,v,a,'hsv');};chroma.rgb=function(r,g,b,a){return new Color(r,g,b,a,'rgb');};chroma.hex=function(x){return new Color(x);};chroma.css=function(x){return new Color(x);};chroma.lab=function(l,a,b){return new Color(l,a,b,'lab');};chroma.lch=function(l,c,h){return new Color(l,c,h,'lch');};chroma.hsi=function(h,s,i){return new Color(h,s,i,'hsi');};chroma.gl=function(r,g,b,a){return new Color(r*255,g*255,b*255,a,'gl');};chroma.interpolate=function(a,b,f,m){if((a==null)||(b==null)){return'#000';}
if(type(a)==='string'){a=new Color(a);}
if(type(b)==='string'){b=new Color(b);}
return a.interpolate(f,b,m);};chroma.mix=chroma.interpolate;chroma.contrast=function(a,b){var l1,l2;if(type(a)==='string'){a=new Color(a);}
if(type(b)==='string'){b=new Color(b);}
l1=a.luminance();l2=b.luminance();if(l1>l2){return(l1+0.05)/(l2+0.05);}else{return(l2+0.05)/(l1+0.05);}};chroma.luminance=function(color){return chroma(color).luminance();};chroma._Color=Color;Color=(function(){function Color(){var a,arg,args,m,me,me_rgb,x,y,z,_i,_len,_ref,_ref1,_ref2,_ref3,_ref4;me=this;args=[];for(_i=0,_len=arguments.length;_i<_len;_i++){arg=arguments[_i];if(arg!=null){args.push(arg);}}
if(args.length===0){_ref=[255,0,255,1,'rgb'],x=_ref[0],y=_ref[1],z=_ref[2],a=_ref[3],m=_ref[4];}else if(type(args[0])==="array"){if(args[0].length===3){_ref1=args[0],x=_ref1[0],y=_ref1[1],z=_ref1[2];a=1;}else if(args[0].length===4){_ref2=args[0],x=_ref2[0],y=_ref2[1],z=_ref2[2],a=_ref2[3];}else{throw'unknown input argument';}
m=(_ref3=args[1])!=null?_ref3:'rgb';}else if(type(args[0])==="string"){x=args[0];m='hex';}else if(type(args[0])==="object"){_ref4=args[0]._rgb,x=_ref4[0],y=_ref4[1],z=_ref4[2],a=_ref4[3];m='rgb';}else if(args.length>=3){x=args[0];y=args[1];z=args[2];}
if(args.length===3){m='rgb';a=1;}else if(args.length===4){if(type(args[3])==="string"){m=args[3];a=1;}else if(type(args[3])==="number"){m='rgb';a=args[3];}}else if(args.length===5){a=args[3];m=args[4];}
if(a==null){a=1;}
if(m==='rgb'){me._rgb=[x,y,z,a];}else if(m==='gl'){me._rgb=[x*255,y*255,z*255,a];}else if(m==='hsl'){me._rgb=hsl2rgb(x,y,z);me._rgb[3]=a;}else if(m==='hsv'){me._rgb=hsv2rgb(x,y,z);me._rgb[3]=a;}else if(m==='hex'){me._rgb=hex2rgb(x);}else if(m==='lab'){me._rgb=lab2rgb(x,y,z);me._rgb[3]=a;}else if(m==='lch'){me._rgb=lch2rgb(x,y,z);me._rgb[3]=a;}else if(m==='hsi'){me._rgb=hsi2rgb(x,y,z);me._rgb[3]=a;}
me_rgb=clip_rgb(me._rgb);}
Color.prototype.rgb=function(){return this._rgb.slice(0,3);};Color.prototype.rgba=function(){return this._rgb;};Color.prototype.hex=function(){return rgb2hex(this._rgb);};Color.prototype.toString=function(){return this.name();};Color.prototype.hsl=function(){return rgb2hsl(this._rgb);};Color.prototype.hsv=function(){return rgb2hsv(this._rgb);};Color.prototype.lab=function(){return rgb2lab(this._rgb);};Color.prototype.lch=function(){return rgb2lch(this._rgb);};Color.prototype.hsi=function(){return rgb2hsi(this._rgb);};Color.prototype.gl=function(){return[this._rgb[0]/255,this._rgb[1]/255,this._rgb[2]/255,this._rgb[3]];};Color.prototype.luminance=function(){return luminance(this._rgb);};Color.prototype.name=function(){var h,k;h=this.hex();for(k in chroma.colors){if(h===chroma.colors[k]){return k;}}
return h;};Color.prototype.alpha=function(alpha){if(arguments.length){this._rgb[3]=alpha;return this;}
return this._rgb[3];};Color.prototype.css=function(mode){var hsl,me,rgb,rnd;if(mode==null){mode='rgb';}
me=this;rgb=me._rgb;if(mode.length===3&&rgb[3]<1){mode+='a';}
if(mode==='rgb'){return mode+'('+rgb.slice(0,3).map(Math.round).join(',')+')';}else if(mode==='rgba'){return mode+'('+rgb.slice(0,3).map(Math.round).join(',')+','+rgb[3]+')';}else if(mode==='hsl'||mode==='hsla'){hsl=me.hsl();rnd=function(a){return Math.round(a*100)/100;};hsl[0]=rnd(hsl[0]);hsl[1]=rnd(hsl[1]*100)+'%';hsl[2]=rnd(hsl[2]*100)+'%';if(mode.length===4){hsl[3]=rgb[3];}
return mode+'('+hsl.join(',')+')';}};Color.prototype.interpolate=function(f,col,m){var dh,hue,hue0,hue1,lbv,lbv0,lbv1,me,res,sat,sat0,sat1,xyz0,xyz1;me=this;if(m==null){m='rgb';}
if(type(col)==="string"){col=new Color(col);}
if(m==='hsl'||m==='hsv'||m==='lch'||m==='hsi'){if(m==='hsl'){xyz0=me.hsl();xyz1=col.hsl();}else if(m==='hsv'){xyz0=me.hsv();xyz1=col.hsv();}else if(m==='hsi'){xyz0=me.hsi();xyz1=col.hsi();}else if(m==='lch'){xyz0=me.lch();xyz1=col.lch();}
if(m.substr(0,1)==='h'){hue0=xyz0[0],sat0=xyz0[1],lbv0=xyz0[2];hue1=xyz1[0],sat1=xyz1[1],lbv1=xyz1[2];}else{lbv0=xyz0[0],sat0=xyz0[1],hue0=xyz0[2];lbv1=xyz1[0],sat1=xyz1[1],hue1=xyz1[2];}
if(!isNaN(hue0)&&!isNaN(hue1)){if(hue1>hue0&&hue1-hue0>180){dh=hue1-(hue0+360);}else if(hue1<hue0&&hue0-hue1>180){dh=hue1+360-hue0;}else{dh=hue1-hue0;}
hue=hue0+f*dh;}else if(!isNaN(hue0)){hue=hue0;if((lbv1===1||lbv1===0)&&m!=='hsv'){sat=sat0;}}else if(!isNaN(hue1)){hue=hue1;if((lbv0===1||lbv0===0)&&m!=='hsv'){sat=sat1;}}else{hue=Number.NaN;}
if(sat==null){sat=sat0+f*(sat1-sat0);}
lbv=lbv0+f*(lbv1-lbv0);if(m.substr(0,1)==='h'){res=new Color(hue,sat,lbv,m);}else{res=new Color(lbv,sat,hue,m);}}else if(m==='rgb'){xyz0=me._rgb;xyz1=col._rgb;res=new Color(xyz0[0]+f*(xyz1[0]-xyz0[0]),xyz0[1]+f*(xyz1[1]-xyz0[1]),xyz0[2]+f*(xyz1[2]-xyz0[2]),m);}else if(m==='lab'){xyz0=me.lab();xyz1=col.lab();res=new Color(xyz0[0]+f*(xyz1[0]-xyz0[0]),xyz0[1]+f*(xyz1[1]-xyz0[1]),xyz0[2]+f*(xyz1[2]-xyz0[2]),m);}else{throw"color mode "+m+" is not supported";}
res.alpha(me.alpha()+f*(col.alpha()-me.alpha()));return res;};Color.prototype.premultiply=function(){var a,rgb;rgb=this.rgb();a=this.alpha();return chroma(rgb[0]*a,rgb[1]*a,rgb[2]*a,a);};Color.prototype.darken=function(amount){var lch,me;if(amount==null){amount=20;}
me=this;lch=me.lch();lch[0]-=amount;return chroma.lch(lch).alpha(me.alpha());};Color.prototype.darker=function(amount){return this.darken(amount);};Color.prototype.brighten=function(amount){if(amount==null){amount=20;}
return this.darken(-amount);};Color.prototype.brighter=function(amount){return this.brighten(amount);};Color.prototype.saturate=function(amount){var lch,me;if(amount==null){amount=20;}
me=this;lch=me.lch();lch[1]+=amount;return chroma.lch(lch).alpha(me.alpha());};Color.prototype.desaturate=function(amount){if(amount==null){amount=20;}
return this.saturate(-amount);};return Color;})();clip_rgb=function(rgb){var i;for(i in rgb){if(i<3){if(rgb[i]<0){rgb[i]=0;}
if(rgb[i]>255){rgb[i]=255;}}else if(i===3){if(rgb[i]<0){rgb[i]=0;}
if(rgb[i]>1){rgb[i]=1;}}}
return rgb;};css2rgb=function(css){var hsl,i,m,rgb,_i,_j,_k,_l;css=css.toLowerCase();if((chroma.colors!=null)&&chroma.colors[css]){return hex2rgb(chroma.colors[css]);}
if(m=css.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)){rgb=m.slice(1,4);for(i=_i=0;_i<=2;i=++_i){rgb[i]=+rgb[i];}
rgb[3]=1;}else if(m=css.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/)){rgb=m.slice(1,5);for(i=_j=0;_j<=3;i=++_j){rgb[i]=+rgb[i];}}else if(m=css.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)){rgb=m.slice(1,4);for(i=_k=0;_k<=2;i=++_k){rgb[i]=Math.round(rgb[i]*2.55);}
rgb[3]=1;}else if(m=css.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)){rgb=m.slice(1,5);for(i=_l=0;_l<=2;i=++_l){rgb[i]=Math.round(rgb[i]*2.55);}
rgb[3]=+rgb[3];}else if(m=css.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)){hsl=m.slice(1,4);hsl[1]*=0.01;hsl[2]*=0.01;rgb=hsl2rgb(hsl);rgb[3]=1;}else if(m=css.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)){hsl=m.slice(1,4);hsl[1]*=0.01;hsl[2]*=0.01;rgb=hsl2rgb(hsl);rgb[3]=+m[4];}
return rgb;};hex2rgb=function(hex){var a,b,g,r,rgb,u;if(hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)){if(hex.length===4||hex.length===7){hex=hex.substr(1);}
if(hex.length===3){hex=hex.split("");hex=hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];}
u=parseInt(hex,16);r=u>>16;g=u>>8&0xFF;b=u&0xFF;return[r,g,b,1];}
if(hex.match(/^#?([A-Fa-f0-9]{8})$/)){if(hex.length===9){hex=hex.substr(1);}
u=parseInt(hex,16);r=u>>24&0xFF;g=u>>16&0xFF;b=u>>8&0xFF;a=u&0xFF;return[r,g,b,a];}
if(rgb=css2rgb(hex)){return rgb;}
throw"unknown color: "+hex;};hsi2rgb=function(h,s,i){var b,g,r,_ref;_ref=unpack(arguments),h=_ref[0],s=_ref[1],i=_ref[2];h/=360;if(h<1/3){b=(1-s)/3;r=(1+s*cos(TWOPI*h)/cos(PITHIRD-TWOPI*h))/3;g=1-(b+r);}else if(h<2/3){h-=1/3;r=(1-s)/3;g=(1+s*cos(TWOPI*h)/cos(PITHIRD-TWOPI*h))/3;b=1-(r+g);}else{h-=2/3;g=(1-s)/3;b=(1+s*cos(TWOPI*h)/cos(PITHIRD-TWOPI*h))/3;r=1-(g+b);}
r=limit(i*r*3);g=limit(i*g*3);b=limit(i*b*3);return[r*255,g*255,b*255];};hsl2rgb=function(){var b,c,g,h,i,l,r,s,t1,t2,t3,_i,_ref,_ref1;_ref=unpack(arguments),h=_ref[0],s=_ref[1],l=_ref[2];if(s===0){r=g=b=l*255;}else{t3=[0,0,0];c=[0,0,0];t2=l<0.5?l*(1+s):l+s-l*s;t1=2*l-t2;h/=360;t3[0]=h+1/3;t3[1]=h;t3[2]=h-1/3;for(i=_i=0;_i<=2;i=++_i){if(t3[i]<0){t3[i]+=1;}
if(t3[i]>1){t3[i]-=1;}
if(6*t3[i]<1){c[i]=t1+(t2-t1)*6*t3[i];}else if(2*t3[i]<1){c[i]=t2;}else if(3*t3[i]<2){c[i]=t1+(t2-t1)*((2/3)-t3[i])*6;}else{c[i]=t1;}}
_ref1=[Math.round(c[0]*255),Math.round(c[1]*255),Math.round(c[2]*255)],r=_ref1[0],g=_ref1[1],b=_ref1[2];}
return[r,g,b];};hsv2rgb=function(){var b,f,g,h,i,p,q,r,s,t,v,_ref,_ref1,_ref2,_ref3,_ref4,_ref5,_ref6;_ref=unpack(arguments),h=_ref[0],s=_ref[1],v=_ref[2];v*=255;if(s===0){r=g=b=v;}else{if(h===360){h=0;}
if(h>360){h-=360;}
if(h<0){h+=360;}
h/=60;i=Math.floor(h);f=h-i;p=v*(1-s);q=v*(1-s*f);t=v*(1-s*(1-f));switch(i){case 0:_ref1=[v,t,p],r=_ref1[0],g=_ref1[1],b=_ref1[2];break;case 1:_ref2=[q,v,p],r=_ref2[0],g=_ref2[1],b=_ref2[2];break;case 2:_ref3=[p,v,t],r=_ref3[0],g=_ref3[1],b=_ref3[2];break;case 3:_ref4=[p,q,v],r=_ref4[0],g=_ref4[1],b=_ref4[2];break;case 4:_ref5=[t,p,v],r=_ref5[0],g=_ref5[1],b=_ref5[2];break;case 5:_ref6=[v,p,q],r=_ref6[0],g=_ref6[1],b=_ref6[2];}}
r=Math.round(r);g=Math.round(g);b=Math.round(b);return[r,g,b];};K=18;X=0.950470;Y=1;Z=1.088830;lab2lch=function(){var a,b,c,h,l,_ref;_ref=unpack(arguments),l=_ref[0],a=_ref[1],b=_ref[2];c=Math.sqrt(a*a+b*b);h=Math.atan2(b,a)/Math.PI*180;return[l,c,h];};lab2rgb=function(l,a,b){var g,r,x,y,z,_ref,_ref1;if(l!==void 0&&l.length===3){_ref=l,l=_ref[0],a=_ref[1],b=_ref[2];}
if(l!==void 0&&l.length===3){_ref1=l,l=_ref1[0],a=_ref1[1],b=_ref1[2];}
y=(l+16)/116;x=y+a/500;z=y-b/200;x=lab_xyz(x)*X;y=lab_xyz(y)*Y;z=lab_xyz(z)*Z;r=xyz_rgb(3.2404542*x-1.5371385*y-0.4985314*z);g=xyz_rgb(-0.9692660*x+1.8760108*y+0.0415560*z);b=xyz_rgb(0.0556434*x-0.2040259*y+1.0572252*z);return[limit(r,0,255),limit(g,0,255),limit(b,0,255),1];};lab_xyz=function(x){if(x>0.206893034){return x*x*x;}else{return(x-4/29)/7.787037;}};xyz_rgb=function(r){return Math.round(255*(r<=0.00304?12.92*r:1.055*Math.pow(r,1/2.4)-0.055));};lch2lab=function(){var c,h,l,_ref;_ref=unpack(arguments),l=_ref[0],c=_ref[1],h=_ref[2];h=h*Math.PI/180;return[l,Math.cos(h)*c,Math.sin(h)*c];};lch2rgb=function(l,c,h){var L,a,b,g,r,_ref,_ref1;_ref=lch2lab(l,c,h),L=_ref[0],a=_ref[1],b=_ref[2];_ref1=lab2rgb(L,a,b),r=_ref1[0],g=_ref1[1],b=_ref1[2];return[limit(r,0,255),limit(g,0,255),limit(b,0,255)];};luminance=function(r,g,b){var _ref;_ref=unpack(arguments),r=_ref[0],g=_ref[1],b=_ref[2];r=luminance_x(r);g=luminance_x(g);b=luminance_x(b);return 0.2126*r+0.7152*g+0.0722*b;};luminance_x=function(x){x/=255;if(x<=0.03928){return x/12.92;}else{return Math.pow((x+0.055)/1.055,2.4);}};rgb2hex=function(){var b,g,r,str,u,_ref;_ref=unpack(arguments),r=_ref[0],g=_ref[1],b=_ref[2];u=r<<16|g<<8|b;str="000000"+u.toString(16);return"#"+str.substr(str.length-6);};rgb2hsi=function(){var TWOPI,b,g,h,i,min,r,s,_ref;_ref=unpack(arguments),r=_ref[0],g=_ref[1],b=_ref[2];TWOPI=Math.PI*2;r/=255;g/=255;b/=255;min=Math.min(r,g,b);i=(r+g+b)/3;s=1-min/i;if(s===0){h=0;}else{h=((r-g)+(r-b))/2;h/=Math.sqrt((r-g)*(r-g)+(r-b)*(g-b));h=Math.acos(h);if(b>g){h=TWOPI-h;}
h/=TWOPI;}
return[h*360,s,i];};rgb2hsl=function(r,g,b){var h,l,max,min,s,_ref;if(r!==void 0&&r.length>=3){_ref=r,r=_ref[0],g=_ref[1],b=_ref[2];}
r/=255;g/=255;b/=255;min=Math.min(r,g,b);max=Math.max(r,g,b);l=(max+min)/2;if(max===min){s=0;h=Number.NaN;}else{s=l<0.5?(max-min)/(max+min):(max-min)/(2-max-min);}
if(r===max){h=(g-b)/(max-min);}else if(g===max){h=2+(b-r)/(max-min);}else if(b===max){h=4+(r-g)/(max-min);}
h*=60;if(h<0){h+=360;}
return[h,s,l];};rgb2hsv=function(){var b,delta,g,h,max,min,r,s,v,_ref;_ref=unpack(arguments),r=_ref[0],g=_ref[1],b=_ref[2];min=Math.min(r,g,b);max=Math.max(r,g,b);delta=max-min;v=max/255.0;if(max===0){h=Number.NaN;s=0;}else{s=delta/max;if(r===max){h=(g-b)/delta;}
if(g===max){h=2+(b-r)/delta;}
if(b===max){h=4+(r-g)/delta;}
h*=60;if(h<0){h+=360;}}
return[h,s,v];};rgb2lab=function(){var b,g,r,x,y,z,_ref;_ref=unpack(arguments),r=_ref[0],g=_ref[1],b=_ref[2];r=rgb_xyz(r);g=rgb_xyz(g);b=rgb_xyz(b);x=xyz_lab((0.4124564*r+0.3575761*g+0.1804375*b)/X);y=xyz_lab((0.2126729*r+0.7151522*g+0.0721750*b)/Y);z=xyz_lab((0.0193339*r+0.1191920*g+0.9503041*b)/Z);return[116*y-16,500*(x-y),200*(y-z)];};rgb_xyz=function(r){if((r/=255)<=0.04045){return r/12.92;}else{return Math.pow((r+0.055)/1.055,2.4);}};xyz_lab=function(x){if(x>0.008856){return Math.pow(x,1/3);}else{return 7.787037*x+4/29;}};rgb2lch=function(){var a,b,g,l,r,_ref,_ref1;_ref=unpack(arguments),r=_ref[0],g=_ref[1],b=_ref[2];_ref1=rgb2lab(r,g,b),l=_ref1[0],a=_ref1[1],b=_ref1[2];return lab2lch(l,a,b);};chroma.scale=function(colors,positions){var classifyValue,f,getClass,getColor,resetCache,setColors,setDomain,tmap,_colorCache,_colors,_correctLightness,_domain,_fixed,_max,_min,_mode,_nacol,_numClasses,_out,_pos,_spread;_mode='rgb';_nacol=chroma('#ccc');_spread=0;_fixed=false;_domain=[0,1];_colors=[];_out=false;_pos=[];_min=0;_max=1;_correctLightness=false;_numClasses=0;_colorCache={};setColors=function(colors,positions){var c,col,_i,_j,_ref,_ref1,_ref2;if(colors==null){colors=['#ddd','#222'];}
if((colors!=null)&&type(colors)==='string'&&(((_ref=chroma.brewer)!=null?_ref[colors]:void 0)!=null)){colors=chroma.brewer[colors];}
if(type(colors)==='array'){colors=colors.slice(0);for(c=_i=0,_ref1=colors.length-1;0<=_ref1?_i<=_ref1:_i>=_ref1;c=0<=_ref1?++_i:--_i){col=colors[c];if(type(col)==="string"){colors[c]=chroma(col);}}
if(positions!=null){_pos=positions;}else{_pos=[];for(c=_j=0,_ref2=colors.length-1;0<=_ref2?_j<=_ref2:_j>=_ref2;c=0<=_ref2?++_j:--_j){_pos.push(c/(colors.length-1));}}}
resetCache();return _colors=colors;};setDomain=function(domain){if(domain==null){domain=[];}
_domain=domain;_min=domain[0];_max=domain[domain.length-1];resetCache();if(domain.length===2){return _numClasses=0;}else{return _numClasses=domain.length-1;}};getClass=function(value){var i,n;if(_domain!=null){n=_domain.length-1;i=0;while(i<n&&value>=_domain[i]){i++;}
return i-1;}
return 0;};tmap=function(t){return t;};classifyValue=function(value){var i,maxc,minc,n,val;val=value;if(_domain.length>2){n=_domain.length-1;i=getClass(value);minc=_domain[0]+(_domain[1]-_domain[0])*(0+_spread*0.5);maxc=_domain[n-1]+(_domain[n]-_domain[n-1])*(1-_spread*0.5);val=_min+((_domain[i]+(_domain[i+1]-_domain[i])*0.5-minc)/(maxc-minc))*(_max-_min);}
return val;};getColor=function(val,bypassMap){var c,col,f0,i,k,p,t,_i,_ref;if(bypassMap==null){bypassMap=false;}
if(isNaN(val)){return _nacol;}
if(!bypassMap){if(_domain.length>2){c=getClass(val);t=c/(_numClasses-1);}else{if(_max!==_min){t=f0=(val-_min)/(_max-_min);t=Math.min(1,Math.max(0,t));}else{t=_min;}}}else{t=val;}
if(!bypassMap){t=tmap(t);}
k=Math.floor(t*10000);if(_colorCache[k]){col=_colorCache[k];}else{if(type(_colors)==='array'){for(i=_i=0,_ref=_pos.length-1;0<=_ref?_i<=_ref:_i>=_ref;i=0<=_ref?++_i:--_i){p=_pos[i];if(t<=p){col=_colors[i];break;}
if(t>=p&&i===_pos.length-1){col=_colors[i];break;}
if(t>p&&t<_pos[i+1]){t=(t-p)/(_pos[i+1]-p);col=chroma.interpolate(_colors[i],_colors[i+1],t,_mode);break;}}}else if(type(_colors)==='function'){col=_colors(t);}
_colorCache[k]=col;}
return col;};resetCache=function(){return _colorCache={};};setColors(colors,positions);f=function(v){var c;c=getColor(v);if(_out&&c[_out]){return c[_out]();}else{return c;}};f.domain=function(domain,classes,mode,key){var d;if(mode==null){mode='e';}
if(!arguments.length){return _domain;}
if(classes!=null){d=chroma.analyze(domain,key);if(classes===0){domain=[d.min,d.max];}else{domain=chroma.limits(d,mode,classes);}}
setDomain(domain);return f;};f.mode=function(_m){if(!arguments.length){return _mode;}
_mode=_m;resetCache();return f;};f.range=function(colors,_pos){setColors(colors,_pos);return f;};f.out=function(_o){_out=_o;return f;};f.spread=function(val){if(!arguments.length){return _spread;}
_spread=val;return f;};f.correctLightness=function(v){if(!arguments.length){return _correctLightness;}
_correctLightness=v;resetCache();if(_correctLightness){tmap=function(t){var L0,L1,L_actual,L_diff,L_ideal,max_iter,pol,t0,t1;L0=getColor(0,true).lab()[0];L1=getColor(1,true).lab()[0];pol=L0>L1;L_actual=getColor(t,true).lab()[0];L_ideal=L0+(L1-L0)*t;L_diff=L_actual-L_ideal;t0=0;t1=1;max_iter=20;while(Math.abs(L_diff)>1e-2&&max_iter-->0){(function(){if(pol){L_diff*=-1;}
if(L_diff<0){t0=t;t+=(t1-t)*0.5;}else{t1=t;t+=(t0-t)*0.5;}
L_actual=getColor(t,true).lab()[0];return L_diff=L_actual-L_ideal;})();}
return t;};}else{tmap=function(t){return t;};}
return f;};f.colors=function(out){var i,samples,_i,_j,_len,_ref;if(out==null){out='hex';}
colors=[];samples=[];if(_domain.length>2){for(i=_i=1,_ref=_domain.length;1<=_ref?_i<_ref:_i>_ref;i=1<=_ref?++_i:--_i){samples.push((_domain[i-1]+_domain[i])*0.5);}}else{samples=_domain;}
for(_j=0,_len=samples.length;_j<_len;_j++){i=samples[_j];colors.push(f(i)[out]());}
return colors;};return f;};if((_ref=chroma.scales)==null){chroma.scales={};}
chroma.scales.cool=function(){return chroma.scale([chroma.hsl(180,1,.9),chroma.hsl(250,.7,.4)]);};chroma.scales.hot=function(){return chroma.scale(['#000','#f00','#ff0','#fff'],[0,.25,.75,1]).mode('rgb');};chroma.analyze=function(data,key,filter){var add,k,r,val,visit,_i,_len;r={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0};if(filter==null){filter=function(){return true;};}
add=function(val){if((val!=null)&&!isNaN(val)){r.values.push(val);r.sum+=val;if(val<r.min){r.min=val;}
if(val>r.max){r.max=val;}
r.count+=1;}};visit=function(val,k){if(filter(val,k)){if((key!=null)&&type(key)==='function'){return add(key(val));}else if((key!=null)&&type(key)==='string'||type(key)==='number'){return add(val[key]);}else{return add(val);}}};if(type(data)==='array'){for(_i=0,_len=data.length;_i<_len;_i++){val=data[_i];visit(val);}}else{for(k in data){val=data[k];visit(val,k);}}
r.domain=[r.min,r.max];r.limits=function(mode,num){return chroma.limits(r,mode,num);};return r;};chroma.limits=function(data,mode,num){var assignments,best,centroids,cluster,clusterSizes,dist,i,j,kClusters,limits,max,max_log,min,min_log,mindist,n,nb_iters,newCentroids,p,pb,pr,repeat,sum,tmpKMeansBreaks,value,values,_i,_j,_k,_l,_m,_n,_o,_p,_q,_r,_ref1,_ref10,_ref11,_ref12,_ref13,_ref14,_ref15,_ref2,_ref3,_ref4,_ref5,_ref6,_ref7,_ref8,_ref9,_s,_t,_u,_v,_w;if(mode==null){mode='equal';}
if(num==null){num=7;}
if(type(data)==='array'){data=chroma.analyze(data);}
min=data.min;max=data.max;sum=data.sum;values=data.values.sort(function(a,b){return a-b;});limits=[];if(mode.substr(0,1)==='c'){limits.push(min);limits.push(max);}
if(mode.substr(0,1)==='e'){limits.push(min);for(i=_i=1,_ref1=num-1;1<=_ref1?_i<=_ref1:_i>=_ref1;i=1<=_ref1?++_i:--_i){limits.push(min+(i/num)*(max-min));}
limits.push(max);}else if(mode.substr(0,1)==='l'){if(min<=0){throw'Logarithmic scales are only possible for values > 0';}
min_log=Math.LOG10E*Math.log(min);max_log=Math.LOG10E*Math.log(max);limits.push(min);for(i=_j=1,_ref2=num-1;1<=_ref2?_j<=_ref2:_j>=_ref2;i=1<=_ref2?++_j:--_j){limits.push(Math.pow(10,min_log+(i/num)*(max_log-min_log)));}
limits.push(max);}else if(mode.substr(0,1)==='q'){limits.push(min);for(i=_k=1,_ref3=num-1;1<=_ref3?_k<=_ref3:_k>=_ref3;i=1<=_ref3?++_k:--_k){p=values.length*i/num;pb=Math.floor(p);if(pb===p){limits.push(values[pb]);}else{pr=p-pb;limits.push(values[pb]*pr+values[pb+1]*(1-pr));}}
limits.push(max);}else if(mode.substr(0,1)==='k'){n=values.length;assignments=new Array(n);clusterSizes=new Array(num);repeat=true;nb_iters=0;centroids=null;centroids=[];centroids.push(min);for(i=_l=1,_ref4=num-1;1<=_ref4?_l<=_ref4:_l>=_ref4;i=1<=_ref4?++_l:--_l){centroids.push(min+(i/num)*(max-min));}
centroids.push(max);while(repeat){for(j=_m=0,_ref5=num-1;0<=_ref5?_m<=_ref5:_m>=_ref5;j=0<=_ref5?++_m:--_m){clusterSizes[j]=0;}
for(i=_n=0,_ref6=n-1;0<=_ref6?_n<=_ref6:_n>=_ref6;i=0<=_ref6?++_n:--_n){value=values[i];mindist=Number.MAX_VALUE;for(j=_o=0,_ref7=num-1;0<=_ref7?_o<=_ref7:_o>=_ref7;j=0<=_ref7?++_o:--_o){dist=Math.abs(centroids[j]-value);if(dist<mindist){mindist=dist;best=j;}}
clusterSizes[best]++;assignments[i]=best;}
newCentroids=new Array(num);for(j=_p=0,_ref8=num-1;0<=_ref8?_p<=_ref8:_p>=_ref8;j=0<=_ref8?++_p:--_p){newCentroids[j]=null;}
for(i=_q=0,_ref9=n-1;0<=_ref9?_q<=_ref9:_q>=_ref9;i=0<=_ref9?++_q:--_q){cluster=assignments[i];if(newCentroids[cluster]===null){newCentroids[cluster]=values[i];}else{newCentroids[cluster]+=values[i];}}
for(j=_r=0,_ref10=num-1;0<=_ref10?_r<=_ref10:_r>=_ref10;j=0<=_ref10?++_r:--_r){newCentroids[j]*=1/clusterSizes[j];}
repeat=false;for(j=_s=0,_ref11=num-1;0<=_ref11?_s<=_ref11:_s>=_ref11;j=0<=_ref11?++_s:--_s){if(newCentroids[j]!==centroids[i]){repeat=true;break;}}
centroids=newCentroids;nb_iters++;if(nb_iters>200){repeat=false;}}
kClusters={};for(j=_t=0,_ref12=num-1;0<=_ref12?_t<=_ref12:_t>=_ref12;j=0<=_ref12?++_t:--_t){kClusters[j]=[];}
for(i=_u=0,_ref13=n-1;0<=_ref13?_u<=_ref13:_u>=_ref13;i=0<=_ref13?++_u:--_u){cluster=assignments[i];kClusters[cluster].push(values[i]);}
tmpKMeansBreaks=[];for(j=_v=0,_ref14=num-1;0<=_ref14?_v<=_ref14:_v>=_ref14;j=0<=_ref14?++_v:--_v){tmpKMeansBreaks.push(kClusters[j][0]);tmpKMeansBreaks.push(kClusters[j][kClusters[j].length-1]);}
tmpKMeansBreaks=tmpKMeansBreaks.sort(function(a,b){return a-b;});limits.push(tmpKMeansBreaks[0]);for(i=_w=1,_ref15=tmpKMeansBreaks.length-1;_w<=_ref15;i=_w+=2){if(!isNaN(tmpKMeansBreaks[i])){limits.push(tmpKMeansBreaks[i]);}}}
return limits;};chroma.brewer=brewer={OrRd:['#fff7ec','#fee8c8','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#b30000','#7f0000'],PuBu:['#fff7fb','#ece7f2','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858'],BuPu:['#f7fcfd','#e0ecf4','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#810f7c','#4d004b'],Oranges:['#fff5eb','#fee6ce','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#a63603','#7f2704'],BuGn:['#f7fcfd','#e5f5f9','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#006d2c','#00441b'],YlOrBr:['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506'],YlGn:['#ffffe5','#f7fcb9','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#006837','#004529'],Reds:['#fff5f0','#fee0d2','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#a50f15','#67000d'],RdPu:['#fff7f3','#fde0dd','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177','#49006a'],Greens:['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#006d2c','#00441b'],YlGnBu:['#ffffd9','#edf8b1','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#253494','#081d58'],Purples:['#fcfbfd','#efedf5','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#54278f','#3f007d'],GnBu:['#f7fcf0','#e0f3db','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#0868ac','#084081'],Greys:['#ffffff','#f0f0f0','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525','#000000'],YlOrRd:['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026'],PuRd:['#f7f4f9','#e7e1ef','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#980043','#67001f'],Blues:['#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#08519c','#08306b'],PuBuGn:['#fff7fb','#ece2f0','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016c59','#014636'],Spectral:['#9e0142','#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd','#5e4fa2'],RdYlGn:['#a50026','#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837'],RdBu:['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#f7f7f7','#d1e5f0','#92c5de','#4393c3','#2166ac','#053061'],PiYG:['#8e0152','#c51b7d','#de77ae','#f1b6da','#fde0ef','#f7f7f7','#e6f5d0','#b8e186','#7fbc41','#4d9221','#276419'],PRGn:['#40004b','#762a83','#9970ab','#c2a5cf','#e7d4e8','#f7f7f7','#d9f0d3','#a6dba0','#5aae61','#1b7837','#00441b'],RdYlBu:['#a50026','#d73027','#f46d43','#fdae61','#fee090','#ffffbf','#e0f3f8','#abd9e9','#74add1','#4575b4','#313695'],BrBG:['#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','#f5f5f5','#c7eae5','#80cdc1','#35978f','#01665e','#003c30'],RdGy:['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#ffffff','#e0e0e0','#bababa','#878787','#4d4d4d','#1a1a1a'],PuOr:['#7f3b08','#b35806','#e08214','#fdb863','#fee0b6','#f7f7f7','#d8daeb','#b2abd2','#8073ac','#542788','#2d004b'],Set2:['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f','#e5c494','#b3b3b3'],Accent:['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f','#bf5b17','#666666'],Set1:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'],Set3:['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f'],Dark2:['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666'],Paired:['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928'],Pastel2:['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae','#f1e2cc','#cccccc'],Pastel1:['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd','#fddaec','#f2f2f2']};chroma.colors=colors={indigo:"#4b0082",gold:"#ffd700",hotpink:"#ff69b4",firebrick:"#b22222",indianred:"#cd5c5c",yellow:"#ffff00",mistyrose:"#ffe4e1",darkolivegreen:"#556b2f",olive:"#808000",darkseagreen:"#8fbc8f",pink:"#ffc0cb",tomato:"#ff6347",lightcoral:"#f08080",orangered:"#ff4500",navajowhite:"#ffdead",lime:"#00ff00",palegreen:"#98fb98",darkslategrey:"#2f4f4f",greenyellow:"#adff2f",burlywood:"#deb887",seashell:"#fff5ee",mediumspringgreen:"#00fa9a",fuchsia:"#ff00ff",papayawhip:"#ffefd5",blanchedalmond:"#ffebcd",chartreuse:"#7fff00",dimgray:"#696969",black:"#000000",peachpuff:"#ffdab9",springgreen:"#00ff7f",aquamarine:"#7fffd4",white:"#ffffff",orange:"#ffa500",lightsalmon:"#ffa07a",darkslategray:"#2f4f4f",brown:"#a52a2a",ivory:"#fffff0",dodgerblue:"#1e90ff",peru:"#cd853f",lawngreen:"#7cfc00",chocolate:"#d2691e",crimson:"#dc143c",forestgreen:"#228b22",darkgrey:"#a9a9a9",lightseagreen:"#20b2aa",cyan:"#00ffff",mintcream:"#f5fffa",silver:"#c0c0c0",antiquewhite:"#faebd7",mediumorchid:"#ba55d3",skyblue:"#87ceeb",gray:"#808080",darkturquoise:"#00ced1",goldenrod:"#daa520",darkgreen:"#006400",floralwhite:"#fffaf0",darkviolet:"#9400d3",darkgray:"#a9a9a9",moccasin:"#ffe4b5",saddlebrown:"#8b4513",grey:"#808080",darkslateblue:"#483d8b",lightskyblue:"#87cefa",lightpink:"#ffb6c1",mediumvioletred:"#c71585",slategrey:"#708090",red:"#ff0000",deeppink:"#ff1493",limegreen:"#32cd32",darkmagenta:"#8b008b",palegoldenrod:"#eee8aa",plum:"#dda0dd",turquoise:"#40e0d0",lightgrey:"#d3d3d3",lightgoldenrodyellow:"#fafad2",darkgoldenrod:"#b8860b",lavender:"#e6e6fa",maroon:"#800000",yellowgreen:"#9acd32",sandybrown:"#f4a460",thistle:"#d8bfd8",violet:"#ee82ee",navy:"#000080",magenta:"#ff00ff",dimgrey:"#696969",tan:"#d2b48c",rosybrown:"#bc8f8f",olivedrab:"#6b8e23",blue:"#0000ff",lightblue:"#add8e6",ghostwhite:"#f8f8ff",honeydew:"#f0fff0",cornflowerblue:"#6495ed",slateblue:"#6a5acd",linen:"#faf0e6",darkblue:"#00008b",powderblue:"#b0e0e6",seagreen:"#2e8b57",darkkhaki:"#bdb76b",snow:"#fffafa",sienna:"#a0522d",mediumblue:"#0000cd",royalblue:"#4169e1",lightcyan:"#e0ffff",green:"#008000",mediumpurple:"#9370db",midnightblue:"#191970",cornsilk:"#fff8dc",paleturquoise:"#afeeee",bisque:"#ffe4c4",slategray:"#708090",darkcyan:"#008b8b",khaki:"#f0e68c",wheat:"#f5deb3",teal:"#008080",darkorchid:"#9932cc",deepskyblue:"#00bfff",salmon:"#fa8072",darkred:"#8b0000",steelblue:"#4682b4",palevioletred:"#db7093",lightslategray:"#778899",aliceblue:"#f0f8ff",lightslategrey:"#778899",lightgreen:"#90ee90",orchid:"#da70d6",gainsboro:"#dcdcdc",mediumseagreen:"#3cb371",lightgray:"#d3d3d3",mediumturquoise:"#48d1cc",lemonchiffon:"#fffacd",cadetblue:"#5f9ea0",lightyellow:"#ffffe0",lavenderblush:"#fff0f5",coral:"#ff7f50",purple:"#800080",aqua:"#00ffff",whitesmoke:"#f5f5f5",mediumslateblue:"#7b68ee",darkorange:"#ff8c00",mediumaquamarine:"#66cdaa",darksalmon:"#e9967a",beige:"#f5f5dc",blueviolet:"#8a2be2",azure:"#f0ffff",lightsteelblue:"#b0c4de",oldlace:"#fdf5e6"};type=(function(){var classToType,name,_i,_len,_ref1;classToType={};_ref1="Boolean Number String Function Array Date RegExp Undefined Null".split(" ");for(_i=0,_len=_ref1.length;_i<_len;_i++){name=_ref1[_i];classToType["[object "+name+"]"]=name.toLowerCase();}
return function(obj){var strType;strType=Object.prototype.toString.call(obj);return classToType[strType]||"object";};})();limit=function(x,min,max){if(min==null){min=0;}
if(max==null){max=1;}
if(x<min){x=min;}
if(x>max){x=max;}
return x;};unpack=function(args){if(args.length>=3){return args;}else{return args[0];}};TWOPI=Math.PI*2;PITHIRD=Math.PI/3;cos=Math.cos;bezier=function(colors){var I,I0,I1,c,lab0,lab1,lab2,lab3,_ref1,_ref2,_ref3;colors=(function(){var _i,_len,_results;_results=[];for(_i=0,_len=colors.length;_i<_len;_i++){c=colors[_i];_results.push(chroma(c));}
return _results;})();if(colors.length===2){_ref1=(function(){var _i,_len,_results;_results=[];for(_i=0,_len=colors.length;_i<_len;_i++){c=colors[_i];_results.push(c.lab());}
return _results;})(),lab0=_ref1[0],lab1=_ref1[1];I=function(t){var i,lab;lab=(function(){var _i,_results;_results=[];for(i=_i=0;_i<=2;i=++_i){_results.push(lab0[i]+t*(lab1[i]-lab0[i]));}
return _results;})();return chroma.lab.apply(chroma,lab);};}else if(colors.length===3){_ref2=(function(){var _i,_len,_results;_results=[];for(_i=0,_len=colors.length;_i<_len;_i++){c=colors[_i];_results.push(c.lab());}
return _results;})(),lab0=_ref2[0],lab1=_ref2[1],lab2=_ref2[2];I=function(t){var i,lab;lab=(function(){var _i,_results;_results=[];for(i=_i=0;_i<=2;i=++_i){_results.push((1-t)*(1-t)*lab0[i]+2*(1-t)*t*lab1[i]+t*t*lab2[i]);}
return _results;})();return chroma.lab.apply(chroma,lab);};}else if(colors.length===4){_ref3=(function(){var _i,_len,_results;_results=[];for(_i=0,_len=colors.length;_i<_len;_i++){c=colors[_i];_results.push(c.lab());}
return _results;})(),lab0=_ref3[0],lab1=_ref3[1],lab2=_ref3[2],lab3=_ref3[3];I=function(t){var i,lab;lab=(function(){var _i,_results;_results=[];for(i=_i=0;_i<=2;i=++_i){_results.push((1-t)*(1-t)*(1-t)*lab0[i]+3*(1-t)*(1-t)*t*lab1[i]+3*(1-t)*t*t*lab2[i]+t*t*t*lab3[i]);}
return _results;})();return chroma.lab.apply(chroma,lab);};}else if(colors.length===5){I0=bezier(colors.slice(0,3));I1=bezier(colors.slice(2,5));I=function(t){if(t<0.5){return I0(t*2);}else{return I1((t-0.5)*2);}};}
return I;};chroma.interpolate.bezier=bezier;}).call(this);;/*! http://mths.be/jsesc v0.5.0 by @mathias */;(function(root){var object={};var hasOwnProperty=object.hasOwnProperty;var forOwn=function(object,callback){var key;for(key in object){if(hasOwnProperty.call(object,key)){callback(key,object[key]);}}};var extend=function(destination,source){if(!source){return destination;}
forOwn(source,function(key,value){destination[key]=value;});return destination;};var regexSingleEscape=/["'\\\b\f\n\r\t]/;var regexWhitelist=/[ !#-&\(-\[\]-~]/;var jsesc=function(argument,options){var defaults={'es6':false,'json':false};var json=options&&options.json;options=extend(defaults,options);var result;var string=argument;var index=-1;var length=string.length;var first;var second;var codePoint;result='';while(++index<length){var character=string.charAt(index);if(options.es6){first=string.charCodeAt(index);if(first>=0xD800&&first<=0xDBFF&&length>index+1){second=string.charCodeAt(index+1);if(second>=0xDC00&&second<=0xDFFF){codePoint=(first-0xD800)*0x400+second-0xDC00+0x10000;result+='\\u{'+codePoint.toString(16).toUpperCase()+'}';index++;continue;}}}
if(regexWhitelist.test(character)){result+=character;continue;}
if(character=='"'){result+=character;continue;}
if(character=='\''){result+=character;continue;}
if(regexSingleEscape.test(character)){result+=character;continue;}
var charCode=character.charCodeAt(0);var hexadecimal=charCode.toString(16).toUpperCase();var longhand=hexadecimal.length>2||json;var escaped='\\'+(longhand?'u':'x')+
('0000'+hexadecimal).slice(longhand?-4:-2);result+=escaped;continue;}
return result;};jsesc.version='0.5.0';root.jsesc=jsesc;}(this));;(function(target){var defaultDiacriticsRemovalMap=[{'base':'A','letters':/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},{'base':'AA','letters':/[\uA732]/g},{'base':'AE','letters':/[\u00C6\u01FC\u01E2]/g},{'base':'AO','letters':/[\uA734]/g},{'base':'AU','letters':/[\uA736]/g},{'base':'AV','letters':/[\uA738\uA73A]/g},{'base':'AY','letters':/[\uA73C]/g},{'base':'B','letters':/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},{'base':'C','letters':/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},{'base':'D','letters':/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},{'base':'DZ','letters':/[\u01F1\u01C4]/g},{'base':'Dz','letters':/[\u01F2\u01C5]/g},{'base':'E','letters':/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},{'base':'F','letters':/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},{'base':'G','letters':/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},{'base':'H','letters':/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},{'base':'I','letters':/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},{'base':'J','letters':/[\u004A\u24BF\uFF2A\u0134\u0248]/g},{'base':'K','letters':/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},{'base':'L','letters':/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},{'base':'LJ','letters':/[\u01C7]/g},{'base':'Lj','letters':/[\u01C8]/g},{'base':'M','letters':/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},{'base':'N','letters':/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},{'base':'NJ','letters':/[\u01CA]/g},{'base':'Nj','letters':/[\u01CB]/g},{'base':'O','letters':/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},{'base':'OI','letters':/[\u01A2]/g},{'base':'OO','letters':/[\uA74E]/g},{'base':'OU','letters':/[\u0222]/g},{'base':'P','letters':/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},{'base':'Q','letters':/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},{'base':'R','letters':/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},{'base':'S','letters':/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},{'base':'T','letters':/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},{'base':'TZ','letters':/[\uA728]/g},{'base':'U','letters':/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},{'base':'V','letters':/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},{'base':'VY','letters':/[\uA760]/g},{'base':'W','letters':/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},{'base':'X','letters':/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},{'base':'Y','letters':/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},{'base':'Z','letters':/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},{'base':'a','letters':/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},{'base':'aa','letters':/[\uA733]/g},{'base':'ae','letters':/[\u00E6\u01FD\u01E3]/g},{'base':'ao','letters':/[\uA735]/g},{'base':'au','letters':/[\uA737]/g},{'base':'av','letters':/[\uA739\uA73B]/g},{'base':'ay','letters':/[\uA73D]/g},{'base':'b','letters':/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},{'base':'c','letters':/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},{'base':'d','letters':/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},{'base':'dz','letters':/[\u01F3\u01C6]/g},{'base':'e','letters':/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},{'base':'f','letters':/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},{'base':'g','letters':/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},{'base':'h','letters':/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},{'base':'hv','letters':/[\u0195]/g},{'base':'i','letters':/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},{'base':'j','letters':/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},{'base':'k','letters':/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},{'base':'l','letters':/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},{'base':'lj','letters':/[\u01C9]/g},{'base':'m','letters':/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},{'base':'n','letters':/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},{'base':'nj','letters':/[\u01CC]/g},{'base':'o','letters':/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},{'base':'oi','letters':/[\u01A3]/g},{'base':'ou','letters':/[\u0223]/g},{'base':'oo','letters':/[\uA74F]/g},{'base':'p','letters':/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},{'base':'q','letters':/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},{'base':'r','letters':/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},{'base':'s','letters':/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},{'base':'t','letters':/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},{'base':'tz','letters':/[\uA729]/g},{'base':'u','letters':/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},{'base':'v','letters':/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},{'base':'vy','letters':/[\uA761]/g},{'base':'w','letters':/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},{'base':'x','letters':/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},{'base':'y','letters':/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},{'base':'z','letters':/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}];function encodeUriQuery(val,pctEncodeSpaces){return encodeURIComponent(val).replace(/%40/gi,'@').replace(/%3A/gi,':').replace(/%24/g,'$').replace(/%2C/gi,',').replace(/%20/g,(pctEncodeSpaces?'%20':'+'));}
function serializeValue(v){if(angular.isObject(v)){return angular.isDate(v)?v.toISOString():angular.toJson(v);}
return v;}
var D4C={Context:{toggleRefine:function(context,facetName,path,replace){var refineKey='refine.'+facetName;var refineSeparator='/';if(context.dataset){var field=context.dataset.getField(facetName);var annotation=context.dataset.getFieldAnnotation(field,"hierarchical");if(typeof annotation!=="undefined"){refineSeparator=annotation.args[0]||refineSeparator;}}
if(angular.isDefined(context.parameters[refineKey])){var refines=angular.copy(context.parameters[refineKey]);if(!angular.isArray(refines)){refines=[refines];}
if(refines.indexOf(path)>-1){refines.splice(refines.indexOf(path),1);}else{angular.forEach(refines,function(refine,idx){if(path.startsWith(refine+refineSeparator)){refines.splice(idx,1);}else if(refine.startsWith(path+refineSeparator)){refines.splice(idx,1);}});if(angular.isUndefined(replace)||replace===false){refines.push(path);}else{refines=[path];}}
if(refines.length===0){delete context.parameters[refineKey];}else{context.parameters[refineKey]=refines;}}else{context.parameters[refineKey]=path;}}},GeoFilter:{getBboxParameterAsBounds:function(bounds){var members=bounds.split(',');return[[members[0],members[1]],[members[2],members[3]]];},getBoundsAsBboxParameter:function(bounds){if(angular.isArray(bounds)){return[bounds[0][0],bounds[0][1],bounds[1][0],bounds[1][1]].join(',');}else{return[bounds.getSouthWest().lat,bounds.getSouthWest().lng,bounds.getNorthEast().lat,bounds.getNorthEast().lng].join(',');}},getBoundsAsPolygonParameter:function(bounds){var leafletBounds;if(angular.isArray(bounds)){leafletBounds=new L.LatLngBounds(bounds);}else{leafletBounds=bounds;}
var polygon=[[leafletBounds.getNorthWest().lat,leafletBounds.getNorthWest().lng],[leafletBounds.getNorthEast().lat,leafletBounds.getNorthEast().lng],[leafletBounds.getSouthEast().lat,leafletBounds.getSouthEast().lng],[leafletBounds.getSouthWest().lat,leafletBounds.getSouthWest().lng]];var polygonBounds=[];for(var i=0;i<polygon.length;i++){var bound=polygon[i];polygonBounds.push(bound.join(','));}
var param='('+polygonBounds.join('),(')+')';return param;},getPolygonParameterAsBounds:function(parameter){var members=parameter.replace(/[()]/g,'').split(',');var minlat,minlng,maxlat,maxlng;for(var i=0;i<members.length;i+=2){var lat=parseFloat(members[i]);var lng=parseFloat(members[i+1]);if(!minlat||minlat>lat){minlat=lat;}
if(!minlng||minlng>lng){minlng=lng;}
if(!maxlat||maxlat<lat){maxlat=lat;}
if(!maxlng||maxlng<lng){maxlng=lng;}}
return[[minlat,minlng],[maxlat,maxlng]];},getPolygonParameterAsGeoJSON:function(parameter){var geojson={'type':'Polygon','coordinates':[[]]};var members=parameter.replace(/[()]/g,'').split(',');for(var i=0;i<members.length;i+=2){var lat=parseFloat(members[i]);var lng=parseFloat(members[i+1]);geojson.coordinates[0].push([lng,lat]);}
return geojson;},getBboxParameterAsPolygonParameter:function(bbox){return this.getBoundsAsPolygonParameter(this.getBboxParameterAsBounds(bbox));},getGeoJSONPolygonAsPolygonParameter:function(geoJsonPolygon){var coordinates;var polygonBounds=[];if(geoJsonPolygon.type==='LineString'){coordinates=geoJsonPolygon.coordinates;var minLng=null,minLat=null,maxLng=null,maxLat=null;angular.forEach(coordinates,function(pos){var lng=pos[0],lat=pos[1];minLng=minLng===null?lng:Math.min(minLng,lng);minLat=minLat===null?lat:Math.min(minLat,lat);maxLng=maxLng===null?lng:Math.max(maxLng,lng);maxLat=maxLat===null?lat:Math.max(maxLat,lat);});polygonBounds.push(minLat+','+minLng);polygonBounds.push(minLat+','+maxLng);polygonBounds.push(maxLat+','+maxLng);polygonBounds.push(maxLat+','+minLng);}else{coordinates=geoJsonPolygon.coordinates[0];if(geoJsonPolygon.type==='MultiPolygon'){coordinates=coordinates[0];}
for(var i=0;i<coordinates.length;i++){var bound=angular.copy(coordinates[i]);if(bound.length>2){bound.splice(2,1);}
bound.reverse();polygonBounds.push(bound.join(','));}}
return'('+polygonBounds.join('),(')+')';},addGeoFilterFromSpatialObject:function(parameters,spatial){if(angular.isArray(spatial)){parameters["geofilter.distance"]=spatial[0]+','+spatial[1];}else if(spatial.type==='Point'){parameters["geofilter.distance"]=spatial.coordinates[1]+','+spatial.coordinates[0];}else{parameters["geofilter.polygon"]=this.getGeoJSONPolygonAsPolygonParameter(spatial);}}},StringUtils:{slugify:function(string){if(!string){return string;}
return string.toLowerCase().replace(/\s+/g,'-').replace(/[^\w-]+/g,'').replace(/-+/g,'-');},normalize:function(input){if(!input){return input;}
for(var i=0;i<defaultDiacriticsRemovalMap.length;i++){input=input.replace(defaultDiacriticsRemovalMap[i].letters,defaultDiacriticsRemovalMap[i].base);}
return input;},capitalize:function(input){return input.charAt(0).toUpperCase()+input.slice(1);},startsWith:function(input,searchedString){return input&&input.indexOf(searchedString)===0;},escapeHTML:function(text){return text.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;");},getRandomUUID:function(length){length=Math.min(length||7,36);var acceptedChars="abcdefghijklmnopqrstuvwxyz0123456789";var UUID='';for(var i=0;i<length;i++){UUID+=acceptedChars.charAt(Math.floor(Math.random()*acceptedChars.length));}
return UUID;}},NumberUtils:{limitDecimalsFloor:function limitDecimals(number,decimals){return Math.floor(number*Math.pow(10,decimals))/Math.pow(10,decimals);},limitDecimalsCeil:function limitDecimals(number,decimals){return Math.ceil(number*Math.pow(10,decimals))/Math.pow(10,decimals);},limitDecimals:function limitDecimals(number,decimals){return Math.round(number*Math.pow(10,decimals))/Math.pow(10,decimals);}},ArrayUtils:{fromCSVString:function(arrayAsCSV){return arrayAsCSV.split(',').map(function(item){return item.trim()});},transpose:function(input){if(angular.isArray(input)){return input.reduce(function(resultObject,key){resultObject[key]=true;return resultObject;},{});}else{return Object.keys(input).reduce(function(resultArray,key){if(input[key]){resultArray.push(key);}
return resultArray;},[]);}},sortNumbers:function(a,b){return a-b;},reverseSortNumbers:function(a,b){return b-a;}},URLUtils:{cleanupAPIParams:function(params){params=angular.copy(params);delete params['_refreshTimestamp'];function unnameParameter(prefix,parameterName,parameterValue){if(parameterName.startsWith(prefix+'.')){if(!params[prefix]){params[prefix]=parameterValue;}else if(angular.isArray(params[prefix])){params[prefix].push(parameterValue);}else{params[prefix]=[params[prefix],parameterValue];}
delete params[parameterName];}}
angular.forEach(params,function(paramValue,paramName){angular.forEach(['q','rq'],function(prefix){unnameParameter(prefix,paramName,paramValue);});});return params;},getAPIQueryString:function(options){options=this.cleanupAPIParams(angular.extend({},options||{}));if(!options)return'';var parts=[];angular.forEach(options,function(value,key){if(isNullOrUndefined(value)){return;}
if(angular.isArray(value)){angular.forEach(value,function(v){parts.push(encodeUriQuery(key)+'='+encodeUriQuery(serializeValue(v)));});}else{parts.push(encodeUriQuery(key)+'='+encodeUriQuery(serializeValue(value)));}});return parts.join('&');}},DatasetUtils:{isFieldSortable:function(field){var supportedSortTypes=['int','double','date','datetime'];if(supportedSortTypes.indexOf(field.type)>=0){return true;}
if(field.type==='text'&&field.annotations){for(var a=0;a<field.annotations.length;a++){var anno=field.annotations[a];if(anno.name==='sortable'){return true;}}}
return false;}},Dataset:function(dataset){var types,facetsCount,filtersDescription;var getFieldAnnotation=function(field,annotationName){var i=0;if(field.annotations){for(;i<field.annotations.length;i++){if(field.annotations[i].name===annotationName){return field.annotations[i];}}}};var isFieldAnnotated=function(field,annotationName){return typeof getFieldAnnotation(field,annotationName)!=="undefined";};var iterateFields=function(fields){filtersDescription={'facets':[]};types=[];facetsCount=0;for(var j=0;j<fields.length;j++){var field=fields[j];if(isFieldAnnotated(field,'facet')){facetsCount++;filtersDescription.facets.push(field);}
if(!types[field.type]){types[field.type]=1;}else{types[field.type]+=1;}}};return{datasetid:dataset.datasetid||"preview",has_records:dataset.has_records,data_visible:dataset.data_visible,metas:dataset.metas||{domain:'preview'},features:dataset.features,attachments:dataset.attachments,alternative_exports:dataset.alternative_exports,fields:dataset.fields,extra_metas:dataset.extra_metas,interop_metas:dataset.interop_metas,setFields:function(fields){this.fields=fields;iterateFields(this.fields);},getUniqueId:function(){return this.metas.domain+'.'+this.datasetid;},getTypes:function(){if(typeof types==="undefined"){iterateFields(this.fields);}
return types;},hasFeature:function(featureName){return(dataset.features.indexOf(featureName)>-1);},hasFieldType:function(fieldType){for(var i=0;i<this.fields.length;i++){if(this.fields[i].type==fieldType){return true;}}
return false;},countFieldType:function(fieldType){var count=0;for(var i=0;i<this.fields.length;i++){if(this.fields[i].type==fieldType){count++;}}
return count;},countFieldTypes:function(fieldTypes){var count=0;for(var i=0;i<fieldTypes.length;i++){count+=this.countFieldType(fieldTypes[i]);}
return count;},getFacetsCount:function(){if(typeof facetsCount==="undefined"){iterateFields(this.fields);}
return facetsCount;},hasFacet:function(){if(typeof facetsCount==="undefined"){iterateFields(this.fields);}
return facetsCount>0;},getFilterDescription:function(){if(typeof filtersDescription==="undefined"){iterateFields(this.fields);}
return filtersDescription;},getFacets:function(){return this.getFilterDescription().facets;},setMetas:function(metas){this.metas=metas;},getField:function(fieldName){for(var i=0;i<this.fields.length;i++){var field=this.fields[i];if(field.name===fieldName){return field;}}
return null;},getFieldLabel:function(fieldName){var field=this.getField(fieldName);if(!field){return field;}
return field.label;},getFieldsForType:function(fieldType){var fields=[];for(var i=0;i<this.fields.length;i++){var field=this.fields[i];if(field.type===fieldType){fields.push(field);}}
return fields;},hasNumericField:function(){for(var i=0;i<this.fields.length;i++){var field=this.fields[i];if(field.type==='int'||field.type==='double'){return true;}}
return false;},hasGeoField:function(){for(var i=0;i<this.fields.length;i++){var field=this.fields[i];if(field.type==='geo_point_2d'||field.type==='geo_shape'){return true;}}
return false;},getExtraMeta:function(template,name){if(this.extra_metas&&this.extra_metas[template]&&this.extra_metas[template][name]){return this.extra_metas[template][name];}else{return null;}},isFieldAnnotated:function(field,annotationName){return isFieldAnnotated(field,annotationName);},getFieldAnnotation:function(field,annotationName){return getFieldAnnotation(field,annotationName);}};},Record:{getImageUrl:function(record,fieldName,domainUrl,size){return format_string('{domainUrl}/explore/dataset/{datasetId}/files/{imageId}/{size}/',{domainUrl:domainUrl||'',datasetId:record.datasetid,imageId:record.fields[fieldName].id,size:size||'300'});}},CalculationUtils:{getValueOnScale:function(value,min,max,calculation){if(min===max){return 1;}
calculation=calculation||'linear';var relativeMax=max-min;var relativeValue=value-min;var ratio;if(calculation==='linear'){ratio=relativeValue/relativeMax;}else if(calculation==='log'){ratio=Math.log(relativeValue)/Math.log(relativeMax);if(ratio===-Infinity){ratio=0;}}
return ratio;},incrementByOneUnit:function(number){var fromString=false;var finalNumber;var digits;if(angular.isString(number)){number=parseFloat(number);fromString=true;}
if(number.toString().indexOf('.')===-1){finalNumber=number+1;}else{digits=number.toString().length-number.toString().indexOf('.')-1;finalNumber=number+Math.pow(10,-digits);}
if(fromString){if(digits){return finalNumber.toFixed(digits);}else{return finalNumber.toString();}}else{if(digits){return Math.round(finalNumber*Math.pow(10,digits))/Math.pow(10,digits);}else{return finalNumber;}}}},DateFieldUtils:{datePatternBuilder:function(mode){var patterns={highcharts:{'Hh':'%Hh','MMM':'%M','YYYY':'%Y','MMMM':'%B','D':'%e','ddd':'%a'},moment:{'Hh':'H[h]','MMM':'MMM','YYYY':'YYYY','MMMM':'MMMM','D':'D','ddd':'ddd'}}[mode];return function(object){var datePattern='';if(angular.isObject(object)&&('year'in object||'month'in object||'day'in object||'hour'in object||'minute'in object||'weekday'in object)){if(!('year'in object)){if('month'in object){datePattern=patterns['MMMM'];}
if('day'in object){if('month'in object){datePattern=patterns['D']+' '+patterns['MMMM'];}else{datePattern=patterns['D'];}}
if('weekday'in object){datePattern=patterns['ddd'];if('hour'in object){datePattern+=' '+patterns['Hh'];}}else if('hour'in object){datePattern=patterns['Hh'];}}else{if('day'in object){datePattern+=' '+patterns['D'];}
if('month'in object){datePattern+=' '+patterns['MMMM'];}
datePattern+=' '+patterns['YYYY'];if('hour'in object){if('minute'in object){datePattern+=' '+patterns['Hh']+patterns['MMM'];}else{datePattern+=' '+patterns['Hh'];}}}}
return datePattern;};},getDateFromXObject:function(x,minDate){var minYear=minDate?minDate.getUTCFullYear():2000;var minMonth=minDate?minDate.getUTCMonth():0;var minDay=minDate?minDate.getUTCDate():1;var minHour=minDate?minDate.getUTCHours():0;var minMinute=minDate?minDate.getUTCMinutes():0;if(angular.isObject(x)&&('year'in x||'month'in x||'day'in x||'hour'in x||'minute'in x||'weekday'in x||'yearday'in x)){var date=new Date(Date.UTC(x.year||minYear,x.month-1||0,x.day||1,x.hour||0,x.minute||0));date.setUTCFullYear(x.year||minYear);if(!('month'in x))date.setUTCMonth(minMonth);if(!('day'in x))date.setUTCDate(minDay);if(!('hour'in x))date.setUTCHours(minHour);if(!('minute'in x))date.setUTCMinutes(minMinute);if(!('year'in x)){if('weekday'in x){date.setUTCDate(date.getUTCDate()+7-date.getUTCDay()+x.weekday);}
if('yearday'in x){date.setUTCDate(0+x.yearday);}}
if('day'in x){if(x.day==29&&x.month==2&&!x.year){date.setUTCDate(28);date.setUTCMonth(1);}}else{if('month'in x){date.setUTCDate(16);}}
return date;}},getTimescaleProperties:function(timescale){var details={'year':['year'],'month':['year','month'],'day':['year','month','day'],'hour':['year','month','day','hour'],'minute':['year','month','day','hour','minute'],'month month':['month'],'day day':['day'],'day weekday':['weekday'],'hour weekday':['weekday','hour'],'day month':['yearday'],'hour hour':['hour']};if(timescale in details){return details[timescale];}
return null;},getTimescaleX:function(x,timescale){var xs=[];var properties=D4C.DateFieldUtils.getTimescaleProperties(timescale);if(properties){angular.forEach(properties,function(property){xs.push(x+'.'+property);});}else{xs.push(x);}
return xs;},getTimescaleSort:function(xs){return xs.map(function(item){return'x.'+item;}).join(",");}}};if(typeof target.D4C==='undefined'){target.D4C={};}
target.D4C=angular.extend(target.D4C,D4C);})(window);;(function(){'use strict';var mod=angular.module('d4c-widgets');mod.filter('nofollow',function(){return function(value){if(angular.isString(value)){return value.replace(/<a href="/g,'<a target="_blank" rel="nofollow" href="');}else{return value;}};});mod.filter('prettyText',['$filter',function($filter){var re=/[<>]+/;var NON_ALPHANUMERIC_REGEXP=/([^\#-~| |!])/g;function encodeEntities(value){return value.replace(/&/g,'&amp;').replace(NON_ALPHANUMERIC_REGEXP,function(value){return'&#'+value.charCodeAt(0)+';';}).replace(/</g,'&lt;').replace(/>/g,'&gt;');}
return function(value){if(!value||!angular.isString(value)){return value;}
if(re.test(value)){return encodeEntities(value);}else{try{return $filter('linky')(value,'_blank');}catch(InvalidArgument){return encodeEntities(value);}}};}]);mod.filter('safenewlines',function(){return function(text){if(!text){return text;}
return text.replace(/\n/g,'<br/>').replace(/&#10;/g,'<br/>');};});mod.filter('imagify',['$sce',function($sce){var re=/^(http(?:s?):\/\/[^;,]*(?:jpg|jpeg|png|gif)(?:\?[^,;]*)?)(?:$|;|,|&)/i;return function(value){if(angular.isString(value)){value=value.trim();var match=re.exec(value);if(match!==null){return $sce.trustAsHtml('<img class="d4cwidget d4cwidget-imagified" src="'+match[1]+'" />');}}
return value;};}]);mod.filter('videoify',['$sce',function($sce){var re_youtube=/^https?:\/\/(?:(?:youtu.be\/)|(?:(?:www.)?youtube.com\/watch\?v=))([0-9a-z_-]+)$/i;var re_dailymotion=/^https?:\/\/(?:(?:dai.ly)|(?:www.dailymotion.com))\/(?:video\/)?([0-9a-z]+)(?:[0-9a-z_-]*)$/i;var re_vimeo=/^https?:\/\/vimeo.com\/([0-9]+)$/i;return function(url){if(angular.isString(url)){var match=re_youtube.exec(url.trim());if(match!==null){return $sce.trustAsHtml('<iframe width="200" height="113" src="//www.youtube.com/embed/'+match[1]+'" frameborder="0" allowfullscreen></iframe>');}
match=re_dailymotion.exec(url.trim());if(match!==null){return $sce.trustAsHtml('<iframe frameborder="0" width="200" height="113" src="//www.dailymotion.com/embed/video/'+match[1]+'" allowfullscreen></iframe>');}
match=re_vimeo.exec(url.trim());if(match!==null){return $sce.trustAsHtml('<iframe src="https://player.vimeo.com/video/'+match[1]+'" width="200" height="113" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>');}}
return url;};}]);mod.filter('isDefined',function(){return function(value){return angular.isDefined(value);};});mod.filter('keys',function(){return function(value){return Object.keys(value);};});mod.filter('numKeys',function(){return function(value){return Object.keys(value).length;};});mod.filter('values',function(){return function(object){var values=[];angular.forEach(object,function(value){values.push(value);});return values;};});mod.filter('isEmpty',function(){return function(value){return Object.keys(value).length===0;};});mod.filter('displayImageValue',function($sce){return function(value,datasetid){if(!value){return value;}
var url='/explore/dataset/'+datasetid+'/files/'+value.id+'/300/';return $sce.trustAsHtml('<img class="d4cwidget d4cwidget-imagified" src="'+url+'" />');};});mod.filter('fieldsForVisualization',function(){var blacklist={'table':[],'map':['geo_point_2d','geo_shape'],'images':['file'],'calendar':[]};return function(fields,viz){if(angular.isUndefined(fields)){return fields;}
if(angular.isUndefined(blacklist[viz])){throw'Unknown visualization type "'+viz+"'";}
return fields.filter(function(field){return blacklist[viz].indexOf(field.type)===-1;});};});mod.filter('formatFieldValue',['$filter','$sce',function($filter,$sce){var DATASETID_RE=/^\/(explore\/(embed\/)?dataset|publish)\/([\w_@-]+)\//;var getPrecision=function(field){if(field.annotations){var annos=field.annotations.filter(function(anno){return anno.name==='timeserie_precision';});if(annos.length>0){return annos[0].args[0];}}
return null;};return function(record,field,context){var value=record[field.name];if(value===null||value===undefined){return'';}
if(field.type==='int'||field.type==='double'){var unit='',decimals,formattedValue;if(field.annotations){for(var a=0;a<field.annotations.length;a++){if(field.annotations[a].name==='unit'){unit=field.annotations[a].args[0];}
if(field.type=='double'&&field.annotations[a].name==='decimals'){decimals=parseInt(field.annotations[a].args[0],10);}}}
if(angular.isDefined(decimals)){formattedValue=$filter('number')(value,decimals);}else{formattedValue=$filter('number')(value);}
if(unit){if(unit==='$'||unit==='£'){formattedValue=unit+formattedValue;}else{formattedValue=formattedValue+' '+unit;}}
return formattedValue;}else if(field.type==='geo_point_2d'){return value[0]+', '+value[1];}else if(field.type==='geo_shape'){return $filter('limitTo')(angular.toJson(value),200);}else if(field.type==='date'){var precision=getPrecision(field);if(precision==='year'){return value;}else if(precision==='month'){var partialDate=moment(value,'YYYY-MM');return $filter('capitalize')($filter('moment')(partialDate,'MMMM YYYY'));}
return $filter('moment')(value,'LL');}else if(field.type==='datetime'){if(value.length===19){value+='Z';}
return $filter('moment')(value,'LLL');}else if(field.type==='file'){if(angular.isObject(value)){var datasetID,domainURL='';if(context&&context.domainUrl){domainURL=context.domainUrl.replace(/\/+$/,'');}
if(context&&context.dataset){datasetID=context.dataset.datasetid;}else{var matches=DATASETID_RE.exec(decodeURIComponent(window.location.pathname));if(matches){datasetID=matches[3];}}
if(datasetID){var url=domainURL+'/explore/dataset/'+datasetID+'/files/'+value.id+'/download/';return $sce.trustAsHtml('<a target="_self" href="'+url+'">'+(value.filename||record.filename)+'</a>');}
return value.filename||record.filename;}else{return''+value;}}else{return $filter('limitTo')(''+value,1000);}};}]);mod.filter('capitalize',[function(){return function(input){return D4C.StringUtils.capitalize(input);};}]);mod.filter('truncate',function(){return function(text,length){if(!text||!angular.isString(text)){return text;}
if(!length){length=200;}
return text.substring(0,length);};});mod.filter('fieldsFilter',function(){return function(fields,config){if(!fields){return fields;}
if(angular.isArray(config)&&config.length){var output=[];angular.forEach(config,function(fieldName){var field=$.grep(fields,function(field){return field.name===fieldName;})[0];if(angular.isDefined(field)){output.push(field);}});return output;}
return fields;};});mod.filter('moment',[function(){return function(isoDate,format){if(isoDate)
return moment(isoDate).format(format);};}]);mod.filter('momentadd',[function(){return function(isoDate,precision,number){if(isoDate){return moment(isoDate).add(precision,parseInt(number,10)).toISOString().replace('.000Z','Z');}};}]);mod.filter('timesince',[function(){return function(isoDate){if(isoDate)
return moment(isoDate).fromNow();};}]);mod.filter('momentdiff',function(){return function(date1,date2,measurement){return moment(date1).diff(date2,measurement);};});mod.filter('themeSlug',['$filter',function($filter){return function(value){if(!value||angular.isArray(value)&&value.length===0){return value;}
if(angular.isArray(value)){value=value[0];}
return $filter('slugify')($filter('normalize')(value));};}]);mod.filter('slugify',function(){return function(text){if(!text){return text;}
return D4C.StringUtils.slugify(text);};});mod.filter('normalize',[function(){return function(input){return D4C.StringUtils.normalize(input);};}]);mod.filter('shortSummary',[function(){return function(summary,length){length=length||400;if(!summary){return'';}
var text='';var body=angular.element('<div>'+summary+'</div>');if(body.children().length===0){if(summary.indexOf('\n')>-1){text=summary.substring(0,summary.indexOf('\n'));}else{text=summary;}}else{var firstNode=body.contents()[0];if(firstNode.nodeType==3){text=firstNode.textContent;}else{if(body.find('p').length>0){var node=body.find('p')[0];if(angular.isDefined(node.textContent)){text=node.textContent;}else{text=node.innerText;}}else{text=body.text();}}}
if(text.length>length){text=text.substring(0,length-3)+'…';}
return text;};}]);mod.filter('imageUrl',function(){return function(fieldValue,context){if(!fieldValue||angular.equals(fieldValue,{})){return null;}
if(!context){console.log('ERROR : This filter requires a context as second parameter.');}
if(!context.dataset){return null;}
if(!angular.isObject(fieldValue)){console.log('ERROR : This field is not an file field.');}
var url=context.domainUrl;url += fetchPrefix() + '/d4c/api/datasets/1.0/'+context.dataset.datasetid+'/files/'+fieldValue.id+'/';return url;};});mod.filter('thumbnailUrl',['imageUrlFilter',function(imageUrlFilter){return function(fieldValue,context){var url=imageUrlFilter(fieldValue,context);if(url){return url+'300/';}else{return null;}};}]);mod.filter('firstValue',function(){return function(value){if(angular.isArray(value)){return value.length>0?value[0]:null;}else{return value;}};});mod.filter('split',function(){return function(list,separator){if(!list){return list;}
if(!separator){separator=';';}
var values=list.split(separator);return values;};});mod.filter('join',function(){return function(value,separator){if(!value){return value;}
if(!separator){separator=', ';}
if(angular.isArray(value)){return value.join(separator);}else{return value;}};});mod.filter('stringify',function(){return function(value){if(angular.isObject(value)){return JSON.stringify(value);}else{return value;}};});mod.filter('themeColor',['D4CWidgetsConfig',function(D4CWidgetsConfig){return function(theme){if(!theme){return'';}
if(D4CWidgetsConfig.themes[theme]){return D4CWidgetsConfig.themes[theme].color;}else{return'';}};}]);mod.filter('isBefore',function(){return function(date1,date2){return moment(date1).isBefore(date2);};});mod.filter('isAfter',function(){return function(date1,date2){return moment(date1).isAfter(date2);};});mod.filter('propagateAppendedURLParameters',['D4CWidgetsConfig',function(D4CWidgetsConfig){return function(url){if(!url){return url;}
if(url.startsWith('http://')||url.startsWith('https://')){return url;}
if(!D4CWidgetsConfig.appendedURLQuerystring){return url;}
if(url.indexOf('?')>-1){url+='&';}else{url+='?';}
url+=D4CWidgetsConfig.appendedURLQuerystring;return url;};}]);mod.filter('toObject',function(){return function(array,key){if(!key){console.log('ERROR : this filter requires a key as a second parameter.');return null;}
return array.reduce(function(newObject,item){newObject[item[key]]=item;return newObject;},{});};});mod.filter('min',function(){return function(n1,n2){return Math.min(n1,n2);};});mod.filter('max',function(){return function(n1,n2){return Math.max(n1,n2);};});mod.filter('filesize',['translate','$filter',function(translate,$filter){var translate_unit=translate;return function(value){var formatted=value,units=[translate_unit('B'),translate_unit('KB'),translate_unit('MB'),translate_unit('GB'),translate_unit('TB')],count=0;while(formatted/1024>1&&count<units.length){formatted=formatted/1024;count++;}
return $filter('number')(formatted)+' '+units[count];};}]);}());;(function(){'use strict';if(!Array.prototype.indexOf){Array.prototype.indexOf=function(elt)
{var len=this.length>>>0;var from=Number(arguments[1])||0;from=(from<0)?Math.ceil(from):Math.floor(from);if(from<0){from+=len;}
for(;from<len;from++)
{if(from in this&&this[from]===elt)
return from;}
return-1;};}
if(!Array.prototype.filter)
{Array.prototype.filter=function(fun)
{if(this===void 0||this===null)
throw new TypeError();var t=Object(this);var len=t.length>>>0;if(typeof fun!="function")
throw new TypeError();var res=[];var thisArg=arguments.length>=2?arguments[1]:void 0;for(var i=0;i<len;i++)
{if(i in t)
{var val=t[i];if(fun.call(thisArg,val,i,t))
res.push(val);}}
return res;};}
if(!Array.prototype.map){Array.prototype.map=function(callback,thisArg){var T,A,k;if(this===null){throw new TypeError(" this is null or not defined");}
var O=Object(this);var len=O.length>>>0;if(typeof callback!=="function"){throw new TypeError(callback+" is not a function");}
if(arguments.length>1){T=thisArg;}
A=new Array(len);k=0;while(k<len){var kValue,mappedValue;if(k in O){kValue=O[k];mappedValue=callback.call(T,kValue,k,O);A[k]=mappedValue;}
k++;}
return A;};}
if(!String.prototype.trim){String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,'');};}
if(!Object.keys){Object.keys=(function(){var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!({toString:null}).propertyIsEnumerable('toString'),dontEnums=['toString','toLocaleString','valueOf','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','constructor'],dontEnumsLength=dontEnums.length;return function(obj){if(typeof obj!=='object'&&(typeof obj!=='function'||obj===null)){throw new TypeError('Object.keys called on non-object');}
var result=[],prop,i;for(prop in obj){if(hasOwnProperty.call(obj,prop)){result.push(prop);}}
if(hasDontEnumBug){for(i=0;i<dontEnumsLength;i++){if(hasOwnProperty.call(obj,dontEnums[i])){result.push(dontEnums[i]);}}}
return result;};}());}
if(!String.prototype.startsWith){String.prototype.startsWith=function(searchString,position){position=position||0;return this.lastIndexOf(searchString,position)===position;};}
if(!String.prototype.endsWith){String.prototype.endsWith=function(searchString,position){var subjectString=this.toString();if(position===undefined||position>subjectString.length){position=subjectString.length;}
position-=searchString.length;var lastIndex=subjectString.indexOf(searchString,position);return lastIndex!==-1&&lastIndex===position;};}
if(!window.hasOwnProperty){window.hasOwnProperty=function(name){return Object.prototype.hasOwnProperty.call(window,name);};}
window.selectText=function(element){var doc=document,range,selection;if(doc.body.createTextRange){range=document.body.createTextRange();range.moveToElementText(element);range.select();}else if(window.getSelection){selection=window.getSelection();range=document.createRange();range.selectNodeContents(element);selection.removeAllRanges();selection.addRange(range);}};window.isObjectEmpty=function(obj){for(var key in obj){if(obj.hasOwnProperty(key)){return false;}}
return true;};window.utf8_to_b64=function(str){return window.btoa(jsesc(str,{'json':true}));};window.b64_to_utf8=function(str){return window.atob(str);};window.format_string=function(){var regEx,str=arguments[0];if(arguments[1]!==null&&typeof arguments[1]==='object'){var args=arguments[1];for(var property in args){if(args.hasOwnProperty(property)){regEx=new RegExp("\\{"+property+"\\}","gm");str=str.replace(regEx,args[property]);}}}else{for(var i=1;i<arguments.length;i++){regEx=new RegExp("\\{"+(i-1)+"\\}","gm");str=str.replace(regEx,arguments[i]);}}
return str;};window.isNullOrUndefined=function(value){return typeof(value)==="undefined"||value===null;};if(typeof Object.assign!=='function'){Object.assign=function(target,varArgs){if(isNullOrUndefined(target)){throw new TypeError('Cannot convert undefined or null to object');}
var to=Object(target);for(var index=1;index<arguments.length;index++){var nextSource=arguments[index];if(!isNullOrUndefined(nextSource)){for(var nextKey in nextSource){if(Object.prototype.hasOwnProperty.call(nextSource,nextKey)){to[nextKey]=nextSource[nextKey];}}}}
return to;};}
RegExp.escape=function(s){if(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}
return s;};if(!(typeof window.CustomEvent==="function")){var CustomEvent=function(event,params){params=params||{bubbles:false,cancelable:false,detail:undefined};var evt=document.createEvent('CustomEvent');evt.initCustomEvent(event,params.bubbles,params.cancelable,params.detail);return evt;};CustomEvent.prototype=window.Event.prototype;window.CustomEvent=CustomEvent;}}());